%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: leviathan.dvi
%%Pages: 9
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMBX12 CMR10 CMR7 CMMI7 CMR6 CMR9 CMTT9 CMBX9 CMSY10
%%+ CMMI10 CMMI6 Times-Roman Times-Italic Symbol CMMI9 CMMI5 CMSY7
%%+ CMTI10 CMSY9 CMTI9 CMBX10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -D 600 -Z -t a4 -o leviathan.ps leviathan.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.04.04:1348
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 47 /slash put
dup 58 /colon put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA62096FE53B3181F1
34B6A0FC125B7E8B4447C8A5E11A7F414CE043ABAA584B2F67DE3FE1325334CB
63B98D4A88F8D5306D7EA98B62723EA709806FC982EDF78271ED4545B07C4617
EFA1A50D7E2D02E904EB093B5745BDF79F8143589E6296BF025CBC11411F348C
E687D0E97CF4FA509B30E1E82D6E03DA737F760525DAC028AD08B70B6F14750E
FC9EE46958A6FE7EC484B84DD4DDD8BF2C4162E29745A69E7717731DC3556B48
BF53EDCE1499F3925DACEC43096E1743E2EC204EA0883B4272A2E6FFFE12A187
49602C5F4EFEC4C0CBE41CAE0129E9F3CB9D1D32F10FC1198E32511F945E1172
87AD86E517267E421D345D782334244B767EB7651FF0B70681E8AFCB58655A8E
02FA0753A44EC9E581AE3691C027FB01BEDE9F738284B246BE4FA7493A92539F
FE7664A8A8D9BF3903299A0C81E94A8380D89096E480D7B112A801A369534D3C
3A0CC1CFCF4A01F9BEFA8EB263C089CE1074CC656155ED2C2E95398C0BE9BC7D
C784E4ACBC3A4A0B6E6454DD3107E2BFDFA2EBC7A3E2A78C8927F24C016C102C
FA346BF944CBBB0E7BABC0413F678204811AFB3C12D7E0B65E32A8EEA690C33C
850A8BC6988EC47457B2253F632FE978DDAF5E0A70C2137B983B1A5F867C0C10
36B2DD83C5BB5CC6161D7722B3ECAD7CACA869C48B50DDF960297D39DF2B708B
EF605075EE157E6B6AEEC9D5B0D1C9641E59CE041594E0396A0BE4B3AED032D7
FC1564C2A4E47DE0CA1168AD094354299D29BCEE77EF87B8A5D2E790172D4585
FBDFDA6D354A2C284EC40EC00C947C89359505A0025D7C70D0C35223B51E6511
3305932CDB1FA7BD0B36275E56FB1984F22890699F277A3B4ECCBCE4AB764ABC
44BA3828D3FE52C4BC4488888920C46C2DD64C926898D26456A4E591B25B1579
7D12E8B63E1AF7A4CDA36CC832791E384D040995605F8A12641F7704634D6211
C95B73371D4DBEFB138536D298F876F49DA284047744C14EDA3CFE248C560E12
1A749DAF788986896FC47F9E35205CB31B47CC13BB906EB851B96CD7BF88F9A7
2B333F98F57EEF40E66F956E98933A8C0E3DBB1D009EAF6894363B2114294E66
864446DAA5CE2591121512CD3DEE77F3538ABB1119F13CDF297EBD29C3DD1A7D
36888959DF2DD5A8B3C609975BFFFBDCFA2B43B9D69006FD89EDB61B7CC78503
FFAC28422C67E92A2BF19D25C9C7BD51FAD21526CCFB6CE8B1B6657C2F4EAA87
6F908A2498C925912F3ACFE7CCBD41405A0B1606AC8BB2B72748D0ED3FBA42C8
36B1FFF4D73C1E4240BC1D0892F938D2530B03E203EADAE6926B5209EA8F82B6
75BCE2AFF776AE202A613D830FE73077BAA025D95CBFB967A0A0E2E69D33A9BA
1488C5E9B527EA5A322865AC63CB8336DB50EA7E41F37E5FF7F5273613BCDB01
83E7DF89DF4A26775F9A196E00B236E98FFFE986AA26103DD0FB557C5D4F61EF
32AFE2F26C2D4C52F9E81900E2C574682E9EBDB26F937EDB240A347835DFC37F
6FCE038E4FADE87EF02E8717E72B063502EF3609850DE3653B1E50DD51DE9380
6C8918FDCE7119875D025E615525C6C505D8C7BF8F365BEAD85E0863B8AA653A
72726BA998BB2EE8822F027E924ECBB4A4D083F8A65B151F5950E509D570CA34
EA88AB94C3D47C0B28B472E4316DB36DA797033A142BA24DC7C01938512FD2AE
65C0AD0C8D67E4B62D8AF5E5B69557131EC9FF36BB8FD180DBEB8C6664E27900
23016C64DF99D6A673042874C2DA11F0F919F1EE7AD68F1D1381121700D55C89
3171AD4973DFBB8987FAC4702A5DF2A04E305300156B3DDFD5D5B921326FA824
06B892F162985409B47E3B1842BCCBC2B94383FF19B85128A892B455652332D7
89BFFC7D5474A994BAF60B90AFC8984DC9C805D7221FD5C1B43C5DA03EAA9B7A
2A405986AA2608FA5093B0EE821641CBF30A08873AA0DC44D4BBEBE40D1E7A17
2E802E3674D41BEF4310D60BA550AB05F1DF20E059C67B1389C3A83C84FE0577
EEE172C6C465A99363566DA02EB2EEAB50D0F1F91DA31D5695DEB8413D47B2C9
1C67E1C39404ED9139409A8546C644414B9FD82D3CD0C9158C63023306163EF4
EE419A3F42CA83DF7720D2933F0E16A8FDD981E17C23CC27C4AF34B9FE7E1624
1DCF6E9106D19E78E2B5D322F421F16BBE387BF4575FDBF61EB913058EAFA7B6
D225C5B646BE4FA728730B3CD0F118D1BC58D109B587376FBDE961A6BE02BA06
89637C6A4CB358715EDF2BCD26C70EB5B92E87054EA95E9F1BC58DC4C28836CE
7935FE6F1EB07E582DBB77C2D16F282DF41F1EABE78709C850132372DA6627D1
28FB819C04182347960A00F960E822D32ECD1E3C7C1CC2221BD97B3D60F9154C
FDC4632B2BF638225FCEECC78F457CD7A00DA6268F7FD8CC83C4ED96BF7B354A
71EBE6B9266AB0F48D2D638F2603961E98EC2E301108BD990CDEA9194FB4EA54
DFE95C6C9D6E8DA9F0A43872BC3C6D061095D33F189944A8326F4CD0005B64A8
63E6767D216EEA49AE6E4D76B9182B74F89E3DF00DE0CF1C652EBD376C96E5CC
6943CD44C0F435C0F294DCF7F8CDA2BB60019B8BBD33CEAD493E07386B1E1941
B22BA90A6D80BF2676216907A00FD7564C3B17E692B46C5BD258F315EE0D32CC
D5E98DD48F359301614809757FC25F94E3AAAE53045419EE44816C71BAB049F1
3DA5240D946BA3569D9549CEEDDCFAA6139B3A5FF9CA3191D8524C41924CBCD8
149AE58DDF0B84FF36315BE97F8A4FEB8B07E99E0970704ACCEE9A057DEA04EB
E52A97C44A76D264A4EEE4981186BBD336F7DFE34E11D64B5563C83780B690CA
2530CEF8B8340D7B3DCC2715720AB7BADF1487FBE9B8C9C7AFD5E831ABD0478D
77D3C428C8EE6E33D85CAD34DCD4681B9EF410C236FA2665C439C3343EE6D7A4
A2CBB2451DBDB4A8E139FEB045776D98B6E4963089B8AA5932B0181394166892
6B3FF3A57C7C6C81BC7C64A6EE573A47BB806233F641090636CA6DF327B05850
7B8EADC68932E4C847D33B6BC7DEA1295F228C146C29C098C0306A5F306DD983
14E5E4F69A4B2344A6BA0EB4A1CE1A3ADD16B0C70BB58F3A223A7686CC75FFB5
8C9933FD3F529331A998A21A0D5E089CC453F7749E6B772AA166329627C6E7E0
A4F8BA9D1007BB9227207123506DAD7030372D7B6530CB641BB23615ECEFB5CB
9455C566B11F6134F0496A9D64C4AB5F6635456B6E290033758F16D7D1EBED8C
A8D7B8AB3161A3B2B35811C1FD313DEAF92998DA3DA84322852F850E7410A4F6
38EF980521238017FAE75B59196D4FCC9571B894D3A91C969B72319E00BCDE57
32DD073B74EFF90F2416C273919B2DFAF2D43697312474AAECA1CBADCEEE07B2
86C130869FAA328DAE48F251740D344D0C823DBC14086FD6016E026B6D83ACD9
9284F10E06538079C6A873C49BE72B7ECC1C8EB475942752CC7F2D3F57A43090
403E2E7442DB14C8B78844F3A7D38A190A2987483C67AC6AE5ACB01A5CBD3A13
D14171196C0FB5551744A1B847D10AEED7A85110563C693AB28ED1030DEB951E
C3BDD59F4BFF92138151241973ABDFC4F0050EA9465EE81AEBC60E62BAF29835
0234371791A5B4BF6EF0B3268822A566378F00647A87786585BA0065940F2D78
335214848401D353D4BFD0FC2E2B2CD35D31803013654C3C837F0BDBFACA6E48
350E46BECE8D6F4C6238E23674D8BDBCC525CE5692514BBFDD78C814552D3642
8A9B5F47DAFC0EFA9DD5E1C19C37F6C0FC3682E57D463DA8E248C49873019DC3
2146B3AF65C1F73CFC0CDD3E86400F1699767E8AEE50D15ADC0E62FC3F32B7B8
282E972F30905F45B4382A50B5FAD7E527D2C88ADEFB893C66C886703298F938
2CEBA15362B73A3498ECCDE2AA357856E9F3B522C46A277A8A90274A42636AA6
AA290A26F1FF78104618811120F263C706E0E3F438B4327BCB153FF69A36E841
45F3C2EC3200AFDFDF95758FB1BD05C0723AD5F4201CB5A0A184E49F51F32391
CE88ACD8C96FE4F11D5EF97E93FCA3CFFB7C2ED2C6E74FA559EA3800A39A953C
3CD0500E7BB3054C722F563706F7FE52C9938E4E78B3B2DB2AA9F97786EF2483
657CE61482D3A170D43B706DCB85363288B62F10D2ABDD3BFEC7D6E90999C311
00806A16348073E0691AE43FFB10BF727D378998125E531B10EA6A8E6E14BBB7
2CF51128AB90C25E089EB602D95B62DFE1A4DBC4349F966DC5B5FBD454535B1D
D80BAC58832435E77D53B9327215281EDD4E971B662EE595EC8C6DE101BFED3C
CE0E90A7F68B1B3026CBAA336DDB4161DFFCB4F5036A603586F074DFDA3CE797
60CF75EF3EEF1EB55AF9A6D7FABA972820433DD9D8DE94440C5EF448C3BAE6ED
C827C042EB043D09BF108ADCBE9D2359BFF018F7C555135350D74D647D5B25AF
F4BC6BDDD5E2D23B173239A37F0D3C890584D1653FCF86981B8114946DE17F82
C3EC9F941B3BB4A1F62E5B41E586D32D1299AF8B9409265F67E9E857DCE250F5
2CCB4E42A02DA5BF56E5E14E96487836F95E098CB3CCE56ED3FDDAA8E9A7C86D
C23B5B4D822140EF446B96B0D2795F6A40F5D05A51FC6AD2D456E2DEE809F6D7
A2E0800099D52EA6474FC25E84887CB4B09F674C5DFAED91A4C587A559D89C45
8071E1331BA77AA05A9946008002FFB7647B68753DBDC8B8EE8CF99B91D7D712
F037E55259A982B26424C138680ABC593AF1B7AF1180E82E584521E54F4441D8
D72EA9032393200C2F0DE37FE23BD995C12A5BBAB3E12089251A25CC1E553F7D
1DD912B78C585546DE36AFCB8774A545D69791FAA6BC5BABDC1EE5960B721272
3FBED639A9D43F3742AAF6E0165C9535D8A7A18393D18993E2B8AE1DF743A672
504F5C311B488548A5EE09946313E238CFEF3A291D4EF24E0BC2438FF6DF60CA
A588D862BC2772AED76FDC07D26BBFC6326C82B9491AC75288718922DC70A0FB
649BFEB0EA0D70F8F79946B3BE48D4D4153C22CDB5A33090A64262219F762A24
22CC69B6C5232D48685F2039308F479E5FBA9D35A9298823F91515C2928E6148
B9E876989AF2A9C3CB834EC51F5DD33265467C456AD1D7F5CDB2D6E21B88CDAE
5AA05ED6E6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.1: CMTI9 1.0
%%CreationDate: 1991 Aug 18 21:08:07
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-35 -250 1148 750}readonly def
/UniqueID 5000827 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB3DF7BFF10C9BDA4EFE5F68A8CB1526990D1357AE6D2F7C2D2EF8496
4E47B39E6712EB8908A3265E5FAB40567E866C244814449F1E993AAB422C3F1D
DFA8C7118584F2E5197FD4BFA3A8AE9E953C6CD4672C0FF51E41C3A919749C1A
F06650DF4C5E17492164BDBCDF22609A74BFA7F69960A64B9F949FFC2A807458
8579366C4F41BDE1FDFBCC4845FA19BBB6963D65EE8532549274BAEBDFF24FA6
03235D1BE37C06B1938AF369DA75BF38DDBC87A1FF445EAA16E1895ABE9506B9
211955753E447865D33CEF007391D2666A046277A30A49804FFCED3FEA5EB2C3
E52EE14A9F75241EA10C91974CDA6236EB840FD44D6DDE4D9B3266C3B99BD38B
D835BCA8CB819C073480FB972CC028D218F6A1D344CE1B63F4FBF2C826F412E1
6E0B05A26125865A14FD7B7030B478BB8BC6BC395335C3BA940E1C348267F4F9
0AF97BBEE253511940F1048E175D3569F7D05A28851B6F50765FEB6C9654FEDC
1BF52F535DB5BB90C1BD5D2EBF75E0AEBE82B20507F3C28A03746781018D4EB2
298E4F2C27ACF73FA73EBE43F014BB575AAD516C0407B29E1653375135ECB74D
C91372F06FA8EF37C31AF3FA48AE65318EAA6C34830A5377ABB2DFA5DA53A574
433484BA1466709A4B186761655C8E482833B697673E847C691079E7F1DCB8D6
1AD91101D757B83E2090337D525AEECB028FB3C9F6A6E6AD2F322CFDC5A833E6
1CE4EDBF41FD34FD61630581D222F854A76C2EA9FD72796A7C9CC1F6C2FCCD16
E95CA05826A4ECFADA6A5FB83C41A7131E52BA6585DD6DD78515D8F7327DFC6F
9404F893B597D3B028FBA59CE53FA36596A5DE0D2A2C31D8E8201FF6C0059AA7
641615376014DE55614835CECB7C869CDF9EC4018A155B65FA13CA8719FC5F3D
B5AA463606D7E7B12E78F3B4C7C668663D8836C2AB894ED3DE0B000AB82C9F95
247FF0721E93A8E22F6008542A12AF1049E5FAD34E0659E7E0468116352D34B3
9285E2DC971ED74A0C70D7543D8A41B2AB827E17FF246DEE82605D627D9FA16B
1D3D7FBD5130CDFFE10EB18E33649A9207C7A92E342DE762F1207FEE9FBBC8CF
135D3B799B9A90D48116F203E1B8C5A18BC4769BFD64526573DFE15D2DAE8075
9518CBBA078107C6ADD1E0D348BDE8D8FC6A7ED02E73AEE6707E4E09F8A7F782
AA3C4C166DBDE0165866B2C167CD6F92D51FA50EF874C5C40ABDE0D361F4A527
4AB2E19AD372173C530F3171A4B1E80DF95F312E3E7E35F5C823D129354C8148
654DC0F556C6A72B59D471BAFA0F9422B6EFE31A7DF4B760612E5F5F461B3B52
8366C371446DFCE052B24DBF1BD345536D20D3AD98E62E68E369B89A3D1B363C
EEB90154053991A577358B315CBA4C809FBB5C897F4D60BDC1A3210FFE6672A2
CFD32E60EF79302F5763B13FF0B4AD21C3A4B4A57352DAA9365DF89A61FA4960
14ACA99E83E275A226B9BBD9B700121EB46F7610E926F2C9A376B3D1566557B3
2D17FA077DC38BD5B101A6BF7F7AAAA20BD602CBAF8F9AC64F3A599C573373A2
18AC206ED4FA00E849678A20FD0EEBE82F90969F7805A01CC98C0E787690BC3A
7F7E8C5A84DB38BC7DA8FD7926D097DB108A8069C7B85AB6E7C45E8820D8E2E1
9700AC906E55F56C5253F11B447B9C12B1ECB0DB9FB8A98CA769F8913E77EC81
4235D991756618C3B2082FA6428696459C894167B436CBE0C746DBE5DB23AEFC
A4EB3A9DFE08F80E8D8938AEF46248B6671F6EBA894F8D500953EF3F60483747
32B42E27E32C250683E4E87524DDC3BC4CF1848097167CC81D421075AD5AAAC7
40E609C9FDE1C73D58DC6A7A90FAEC47C9282DDC9DB51AFE539AE25FF7FCC0BF
447303F613753E338D2F4ACFE4D981F7ED325586B863FB1422A9A568CA8F3233
A3A6CAC0A8773CAD10ED9A5A2C0F93A00CF8435623932C86B3DAA44AED6E8709
6FF70605C87145EDC9B37AAB9D6B4498B6B817E82C73A2F5D6F153F650DCADB7
5B9005D84C4DC93FC0F29BA2382D55FECAC581E69CB288B6F5A8E5AE9EC49F05
94AD9D201FD587AE214DA8159BB96FCE15260132FF605B2D83751EAFEF2AFC0A
FF67181B85E7641C06073B656A8C6FC4322B63B4BE940408EC2588CD4A2B7E43
1AF3B58D0247674A6658CA2A95DC6CC73C611A07816CE8599F15CEBB3A8CDDCB
D75CDAE78479F30078710695AD3E6BC390E6B45C84B31E328F6E6C719A4D9CE1
52B8AF347DA838372D77781F4CB2D5AE8B227A360147F041605F5AA4664DB4BF
FB43420B2BFF5CFE84010AF27C0ACA950C9D2F89BD978364AE6758984E4A218C
1B5B71E9449BFFDDAD3CDFA7CB12077A0B166E4E023DAC4D62F3B30D450B89B0
89B7DA50467153335F991162E0C0CC7A3DCFB519CF9144DFBB71E6EB991F8B74
D1F2707EDE72F6C5A073D8CF34900A44FE4303A29E58EC0B4C5C4F7D4366E899
AE767E3954788E621AADB87FB2BA9DCAEDF9DA63A04FF118462F2E80CF8811DE
BC063AC30780E84E35BA0ED8AFF36E457271CE07962287EFD391A30F63ED13E4
09695FA7F4FD9AA2236905CFD4510C187DD14E6D3810078FECF37254C135C77A
E6F975EE70D7C0AF612C98B40CA5968EFE76426D506B033D7C2A7F06200ED448
448912EDB55687711896471C1B4CA2469B0F9DD6B5DD381D9D02B494BA15A9B8
CE512A1A20012C7B7F4C0758536051D1B6F5EF59FB007EADD8D8F966004C1993
7B722FF784FB750EC0FA4833DD310B50AA7807A3A4E078B9FC5D57279BC8C49D
C602CC5EFD3E66C1A82FC09022C14C9E68A9BAE6FE977B4CB315C2D19B652FEA
0912E4ADC24AE22CB00DA6776488D62487777DC9B28E2685CDEE7D12F3014958
3C9089B8AE21F7E7111654B9EBFB83D4E4B639065C31A3BA3BC3062DD0BB7DEA
F4953872F443994905FD73CCB8C68FDEDBEFE29E283A6ECFD571834456C53BBB
912BED1DFF4CEB65C0986AB28E679E749148A8E307A9EA98C387ECE4A6A806AB
4133024587CE54113BCD640D88B827C9B9D066C0083B395FA22631B3D911D7CA
BB42ADD6A870F36F87CF5057E728D0B44DCBFFB3A1935764769A8D973036AB47
A01C2441E190D47D8FAFC3DE30E15ECDA9443ECAD46648E8448BB648BD159A1F
3B71759540372D0A9553A670FB8852B2AA6A54FF95A0007B6F4DCCDE906D77C4
6807449572A298BC78B455AEE89A3E6ABC31F2280E3496C5331662157A73F5CD
54F093450031B999038A50738DE85718B7FC2281CE09FCB7E48DB120CD51BCA1
A390F74A049BA462C897F28F25CE47DC6BE35541F2360A092340D53F832B952A
82597B86614D322F3EBF3D54BC829C202105DE81E37E1E91DD8E9ABD70FBC57B
DF3826B071298FE888FEB5C8639144B11523C9832C623C65EDC853D3AAD9E7A7
346D2741F7C3FA383987D65566332B5BE0D0C23D48E69CE764B43CCF1D0D1B7A
78EFB8997C14E20CB7DC12A1BCC41839FDD02FA96886900EDD46FE8CEF01267D
32A7D95011B74875C105A48D9E7BA29FEAA6D3DF61F2A9C7AA9997A7C8525221
719195D09EEE712426C935BA4C8D3652234A8BF59BAFD50FE209443C07647F50
7C1CD8EEDEF1C5A708F8DECBE63F531C7C228E43A4637FD4900824ADAF16A50D
AA7E857FE348ABBED3BEA55C3F10B64A273916173D55F19CB0A4594936C9C396
C735A1D1882D60D06B268DE77D4E4D316E7AA9B338E9A7EE114B4046A990EDE8
344D0014BF4CC0512AE2F7B1CC071296750A3AC3CA00AF30AB365FD0DFAE082A
2611989792702EB2182AF5E1244E59FD371234C530B1CD79B1EE217B3FF6CB45
DCDC79DDB954A5B4B8D3DFF397C295D3D7CC240BB9E21B74147F43BAB1246051
2BE40BC6B17BD7B6CBE09914346147CE37CE699B8CC2D8C3E9DCE239B0586D4B
E6E76076CA8E371E9D687B69D1F9E90835F610DB6ED2893436EE62D30385D389
8DF540EF4B83E1C0F4E375762F63B8BE429E086978D5A524554D7EB3539BB094
B5AC8BF1B196EF27F79D8403435272EE91E0F774888EB666E3E5918EB547B29E
F127ACCEF58F08B8DD68683DC22FDC7C16B063F2A56F54AD171C9280E4290CB7
DFBD92B67779BB68F719B1E61CAE8C5452789085108FED4291B67869C1D7EC17
0A018329FE54D3B7FDAE0A0F38ED985D655E849504DD3439885CF111436E2777
26D91243B5FE55540CB26EC2F069E503F761B43A9FEA4BC3ED11A3B685129A48
0510CC96741873030335737D586A1B8D0717F74034618C9918E64C17E1CF1E27
41437C34F32339BB9FC5E621D5C7AAF78246B77A84669B7957ECF2A892EF56EC
8FB302E9FC5602B329A6794E462D70D29DC84D9618FB1F2E260977B6500CDB71
014E890A1EB18958E5AA77E50E4393A786608A18D54633563E851CB614BC71D9
37349F929244239610D329C1798B9BBD84BB61D08C2C3DF4607E593D5976E0F7
7C29EBD4979D1C9C1DF2876B95DE6CC7E7B93868C8388421D0696A4C1607BDDC
67998E83E53C49BB5DE4E769C03DDA0FF38EDF0C83F37795AC5E72F57F0134F7
3B37F9FCB4ACC71EFA0AB299D305499F74C9C4794F6FBDAD1F7D092225CB3795
1D1A20679455637E69253011347CDC75FBE4E5A07CFE9D3B3F3265627D088BE0
D6CEB41061FDA1C143799161D17A47C6E94C19035BC6E687D7FF7030AAD2D3E1
E808A15C34105BB164C2FE2D4DB332F69CE0EA59E6CC679D7E0FA1530D827910
3F8F2400ADE4097DFB967C5E4B0B8D8BA0BA4B9DD68F804EECE4CCFCFAFB5865
4EEF0B777440218A476DB1780B8EEAB29D621BC691ECACB8503957CE07CFE7FA
5AADC85DBD5D896D40391E964EC9D3E67D4F9E1C3C933B5ECB229056FA7881F6
69A4AB831F6ADF3AD59474696767AA4CAE3DCE107778A3AC00ADD82681555901
EFAFA14BCBB5BC2BD8E40B04A4E2B542F9EA02DD70A203523900FFDBC6FEC98C
F3AE09AEA6E5A156A2D4272A2334A4604999E8CFE0980230DE7242808A470D44
0D4C0E04FD5CF39869EF75E5E6AA95AEA97F679DE7217AF0978629CEEC1E1364
ED910E9A94F97633469F5F9FBEBC2A8D79C3618BD6C608AE8819BB4B1A392501
5B24AE0CA515F80908382131AF6D6C7500EB69900459BA671FB2BA344603E409
A073F78D7F0196F98B7ED09CFB65782C13451906B244C70068675C3D136C63D7
18AD80CC439BB22E2B5401D5E0E586D368716B23B5CCD9B5CCB3749A20206356
22DB3A3162871D2F0C0D3AF431BAA923373AB0805925C2934439755772260294
1AD514A81EDC68CF3E2DDA5F9D8139257507A84A9B62A196D6311DEA1BFA94D2
BB9F54B67E23571910AC1F4AE6F66E15B098D82646CC8D1703C7DE7F3ACDD7B1
BD714ACD38D27BD3C5460269657EB0779192609717DFBE5933BB524EA395A828
79D1C9B536AC505E799C0C219B4F6A27DB95ABD13A0666EE83891C96524965BF
BC52805C456AB88B8BFECB49354FBA55AD8EB471F7D7FAE46A4E917DAE76EF93
D6881BE58B2EBAE77FA41038BCF6D3F15DA0D5F7FE4364B019F2BD61D4CBB539
0FBDCD3DAB36B42823FF6C04C32420C3879C2FDA19F196433FE8A3D9013478DC
BD9C50AD4917D0563871607DE926AE3147F46A27F4451BB11C7318DCE9FE867C
BF2FA7C802157B9FB3CB312990472F9C2048FFE2C4AF80AD415E72CE20E4A11B
1FC6DA5C50DD9AA6E929AB63F5774D2469B5988B8E520E0AF960162ECAB1E907
38FE33F15487E5F99EE86561D773E6C48E2467C6EF78482D3CFE3DF8D4151641
223664D8DD93B9445DE23F714A541C44318912DF3F1AE22ECE433105906C9799
6BB7E11B85772351D0A90B77F9E9AB06ACB7BBFD552649C499FD53AEB5DD625E
EE31CD5508D2CD2FB58A42DBDA4F608A031BA1739CE90D2BFFC78E719DB061EA
5FB3681B0763388E277A2CBC50E9A340BDE23B1BA233401C5D954C4B4B60623F
DA9696DFB85D945812E4C6853E3D56E7646E7B84994FE946E0DDF8BEB5147CFF
1036F8FF6A8C1E216FFB32F2003264C7583B8B1F20BCDFD8FDAF3EB2831DB5D4
8AC7F1AC2E826EF3CBC8F5B72843B9B35A6751A8AF82CA9634C870513BE98314
2149E3546BC417EC1DF1AC3179D3BEFFF8A2F4A3F74999D76CEBE6D600DB4412
C334C39C3FEF925C37FBC4A975AA55AF8ED0FAD747A25F4FD986C5D042F62F04
D4DEE4A6190E7D70A22C039963BEC0CFE324236A9D37B3F6A4E67D4BB59293C1
B0875753B184B330081430D507575787924F5E152F6C3FD85B859954C91134ED
738069E79D85570BEF88D80001E9CE22894242625EE77654C1DE55D87669E760
750924644D8444A9F749AA6B1A14AB3768AE1ACA545C2FD8052622669705BD26
9DA7AFC398944BC98A9B296AADABC86D0A13569A54638CB18BB3ACD052E43968
D0434B5C9670552564662628027BF06BB72B6C2FC7CA14AD2DD20A244A05560E
8CB29837E6CA35DDB9F6AF6D6860FCCAB9FB74198DA1557CA7A424319FBA598B
56C113C0E3C03906EEC919EB4A0419024474ED02311F792B5E7ECEA0F6A3596A
ABD9F3CBC0B1F2E960DD3AD1B2C017D992A0D25C84A379E1B79231B24D9A6EFE
96C1E9E48C1CF7DF48D49C2CF72B557D2C52A97D5E98F1531929D607DC1CDACC
2409E1C31D0C512A8D57268347580D98151DEB5FF10BAD72A6610ECEC43AFCFC
F6F97ABD934D1677BFA364B62EFE94F04FAF1F7B41C50CE5091A6B3E01A48869
AD82C9F71EE5254CEEAE865D2BD2664DEBE5FCF3E6E94D873256028CDCB6C341
52B0EFFAB96AC43B1D7D33C4742B712AA225A2D30DC653C43D64595E6817153D
53F8E607216EA98632B938F2CCD53B8A00F5F269FDA24C96B95B86766AC3F819
30D5AEB61D24C9CFE081387FE4D842119054B1971C32914B10C196C8AC8155C9
537A0B14F3547E9DCCF7EE8C87C838F7134043665FD27CA14D90C09E535482D5
E09D8C4A2FE6969F8585C552567D516D25422E634963CDE3606294115218B8FE
95A9D4E15486863B6E822FF6C1708F916BD2A8EED9E245847F70A472E96FF52C
62E61059999DCA367C1CCC85FECDE73F2F5657CCC9CE95839BE897DDCB7B7AF8
A9FB4B305C911BCD164597692234FC1DA7CD9B116D7BD057AB599BED428A37F1
440CB1356026C2F7A97687531FCC2B0A017C9A58974B637EC01063BB77DAB4C2
551E308716FEF255F0EB92548C2A4424E398152924C444200D957AFF896F16F7
4DA459181028592688F503A5D0F7D8F757DDFE07E26C259DF006CB2A397F7562
755E614B77D0747EF48DC857F597DD794722617EE6C7C6A627ECDC3FB97E6FAC
FF92C71E82E94F433F10940963E9CEAD9C6758EA8E474F273BCEA4D1287E3CA3
3CA7BCB1D05B3022498C79673CD1E14AAEFE389D427045C3CD3FAC3A23FAFDA6
F67AA61989F2BCD4B7EE457B26A7393C5739433BA938E3EADACF3E50B0BA718F
06C49EE58D7889462A7425DA3B56492461355D916EE3D4EEF8A3DFC105D8E381
046AE3DFE1707EB11CA8580C3666E515BF7AE218548F676A748BCC8D926C0585
E9261A21557E71AEAE356B2D5814EF8A81801A5CD33FC62C0F6052956A27460E
7CCCFDCEB479CFD9F085F2A1E0B44BAD8433CC9183E08B727A42B2CADBAFAC31
FBC85717D40316D2B09604E76C7F008920854A1D578ADE84ABDE6FBFB8E70038
9387924D4CC8DD23403C8ABAAF8C5A8DD03AC1F9BA630090AFB55AFD72DE350A
058136CF79D1E56303211C2DC8FD970DF62B30B066A0A43D49D7B76DC6CD30C7
1EDC5E21435C6FC888A844D14DC07F963B3DF7B1CFCDACB753507D89DCA4FE6C
D187BD9BA972996E910D7476D61D513D56BBFC045305E6969E6C05D6C07C9A60
17914B530A7D7D21031FF2DF59C0EC44DB61097444BE1C5DB8857C11166EA0A6
EFB562533863AB91D42DC06D71DD38ACA25DB87D6FACCA33E87E32B13C45EFE2
8B7D512EF59960F6C19D7A2310516AB99B970D3027F01BDCFB15134D402E098F
C7B5FA46E12979E1E229026F036DCA4784526A5C5492D0C2033B11927D4EA5BB
F54075E6F71C2156BAD4101BAD8AC3C303A2D27A0EDE663B3A20F5365648DB94
A544E516B575B1FBBCAC635C97F8BD07E4C7E36AA0A8DD01880C78D781A519C0
618B0043079604A256558BB1B5E48A703BDBF4949B20075098A6C67F281B54FD
A008938648F4924AA9F60163504D6BE4D2AB76C6B86DF72A42578B6D04130AAE
A5DBFA6D73B4033A848A8616EB21DB140E8D772A1D7F3AEE879206310B0BCABE
E87D51D0FB30437584EAE7E076FAC67F88E52E20E5BB7778F1C2ADBDFC3B19CE
BB7419AF51524394F05F59EDA75C9AFCE509E669745247117485B36B71B7012B
31D3434C65695F64B7F85219B03425DF7B7C415407BDC37F050AC02D19B1F14A
2579FC2346655256F34C733BE16E21A2E5817CECC25F44ADF3B39AA3EA698DCE
26CAB077AEFC231C3549941EC55C7ABEF11F215C060D38BF83B7AF31CF55F6D1
4C807A43ECD374EBADAD79127EA3566F119D8537E168DBFD34B030EB00B1FF96
E71A0A95B71B8E93E4D56900AA79E5833FEF0C520EACCF1D0D0BD7AE78758027
7BDA2FF38103B4528D85D953E7DC5F78F30A5D3DC76B28B6BC145D9E9514695C
F759D1ECB968B786C5E00A40DC995325CAF9BC83B5BCA8AC00491471E4AD0BBF
54F11655712110DC3C20D93FAD9BCBBA4B957C720E6F7D8375D79459373218D3
C13C42FEE61E50C5341DDB45FAA3CFFB6939CEA2C36CCA7996FB9488A7EE3C74
497F181D61DA8B91B1950C730C02C44EACC5E61F7BD078EA504919552AAF6B27
2019333ABCC8B2C877075EB1989929EF6E42F0910B6BA7C83BC30EF5C4C85A51
B84B4B406EB4A2ABDA7876B965A4296A3494D267194FEFF74B8A678C8A41C74F
1DB9D839E6D361A3BC3A5D3AD9FD0DF9B71ACE2C9B63D028B7A1EA3E54D97666
B5C1E9BE957A8CE3F82FF76AD30D185C28D7CD2D12B0114BA33AAA43D5C39BA8
E0801362B85BC0D6BE45ABC5BB53847FCF06571A8373F570E8FEE141433504BA
58B7BA67C0D6519C21DF2E391219007621C8DDF375258D93B346A2031579F1D2
56412F34860F6AA936B5F649B693880F38C7615B47B7A5E6086448986D2102B3
BBF77335EF0763DAEFDB44A92B3C543653786A5BFBDB33F49C08A07F6A40BC2B
375EB11B4C52C3019D3EF620FEAE8F282030F5D82FF9967662CF8A449C4548EC
D543A94CFC954BE90FB12617C340B35FA3723B47CC39F87727C4AA99F9687783
4BDEED1C90EA02DD09717CD63F6662F9B1611748DC21467057002F23B851ABC1
844247B9F657389DE5CD2132664941E4092F04653A57B64E5A64903280EE3377
24B6D3C3E3E9D301798EA649657390C8BD2C72A679556FC166F9C9BE251EFAAA
2097875FB454C706E6C05585540C093EFAEE0D8D34CBC469EAD4AC5AC5CD465F
7A97951AA0E1E309117412D4BCB07E2BE55DB3D05F8238DAF4D7D57455D7C5FD
649F632F4F91914E9DE4281400D140DAD384D0EFF1D78E7323482580791C1540
24E259C75F6AE6347431C3F1A5380A847FA746A9179CC364EAA5E405A4B74505
0B3A9BAAD41CBF22EF2D74ACA4B0B5D0FF58B8AA20EC5C2F07A809951A06C3FA
8852D37C7050705C3D3DB179511CF6388D2EAC76CB7091C9A690F29A23FCDA2F
B42454DFC67E95846C0A61A935216DD8F2C60280BC84AB60B55FCA4FC999E0E7
B44E1272449373C2D3EC765F2CB583254311F83867BD01E37A0BCD29F0DAC819
CDC93A84D0647355234A8C2FCB6EAEF5CAEDCF33DFF4EFAA53176B1347DA8D02
46C7E8FFA037118283BE9A18A78EF17643F5B4B8682D85AD49ABF5819AAC611B
825B09FBAA800F8B02ACB413C72EE45F514F681EA2D6CCB80537627E22108D68
A5D4367E0B3F3143B2EE1C2F52409F614992EE188A5BDC1F693C5CC367AC6BD3
D24F1C982FDFFCF734AA0F9D1F6D484B2CA077C81F5A99C97459A510AD5B18C0
3C0D45F6F58904B10B63E2015F94C90E099606A6DEF99EDEC9DD28042EE95D45
EFA40A4DFA299986AF261D6946CA1BA8668E7CE3B1074C564F8E6D2DB46C3787
BD879F85C14186341FF5BD1BED17E5B49699F8409A3716E8DCD551A84BCF96AA
97DF48EAD63B433D3C60D960B04DB09C6FAF1FF5A056409035948F7B80049436
B23E2AFB8203083C59B91DF0B6540F7E038C1AC7B4AD6790FF36093DE5CC3DAB
236D183C345086A5D1631584D3AF0BD0DCDD0B496182659D3A0C0A47B1614E59
7895FC41D3033CE4951D4347F477B446806790F2725EC2EA01BDF94631EB0901
46AAB6F76D2A7AB9E748AAB8D8787535F850E02539719853A755A87025213D00
9E2B486AA9D31569983037891C15DF20A559AC30FB3BB7DDE0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 8 /circleplus put
dup 14 /openbullet put
dup 25 /approxequal put
dup 33 /arrowright put
dup 55 /mapsto put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueID 5000819 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D0037D33F24E2FAC2B0009AD3C8350CDF8CC
65BCA87979C36D14CB552E9A985E48BE4E88ECA16DF418749AF04FDD2B0E1380
D281BB2476BB45FF30946B247DFD7F57305FA87E50CA338121C71CDFDF927A9C
77FF14CB4A1D6D80356FB1171ED38C37702350497B44E42CE31DB2F493807DAA
15B887C671199A54C4C1294BC520F5538C15556BC43C9F62342B121C6DCD6C5F
491DA47FF360201EE21C08A781ED0589A6DF91B99FE118B9B29E4F068672E52F
1A06C514D91C4C937D4E642503392B1CD1BDEE97B89A84D903F590EE852B3443
3D892F9F2331713F45C5AF649C7EFD397A9F406F6C959BFC3A9AC2E03C2AD445
66D4ABC63C4FED2EABB0271A4E4DE252E711CD94EB671208D6E5641AF8D8677D
6D538C6C2CC4AB594238D9A1040B94DF2C0F7083D4B5B5F0D608B7AEF7DD166B
5FC39B9FDCA873D9A74560A2567C25FCA7E144F73FA1C534C58FD2EE27B97879
D0EB066647DEECEBCD1A25D298D1F1AB524F30F934BB1076884F9DD998BF0836
6E73A44B98A917B710EDCCA9AE6AB3639FD28964F75260589B7E6DAF8C08D064
D47145B543205406D40D2B767CFAFF5E7C5CFBCE7A07F2CA3C015C152F972562
F220AFF14511F8BE92C1C7C3E66A11CB5E17C9526F98AF29DF1EC5E987836359
C5F21FD2CF079687FE5254FEEB3260D67C2BAF3756950887E28C78BF14A4EB8D
9A21D5A63F54D2396874D7A8FD9474054E280F9789746DC7CF868CC9E09352CB
B162DB5378758534310BCB8F33A71A37BEBCFD78056BE6FA28EB1AF6DBBC1765
B8785BE5A0F3BD1156E94DED91A9B29AFF59E83C86FDC33C0B383AC0CCB90828
34DF936B59F3C472C06E4BB25F366C7D02C35E08B72C4D9AD06B4A56515E2DBD
07D6B30BFC0D1BA3D0EC12B48CBC1088B955194F5C7E772FDFDFD538C21E5EEE
B9AAF0C7869C5D1C0D1296FB0CE2D53EF5D56BBC7A85CA0D7525EFA415CC4FC0
B9EFA7370986E26267A128FD0D86CAA679EB352BF2BC4B1B90C8B49696C82567
180CB428636BDFFFC5C74EC80C0D9C26CF9FF453488D9EF55187B2E620DFD58C
53C0A132D97609373AB73D8878DF97A80D4376808F185388A397E563EEA07F3E
1BDB3D4F5A3C0D9F0E6281144F8C8E71BAA4055A8035A99F15A6A5C3140F07F6
4925721B506F7005F61D08E4A5519EB434FA7CAC2ADC7157E62FBC6849C7C18C
6B3644C78327F46AB6CFFDFBBFB6AFD87621FB4CB4ED85EE676A3FB94A8146DC
F8A9003816A4A195C7536A9117564FFBE13D3E0D72744ADEBFA9192AB72C052C
28B91CD2F3019D2BACB2C7FCADD711C6A5220E3F260DF18DBF0A2D293B2979D0
4CA6F288B6F58F358EF7A4A485AE41A724C2968E029ACCEC9239504584BE5CC8
29F3EBE39586633FD7AE08669145B3473740E99D485666CB2901894B3FE262D3
5F5CC96F7566136EB0DEB040797824AC2F68CC1C167C0293C7F31CA30487B99E
396DE561B731A6F954FCFB3F1A22B806E3E28FCEF8936DE621B1421B98E52A99
B83774D6C84655BFBA66A0179E55A4DD0C938281B7B3F5B7208AA1CDCFE40909
B3EC1585517799FC67B01F3EC4ED8EED1EE531612CD7FA813C2EF8938355D2D8
123FBDA4E95BD4295F254A748418CBF089C35381150D781F5E3B5C9CEE8CD63E
7B976547BDCA71459C67CD7B0F68DEF356DCF035BFB5D134348A022DADC552F3
A356E97C993B9D47ACA5B7A4B5F485A0B767F77D9D5284207A0354DBF908FB76
D0EAC721F2447F6052272C18A0135CBFE8FC1B389FCBAC4889AFE4BF63735BAD
60A6A837AC498051E5AA8A41E81E1E52A7AB9BB1ACA630E26C069B76BCEC9D27
94AFE26E6F68AEF9DF287B5D76B70BFBA0E61848C85797E76AD704468F3FA54E
BFCB4DAFCD8374B8EC6C1735FA99DE3C40E47F97E00BAEFA5F35C62F5D5AF108
29DD4E97D92AEBB239EE73F6D3B2C3C2FE253B110F80C47BCF7DCF7BF35A5BFF
9EBFACED408999FF19CBAC35EE367D5D3589BAB821326C61FD1DDD82B0CEA0E6
A4627738FD73A3FA2854C6482B1FE1E5BC383E02C2E35AFA8E82A6BF1F148E38
60077C8D4B4E7D14E1BBD9FC6347627D7D7579463833A3FCA6D3518D9A8D2316
D2CDFA2848EA1B9A7A72C12B2C02FE2041E237657EDF189827AFC9D740AF9356
F88BEF179B2FE74ED857C89030E0EA767355232070B7B5B2ED53345908814356
716E40B69F302944E21993313385BA118E852C729B1C3FFBF12FA622AA33C9EA
9813BD3154F626553DB09F348ED8A7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 120 /x put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
/UniqueID 5000828 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B3DA102B
6DF94E62408E24154BAAC66B2B249C695BC0FA37A28699D9C0F3EE94AA32E3C5
8F8D7F803B5D25014D43A353D719B14B247A87898A960DF68C0C0BAF70C83917
6E9F7B3ACC64DBAEF3FDCD3A80C0AB907EE342E543D607556CBE5A9089B86D1D
E768F27D74A613F3ABF883222A8596B542EBF54E9DCE327B5682AEE5F1A7A225
BF26E2AEA0F352B9C950B47ADF650E1B2AE31E883EDD884EC90F94761C470EB1
72F27B74049C2A13EC522271032939B656020D617F4E58DCA88D138F4C84979D
5EE89221BFD28AE8117B608FB82CC90DBBE7813991DA799EC3E491D05E66EC86
3FC44F3866728931508CB224B50406B165BE9324788681C22D37507038C0291E
A9494AF5F645F01ABD03DDB37CE51024BA97FD9598BC1B13D7913DFADB41AA88
6C35DBFCF24BC50885AC81CCC76709CD7355933999731D301754DFB6CAC7DB53
D0DDFF7B22C0ECFD9D861AE18873E7A0AEFE6EDE14549213051E81B2D41843A5
5C30AFBD178FBA4B3A5F5F63E143A03E6F8E7AA6A3A7D39D55FD17BA00D1FA4C
21E30026EAFC7A5576C7CD18DB0987A3BF08A536EE15916E9064722F57046D81
8FEED66E5BDF7C78DE381AAB7BC8D531DD9888CB78E6A3AD5726D3BC9640A7C6
C185A4E41FF98AA13556D8DFB8B2ED5A200D2B73AF664C146A7910B12B883820
3F8A3C9B032F9F4A3C2CB5EA8CC27331282397C8F29B5B36F11BB90878EEC0DC
765ED4744A94B112E2A59611095224AB22FA8809AA77F9444C5F23C620437A3A
CC62AD46876387225221A61A1ED3272E00FAF412EC131AF3C90C372C693112D3
E6194293D4C711A0EC70F046C34EFF2D74F0F5715DBCB0B3F8547E439765E0AD
57AAB235EF00B56A6AAFC4D5111297D6E63A019A8B3CA989CD9931C7D6A45A84
AB8C87D77140DDE858DC96C9535853C278E1D542204FB36A5625D8EF16C11CC9
44CA5D7D8856309B4293308A2B8876E6469E551761A0616867FDCACAE46D7F6F
C15C194E02F1C597899E2A313B5416A2B21F25FC49329AF63DDC98E43A46B8B4
A9B332344CD55E6075D82FC79F2024AACE753C70E2E41ED337B5132D09F97F2F
8AA25046E6143E7F3D2EE6F2D1DDB70C7C92094F32AE1567E990EB75DB3715BD
EABABB3A87B7027244B7A8ADB7EACFE8A07826221CC9BFE21C30227CE0A409BE
37469032F13ED19A2AA1D344D3389CD64361604205D6061CB86F0406421E65F4
7400F62356A2B022D78D3F2620C117D24060B42EDAC4BAF56AF5E43ECB87F4E9
D201DD82115B30C80DD44E0960A7FD0AB1B18A2E756253A820ADD9FB3BE9589B
73C24D0E86E0F29913E7495D024C26C0D3AE330C25B2E3EAA216D56D7181B7C6
5F28D21B44FEFC8901ADE313C329FAB238783F906BD56FF1D822A53AA6A8C3FD
12D45CD638EFA85A7BFE73B206293A645B8DD5A6AC6A534DC546DA554B24940A
27EE577A96B278997B9CADB008FB20E754B1CBEC8E0135DADC10F9AB88F592A7
10AAF9E5FD7023B7FB5C9212AC7E9C7F774331387F054889FB5BC3D96828B3D0
D12D039085248DC2B5CC6874A70BF0FF2244AECE5BA0939645DAB1C53C610039
D98F22AE4627E3B649FC412ED01E96BEFE31590F565D5379C14D7925407E5495
108C3EC1E9D889380BECD0DFEE63485FF8E3B846A3EF556133829808601B3061
FB4C97D77184FA432F81E60C773EC042F73B79DF27B4F425EC0B8667C9CF4530
900A3C9DF68BC207BAE6896A61DA5F899FEFBA2491198173817C0C7173735EE9
AC7C320318988E692511A2ADA57E48EBF2428A29F54FBB7747E7D17ADA8AA3AB
D38874FA80EF1C747EF124F4A1D5444B732F885E70B236B6C969D0A467373653
8D6A49FC46187CC6B81C43B42601A9C824ADB9B6BC5068D6C008E591ADA040FD
489CD99F2A25FAA832429C06E5E71BC6FC66CB659E89322146089EBDA14ADC60
078A045F08ADAA07FE8F8C63EF5B5D6E42CFEEFE828042549A098B9EF16A7FBE
ECF65B4F793627B19ECDD28367B321DE15B8FA3F07A80390467D3731C8E212F3
5FA8AF3909A4962FB26A4DF06495B8B35B5C31FBEA6C4CA894B3FEA53AFD7D51
510031E3FAE732E31C40A3693083100A4FCFD11AFAAD9C7270FCE6BA1E866DCB
EB970968956FBBF2A8D275ADA880BFF48AE22E51040230BC140DBAED53BC44E4
45B8C323AB7ABF0A6870DA60D9895535AD760DFB9E9609D5A9A1A8C74C374435
CDE7DE689C1AEB8AD832845E0DAB16596329131B9F017603ACA3DC905363F7B9
F07ED210D2EF810FED557AD37B038C8749AFAD593E77E2708E0AD84272173339
BA9777AFFDFC17F963EB67B2706C38E3D608F077C3684E59C84FB169335B8931
0F859D5587168FBE6A0DB754EE451F6AAF7C5098DCF9F3F45AD26F5F4EF9D825
0F19267C6E261A295120C87D97A4BE754561906E5C69EB3189E94D24F1E76D93
89377258366C16
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 48 /prime put
dup 106 /bar put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueID 5000817 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841804B020B210C0470066F33B37E2
05805CEE76C91696F62E34EA09B7B7D6D5A4009030F0FB377D84497D56557DF4
9B39A8B5B98BFC07D37F77324AE22B7B9C462D17C175A20B9F5E818796D45700
1B13FC4967F4CC16F5D3E645209EC479769A92A04A43761D8642ED0C9BF33AAC
9657CBBD4660088DA890F54FCE4DE3A70A5D89BFBD0328AA40975F1ED79058FC
D252B11651070EE2E1D6B86A7DEF832055A445C079801AF62250E150F630B951
20EA3A5CA079DBA460AF4B9A006F8EDBA9217C69498EE12A4C2FBAD690126CDD
C2BFDB950E5A0BE6365DC1B31EB68FD7D1F66D5A89CE4DC8BD5B3B7AFD5607D2
44286135026CCBEE87CD730BBE508CC330FB8BD79EA1170CB4413B61D6474F63
580A35AF6826AF26921A4832E5789FD85790BDA87F2845AACD44CFC451FBACD9
F4D4AD08F8E758F5300E49BF302D1DE694F1E149BB2D14323D682DE4E3804886
38E044CF2163C5179B49D5AA9310673D5425F7BA36716831AEB58E81DFDDD648
13EB3A26F52F70
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /n put
readonly def
/FontBBox{37 -250 1349 750}readonly def
/UniqueID 5087380 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BB201D5DB4627484A80A431B6AFDBBBF23D4157D4AFE17E6B1C853DD417
25F84CD55402AB88AB7EEFDEDBF2C2C731BD25567C53B474CCF739188A930039
098A197F9C4BE7594D79442B2C8A67447DE44698321145D7689B91EF235EA80E
B600AA8E238064F154284096C4C2554EFE8DDF13AFF8D3CE30E0999375C0FEE6
F992DEA5FC3897E2CC8B7A90238E61E41622DE80F438DD994C73275CC52249D9
F6686F87F394FB7BB668138B210BEC9E46415A1B58C990B81E7D7DD301143517
4C2A259D2A0A1E200F8101469C10D7D537B0D4D39296A9AB3F132DA9A3B459B0
F850E2B3A03BDCB35AEF82285D19C38F474FB414F8EC971B994D1C7DD753B271
2B71549DF497C665DF0F266988209D9EB616E4D9BA229FF984E7A886DB01FD21
48ED2E4859FD6416C2CE52537464EA884C8C9C2D1083E2B83BE4B766474C23B6
6E8EC5003200AB10514BB44D14CA700416AB6B2683E80862E7D5B49A05526A32
554BB23AB8B0824BBA198E3825CE82380CC0FECF46651E3E5D77F09465E73164
20342822F29572BC7F73F2C3BF95ED3BB6FDEADC20C6AC866C4F2C679594D7E8
8D944704A3C5D771DC39503BECAB89F34D8CDB8FDB91AFE21F3F0260D05E90C5
73E2C13DFA022C4522E5918EE25038A0498FBB530DA33B0AE238B1C6ED03FC04
2BFED8236E07820C5BAB411EAE1B31D93A2FA7C374B1725FEC359ABCB88E2C89
214529A263D795AACB0B95A3AB2F4E08EF350C282CE521716DBB06E5B8291B3F
5D4ACA230FA192F64BC902A4C8842C0F916F92FBD002ADD408BF0401D0284FBB
F05D4C6DB631420747CC902C5E1617E6573612FB26C8378DF41FFB5048D3CF06
4893DBA48EF4B043D760F60C75712169D16C83EE020C45369E443E853E1809DD
F395B812067D6FDBD26111B34F42C21036AF952D0D767FD17F6959D9FDD46005
D64FFF54772B50BB9B173AE79702981F58F9F235C591F476A31852174DF0619C
A470359153DC32610E782B204E7945515464DACE9099B81EEECC7EBD4B5126AF
C3FD9DDFB329AF1C95C41FA4A5F6958869509A23BD7210386329771FA46FF926
0E54AC35106253EE140449425A8670E1F92B178A02A58EB57540F4BD8110E548
BB584EA6D625C5F5FE0124A98E49915F1A1B95D2125874360EED1C4379FEF3C6
90E5780C20309F11F2F23FAD635C44BA030B39EFF083A3ECCDD2641DCC67E900
CFE9B1E3FA03479C9040349B7C63F51473EED2291BCFAAAE58D4570AD6ABE90D
1561CFB5D5B83A90DEEB7B4039EF75260D1EB12D7800A7F522E5BB6EA2B7A139
73F676AD32BDF664B3127EB25D22BA50ADFA5F1C32E559998CAB5D55DC5CAE9C
91DB8307D560218A70F2CC3B134B2E427992F744EC4FD58DA5AA22E969E0C48F
A789690BF677EC636EB3EEC845F630A579CAD6705463B49CD554C359401BFDDB
132CBC9A14E6C3AF8C21A258C1FF2A661D57384CDDA4C0A16A7E1A9E38E55CD4
6E4C1FF5926E43DC91BB6A45650A9F6874816A8CECCFA600D9C3C96A5C0668EB
0099F2B90D6D9E40E88636F2F25FABF2AF38AC85B6F92EFA319840CBE54B741D
693408BAE8E6BF69EAED5CC12DB6E5569FAF13AC6755AE73418DF68D15F7F438
C957142299C64DA2F2A3CFF9C78AFD366DE8269B6AA751689B24AC6DB93BDD2F
672F34E302D4789B3A3340BFACEB034C8E4BE29FB13651C11678B675F95B64F9
7063CACE2EDD9E311DCC4F4E83
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 61 /slash put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 83 /S put
dup 102 /f put
dup 104 /h put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueID 5087384 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D6F5CA5FED4F9AC9ADE41E04F9FC52E758C9F45A92BED935
86F9CFDB57732045913A6422AD4206418610C81D882EE493DE9523CC1BFE1505
DD1390B19BC1947A01B93BC668BE9B2A0E69A968554239B88C00AF9FBDF09CCD
67D3B2094C11A04762FE8CC1E91D020A28B3C122D24BEAACF82313F4604F2FEF
6E176D730A879BE45DD0D4996EF0247AEB1CA0AB08FF374D99F06D47B36F9554
FAD9A2D3CE451B7791C3709D8A1DDDEFBD840C1B42AB824D5A0DFF0E0F15B0B7
22AEEB877FF489581DA6FA8DA64944555101EB16F7AB0B717E148B7B98D8DBFD
730C52937E226545CF8DC3E07C5BA30739BAFCD0F2B44275A6D503F582C0FB4F
449963D0AD2FAFDE33BA3D77BCA9D1DF878DDAFCA2E22CC4BACD542B282164C7
97C2BDE318AF9D501CA21F6E662E7AAB75A5F24D2C182E598D175D44E88AB19A
E7CD59584F95B389183EE21B525BF52A3F23C0FE5383A5565A19361D716F508C
AAB78411CA5A4D27552CC1C435760D5A89D535B71C593E755C616661363308DA
A683F54ED0C23FB2C225A008392B0B719F66F11A946A090B7C00B662A3C69599
B4ECB0CC70C85C4BBBF207E0026F6C7A19F2ACFB7A60804FC98A4BFFD7BFFF2B
9529E6D9D4238002BBC255BC62959D6F3381FE06E0621B879D5FE5B541D45A1E
759A6E7DC32B1D1632368D09A97039DF255B6492B1B2B7E2C1434E8306ECA7D3
5A79B6D614B4979F10988BC76ED53A5F45315CD7DA216221F842FD0F3E050DD2
BAC23C984D506D8F7D614BCB6B244F5F41321549BB0BD041FBF3053307168680
3435E9C947D1214742BF6012E7A3A97DDE768A3FC21CC9DB967BF55E07FA0B33
5FFE5E103D7DF36F8E47207BE73DF56FDCAF67031F0E144CD8DD202ED69299FB
6B79DE1F3B977E64E59E06D0CF94FC0B6E7A66B30BEFFADCC8B4BD06A362CAFF
B871236209297E78496D568E174F53AAC682FB7C10FD46F6B88F08110C9DC21D
972BA4C31E7F8C8C71BE0C7D21C6DD8AF67A37ED0C79785F475AECAFDB3E926B
7A8D1A2374DF7AD5F72D8A42B45766F720B6B0B6FCAF347759567B49D0767291
B8F2D2CC1C05BA0CCC93A0B4678B57EB947D53B7C79EB0FB1C511246F775DB7A
E03AF7E4476A08BF760637D885D23AE73E756178FAE4331DCA7C00CF5E20AC4B
64896321A31A8FEC81C0952B7B520144F2A6276575B6EFBF49E5ED2D6C5236B4
B5AD28BA8B7C5C8BF75ABBB2C75EDD6BF3F3188DE291272926B6EB1D126A8F90
7DC3764BD1E734BEA8C82C5C04C9BE4FF81BD6B2FE27B8CD981DBFDBA41DC2EB
D7B8B74C546E22C9D4442E9445F77EFCD516C83E06EA3D1418CA280503F78736
37B2F4A52177BA49C649D8AE1EDD527D5EBAA1F443D9DF56A5FDF55F2F7CBF79
1FB038F55C48B412273F422DDAEED0A71CCBD7934E1488545AFDB6B64D2B0543
966CBEF955E4E52A3F1C481FC1459BFEBE7557BF9A6082A132E9608012A3EDC6
A343AA3B85EB82FFC06EE8A91FD7F0B3A340B8A0FEC001EB4EBBA5218A558667
9EC306684F76C9C8F759AFC52C699C0DF440991B659EC8175ACE221AD524F742
7E48100A30FF47CCC3EBAC6AEC855C0B6AE06F62426D6FB95B3E97BB13E2DB6F
49F3A931FAB916341AF35FA41F8FCF013613EB384D67F84629D5D9BEBC311E7C
2B6E3E9218B6FF9FE0BC34BC44B1A385CC83D8AA65CA58C4A6B7ABD8CEC5F926
92C5BFEAED8FDF3CE9B4EDA2C5BB1A10B99D8F6F7DF878CFDEDDCF4777607FB9
0DDBC8E9368718A3280C12B9E35CBFC390B4503E9FF0B3C2E3D96FADA63B0BEF
4A706A07AFB4C33043FBD1208D5A078E61208ED40649F73E4CE59D31D3EA9826
D97A3A80BB92F86FB852AE405663CAD095AEE3D9C2037B25DC21B3075ABF3463
06B01C17A4467D53BFDDCABCDE9E57F131FE5BE43246CB047C8746BD013731BC
9203650D5206872CC0205E52A97D5A787D65CF2FD6BA547217349EEF1F4F6B43
654C207511D8103882705635613CB13B5D0E4DF9AFD376D36942EA475A32099B
987354E5314A011F41C16D1BE3FCB9FE5603953EE5E5F8496FDB840604561736
B648EEE824ED721035583399588D0D938D4D3A4EBCFCA1A3A4CF016911CA1E66
86342030602D6F522C6A6C4357A2DF61901FD62D5B1F717AAEEE4F0C7D46B0FC
A7ADB0B852157FEE66B6BAEBC844DC53ACE8F6C062136103F17FC74E5325ABD8
77CCBE5FF0FB5AAD8F8EE192695CE386A8D66C44076F548934898CA42FE50049
9E8797C7FF4032889607ECB1CDCAECBFC0E98B813D5781886FE1F3E6EC8DFC55
9BD84C751266973F430A5D4D0F83FF39DCC3CBE663EA2E875A726612B66BD9B0
E131AC259CB7942BD8EBC4A2D4D424240839A95AF2B92D3C7C80013ED5C68142
EDDB3786321339239CEA7535448295417B053C979A3E00012C6C83289C2F3EDC
081A7653C90864CC4AA9A620FEFEE92E6F9B22D3FC83ECAD7563D4C96CAD9EDF
5289D37C8933B17DC0CC1C94847B32E58DCB982322CD783493B35D4D9D4ED14D
788B6C25245ECC661C5BC4A07CD480B6A2F675DFFEE7B840EF2EAEB5F0F9AB87
854462A0212AB4F9A00CE4BEF35CE4E5B7860FAD34065362D41320513569EB7B
A7835849FE603CDDBCC2EA0FDB1DC1CDCD785FB9DF2CDA06EC9EC03641285F71
A5AC42EE77B1F3521F00E9A25CDC25335819AA12BB5BE2400B199AD0D74ADC97
251B351E76A34078A69D16676CB943C0B2178C6A75B575E82E72512ED79F16A9
ACD33DC5825C5F4E5F7FE0454B47E5F5EB66F412108CEF7A4D2DC899243BE1EC
7250AD1BE0F27F454108A2B28E00CD75C47CA570BD54AB39AB1C68B650D42465
8F5E7089CBB807AB8E4FE43AE2363FA35682D396E029FB61BBBD9D0129FAD742
3367F94D4F8C98B3F36FB0FCE964961BF0F5FCC443D24101B715A1C16F4CA704
9A00E8C53CA83B2D4261B9FAEDED4BD49B2913A0D50082683C26F5307AE0A944
58F95E3C7E56FCB528C52213E7563858E3C6D7C6DD64DEE4E9D7060D4988D409
9D9B6B7946A37DA62FD173C66F5B4231287C9684DDA2E19E67275B7E5CEB625C
604299659EC09538396726EC5836690B23A5FDB883C108A414531112BAD1E4FC
38993C9D4BB75506EED01CBE912FD0864E477A4F305083A211DC6C4835C9CB78
42EB89F27FDA5CFF3AC029F4A3B53CCC8F30DC9AAD232BB880C47FA871BEC333
F399B238A662AE6053A7FB79391916D1FA46B0523DD8263D5E88034154079ADA
5FED9BB9F16733E5CF74E64781731D47E0732F4D3DCA60C0520FA96C52F79AE8
E89102ED8DB84C35545649F7774E57F381FA6561FDEE8193004AE1752C8F42D0
A1434CE33EA8B2BFC3417DC6FDC4125266F657F4E3B6B743269B106E03E580FF
13A6409A22F6681D36EE38CF544F67EB805708C9F844A48F77D5BF8EE82FDB23
F8D23843F190925B9E0001733660B140F27F720964CAAD822FA3BD0EC03E2359
AE99442127890F0C1085892CBC2CF3D26E6236F8AE72C80CEBA46995550ED95D
718B79A8FCC3668CDC1F1D1BEB20A94E708F3D630A6A36DEF42219670A574772
FF4C1DE20CB4AB9C7D4C9084E6E6F6EFB624E9A69BE5504C8665C8A2B3CDB2F4
FB48F85BE198F94920A1B35B1F70F49A2DC0A9D85F1D8651301FFD34B0CF7E6B
F6F73795EAFBAD3EC30801DB1EADA70D17134EBC8BE8A11E0A812A05398C6854
00BE4515B88983BA62071BC33D0E5F14B224A3F3DD1DC083C586A89AAF7E0430
96A1E4B682C5E12D1F8D3F823B1E7DE60A1E58CDB2BA5BBE8FC239FAF9AAA3C1
FE4763E0977CC3BAF470973EEF65A9550BA2AB06E53242B256A6A6CB392D7DD7
EE0718302457559224009ADCC4D06F897532F5093E354400A7D284C99F4CF8A7
287CF39575C47D426F75E455223A335155DD905ECEFED7D347E537F7006689EC
1BC19498DD34BA24E694526C351F23B0BF73BA260482B9370415EDCA1CFB88C0
DFCE5C135BC135C5053C9BD405BCA723E6C5DB308D7F3187BC0C5EE855E9FF84
88A160210532626498662F7D51BC7EEEF55486978C525E71580429A0CB2151EE
B44C90B24F0B165BBCFDE023A0BA4674D804EEE1F6BE695BCDDA8983E0106E46
8DE9FCC487DBDED3899DE3C487D8B728A8A5585EB0759BB4D17E3BAF0F442244
F90EE7B940D45A195EE2A688B614F8F5368A8481E8E18B07CFB63CF03F4B68E4
493F27100021AE69B4E43E6441A91446E833DBC1DAD4737351E2BAE6DB2F2EF3
51FC7580064AFBCF62039D1765DE00A74EC86D6B7E296D86AD5139EBDD23888F
DB2859E835D0B3CEB955EBF97FF3A41F1794236A122C9EF7119AF812CC992CBC
318242F431BB79C23C64C4414ADF823C1E1094F8C1148557AA989358C9E0C545
B814C1DF65B790FCFF0E36E4C6D39E24B03E0D47DC221F7C8180F989A124094C
5FF6057177A8F1EB6EC1C81EC0A7EFAA9C04AABDCADDE9C4CA830B000866A869
70CEBD72ABAF438C11A86C3A103DAED269DEF0C5C52E27AF5A077F1F2798375B
AF745921446818B9037AB233F2AB025AD639E2C9381809D76ACC2D17A80935EE
27E5B7AE2E92B2227AD630CA889B4674689F130A17737BB4901B897DFA257047
3CD53D6CE6BD28CE7ACA142893D2E30B742A179D657B6322071DD836FC587238
6FB208FCA61DCE2927D47A785C826A2CE1E6EC6BA1727D809283E8D1F054EA96
D74B9BD3AA3E1D1F327F7BA2CE6D653056F3499335366A25CCE2304171652B50
5147A5433AF425E7112AA2FB2E071624001620D97D6CB76A4E89DC3F79705F2A
DA189BABB3F659FCD9165DD2F6E5A66AB1D3259854C81C7B04430A3D435473EF
B0086C31D7BD14C0DFE8D8C3665E79E5504DD6ECA464499396B44986474EAA41
D7B8DEB57FEC17557C8778EAEFF2DCFF090B6F9794078BE7513208E18D76E9BF
5B80C7831A613669FCBD3968F40123741DA8DFEB6D025493905C2B9AC549511F
E0A5287BC359C47F2DF66DB6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /star put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueID 5087381 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C71AC58D7C35AB3247575482E538773F05A105BA2F674E97E391392EC
F80CB2FBB7CA980255ACD0096E51EB8EE24EE47DBF332E73A4D4289A467C5CB9
6B6FCE9B3667271C41EC1FFB54BE06798F122BA17B36EB29455443EFEBCC170C
FB2E43BBA892DEC342FBFE5702E8A8CB31B4396AD759CB316A470EFB0A64F1AA
18F34F4565035447B6B803EB8673DF2A9BD4458AF4473011F836497E83B81980
7F27B554EE4176D147429B4C697B427A9508C41936901C4BC90C30B462374482
1F140DC21B9ED3B27D578B4B2E5D35CFEF4387D87CD7B46970E007BF076CE620
78A547FFD36ECFCDA0C0124E163615966B5F2EE1EAE6CACFA91CEE799306F154
9B255E81C6EDFDBC95881F6D4748CF659A139A94A449C5E45F496BC9B2EFAFC2
E7C1CD4EEDA952D1819DAC0FA999E9EC6BFB8930D54321E3A1F64732A0EACEF9
A757FD60D80A32B62C0D0FE50E87DC17392FCF5B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 76 /L put
dup 78 /N put
dup 82 /R put
dup 83 /S put
dup 86 /V put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 116 /t put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC27E4A7E07D09FB08355F6EA74E530B0743143F2A871732D62D80F35B19FD2
C7FDF08105847F13D50934419AC647CBA71DF74F4531DC02BBDA22AEEA3FBBBB
407E0ACC52BDC60D01A29407CC4F93EB8BF6D4813E9BA858D54F38918AC82720
4956D50291F0546E50FCAFA6DBD0099123F5ECD4AB338DB310DB4CAE11337A89
8ED99B6F483940C97544F888EAF0CBEB11094A13C073D0061808662A04A82BA0
AD35E8782F854AF66C20C0FEF18D0ECDD1646321B93D327E53D88CA0E825FA95
05AA57BD719BDD1FA5BE56620D7AAE601820E96F7A877B474B23BA335956444D
CC86D3F55D2CA1BBCC5D230F7B28A23A700E8F3FB569D4509EEEDCAC98266629
6354A93446AE894372836D74AB53FB43BC55AB1D0ADDCA70B9C1E97DCEF2A96C
7C66C18ABCC2740AB17DBFFB0E4496A874978A0DDB744E5AEE3984CE123B0CCA
E133FE0E608DB00320868D9032B758AE838D6EFD9A4EE771C963B30574A8410C
60EDE10B146103F419A28DC35A2AF16AE68929BCB42C90CF36ABA49079650A01
9C377175FCD528101CC96B0CC509BC3498C76050EDC6B0E7AE68188B4AE0ADC7
10888C41F62E649E65597AF0D4E70E1FB157CB3333A1571FBCAD95EE476D3E5E
9B9FE6EE318B44E6719DEB44401D3641AB33D9B2B9F6EFEBD90D7B96E141B204
6F8C61F3C807F08DC48FD91E6B4A73102A0AE83DD707BC7E77C34C0F1BFEECB0
F05A46119AE0046EB348F060EFA461FBE21B042D4693B3A8EE12D8F10CDC4DDD
9DB7C39EFEEC0C514C315F185DACE874B56DF5A96C93031A0176B0931A7523B0
39B1E5E41D765571A68BD20D1F0B21A370CDB3EB4304DBE7E8815C37A29F08D6
511D3D4CD71CC4D49DBEE1AA3E591630D2A290785CE82662F82D585D9D4FED9F
F2C32C84E05A0F6705E3795C25A5AF8E6F1805C492C9D11A2B575349799ECDC8
A49075669DB07366D0AA1BCFB5325E9EDA72AE01A40A5C44D6727B8DAEBE2FEB
664879BEDDCDE26F5B2FA896F0B4D8C72E8BF1368392CA3D58AC78215239642F
F6B6B0C70C34EDDD5054DE9F7BEC5DD295650D420A1D3BA63CBB0AE14759B5DE
5E09C52DD932EADCB759D365651016A74907C04741FC6973D689F11086180D7B
98DB071BC6F0935AC0C1A11F30F307FA1284653E957CB71A286B90D522CA9A6F
E25BA0ADAFFDB67177560BBE38DE00B4E4614F0D44F57628A94BEDB384F063F2
812B97639ED5C753A57E8BAD55AE0CEB18602372ECC1A27AC536B5A265CB4025
069253E7CA079614487422B48F23C2B485D721D8CEA227717687E59995A38569
14F097E47EBB3E4BA05944952ACDCB4D79E5C47E455E2EBA9F0227C05B0049E6
C926F3A6A8373F3A5957A897139A1DDA492E690DAFEF0502255D9085AE5A3D97
7102C12CEDAD63AD7E0F21153EAF0330FC918CF8E31351D116B10C285247C700
22B361099314EF7E87E0D712933EDE3C188F4CFDD203AC51D511E5F31152E2D2
2D3A818DE6082CC25880F04E706F6C71D74B95481E5A45919DBD7E543225B78F
EA78F94991D56DD3C471EBB8B0345276152E81B44A08835051C8F75145BE94F3
FDF0B7CA4241201EFB07E0D636F9E53A53BCB5940FBFC94D3F17C627F69A9F02
C22972D17C560ABC8721015F04F0D87D956DEEE3511159EA2B5FCC1763A31A49
7DF21BD41D6A20E0ECB46119B9EC3ABFA991C4D823F9460119DBBE06F7718966
7BAFE7E0732CC226C4A54FDECAED83A333F1D627600B361D0F056CD2182B93B0
4231940EEDBD7D1245D0D5F833FAB655AA0675EC8D944FAD074061DF4EC2090F
4BC53D2179F8E6C1C8B2FC02FE8D476274FF76697CD88A2438EEA87F899D4990
3B32112A5FCCFAE63EAF56932C4B09F042FBB170DB50F5520DC58E8B1AC87CA9
CA5EE5C9118BD70D3CFF40B637C9A87FFE08072D999E4A879FA56F4689A79BF3
AE9F1C9FD5F3B0A178745CE6C99B43E8B2306A4439FACC56CCB339D5D2142F91
F80DC1A0FDFDB9A8430933A350A5E55531987D9D45EBAE4007794D7D0358A5FF
0109AF4F510632CD087857E9E100BBA5FFBFD91AFF3CBCD357281414B75FDA26
91CE883474E517AF4C387F5EF313661371FDF2C035655B8827204222DCA1D48D
3F7B3FA3236B02AD060A0CF38D007687414257C063A5264C55A36F3F1448AEEA
F83597708E3518F1EAED853822A50C0F41F88707025746074F187C4AEA63A3AE
817050548E9ED3D51AF32129884E13AF4A2CDF2DC8EAB3FD597AF40125534882
C7DC1F201C103454D5A9D31CFF0F034116AF493E4D12D244F2CB8BC573644C2B
22BBCAEA225D471DD49D1452E959756CB09B8FC0A851747BB24C70E79D925EB4
D0E2F9B184446E0129A09C6740D4E8F92FDB0525ABCE88FF4CE25E210A7E155E
A842EF0F65FF97FB0D3BC3DBCAF591CDED23F63D4802828B2E083FA1234BF0F7
6336247009ED7079C3754241938B281B0724653B1B37CAAF2198086E653D9630
3E03C4F530BD9A5C172F8C27C26EB24FE467F65078C6135AC7B6F3C4DF893553
D5EA6351E27A010D3768D0D2FBC7412982EBBE5031A4E8D133DBCA1FFA905EF0
8FC8FE841F129D0179609A38B04C28C2056210747DB9C01282E7298CDDFABA08
F16D5FDA807FDBEA3C0182EAD6007F66D9A160BA827CA6795EAEF1E652EA7592
EA99B7B29EAA948D49440EAF1199CDAC0DFE370BEEB52914D4059EBB93092D02
D650EF5D9B138A2C183E2CD359FFB2356C357B97586392F9E7143E8CED229E82
3A1339529B83118C27910AC03CB9AE08FCDAC339FC58BBE6956EB34ED6A200F8
F353B261A6D5A62A341822A612269336A236914D17E8793F0CE1E0CC66AD8153
402E3355ACD8809B0FF07E8DA478F44BB165C05971776E3EE8F3E8D190AD42B0
00689BE9C5A6C27A4E7CCA5E5530813CCB8F1FED219127B88D90C8CC7369D0BB
01ECB06AD5F2D581B846670F464DA09CC6D0ECD22AE8A18C3EC2FA9E59C1E883
489ACA3ECF7D76667C1EB510A0BF1CA1194CBB3BBD71DE410827AB577DF85B9B
B8862A7BE052299375F603B910744E38B0DF36A8ED19854C4DAAAB7C84F0C090
9934B812959ABA68B4EDF621449F6C39610E9429DE7AC8370CF4B00F439D1637
82684AA946BF0AE08AF2B0CAA5FF859E948C79BF2AD5E6A67A359D93A12E75F3
1744251D53A5D5F71ED30876A662F6D99AA8435C55FD97AAD1F28AF2E27EF671
0B93A9FA68C5CB530F24B2858DD7D2A9F6AF27509C4E474AF283504F6E100117
3D91F161C1F1C5E6EC38966607C8C841845B1DBE9D8E4514C5F973177C0DCD11
E172FBF629DFFA9F1D62F5D57B5016D184853C7AC9B678FADEC09FA1CE828BA9
C986FA0D2BCBD6998095AE8460574C2220BD4E94B29CBD51A67E34BBC764C68C
720D2652DA2BD396A4FB9528351D455B8F4D2EFC097B04705DC7142030D5AD07
41ADDFA5C34D948D4559F109763D80427622B55DEE1568ADB23D070F5E1AA8B7
A352C7114AD8EB27DC30EE2E91F3A2EDE7FBE73A6B27CC4CC92F4C4D35F84D36
0BECF720682E8C3E1862C7BE1EBBF4A81AB6255293CCF11EBC8816D0D01BCC57
3F3E0C439CA13D17AB7213EC2852482F96DC5B8FC043F759962E835256658712
C0E05F68BC7069C546F91D151A264741B18A6383C7C0D2F272A949F1690922D4
96D78943FC84F6E6CEAC36427A248E744E49BE0632ECB55DB691E006FE207928
4D35F01B1350C53AD9118CF7191DB322C90929634BD7EFEC411B9177076B4B69
67605D342D90A6BE0994F5CC461CDEDD6A79100120E502881ABF4E321719DB58
0394FC801E79CDA068C47601DED579D09204D17E757B648AD35E115FF51C5F49
F8474F10FEF3C1687615203E289407A3912CB3F823F24B68FA32D48A1E58B0A9
AD4BDC1F1B25E8C436E31F7212D80D697D37B45348FC5B1D5E90142F6E0F2AEF
D97743C12A712B92030FA80B4D45B22D7FB074DC6C43B188019DFD293899A725
8CF16C4FE15863802C03E322FDF98E1D433088202FFDC29DB12CC419245F8815
4209D0C2969D6BC6DE639A548AF1F4FD468A374E8F65CD90B9D76D3A206F72D7
A5BB4889CADFB7143FC063F6B93B385C588E790245F32FF16CF415B714E20152
D61D3C29E653DD9CC4CF2B6960F8B8025D6C25EE6C36C484AECE89EE0BB7BF59
CE9D25A907C8106DE36D05B15CDFD09D90D0DFBAF1973C820AFCEA913EEC2B9D
5D0195A93D911E53D8863642F273FA5B10DF6068E14994EDDC3A334EDDFFD8F8
56369BAACF90FBFDE29D23DD02C9CE8FE6B3D5623B1D32555A43CF418C6953B1
3930B0BB38A4AC17C11ECA69234D0449E13468A705859D7C1FF988B9E2B811F9
39B293F353DC12845B506A1C19DCF75845D050F1D2B503AF44DD1381FEA9579E
FD3448F4FE044A218A7C480E29B4DF19F8DB23D99CA52CE36B86D027AD786BCF
70932E34DCAAB8047D0A64108D009F7D559900D69759DA5B775B61F1D05A0059
4A5E651F17AA296AB3B85C7FDA322CFA74C6EBB7F227809114C77C96E8748FC8
D9A3093AC62150AEC12F1BE0080CD6C33F54F164C4D33C43C83CE991303AD5D3
FE017B207DA2EE8067B61702532671084521911D15B5D66AF397DF19F475E3A9
5D23D997B10478FE0B22D0DA785C756055A8E4BA8DE8EF490ACD39CD871474AF
72B0FFF5319EE14A109A6BAAC4921100AAE7FB0A9455523C73F1F674B22C968E
EAF2125FF2A6631C395C6D617192BC6E8D873CFA0638A0119A3B30699BF2AE89
27239152DE2F0232521EE734E89EA1C91B422A7C1B878DFF6F6E9914951A8CB4
5015BF9FB24A92042A5234A1D2CF2289FD5BC2148A3BD3E9D0B73509E2AD31F0
0F84DE07C64DA44F6ACA550EF2D33465F06EECECF8FD95E26FA6DFCE838788B8
4B0FAF55F7366B76B2DB7D47E892FB745289E0933AED27ECC491B944C2056F72
3050D7C57D28B86E0F4A129C7AF2F21128836B89B0ED06EB825CB7E53B80C24A
1255E024F94695183ED3B18D67C3AA988EC92BA1E9F32961860235B925D4D1D5
7952F77F5C7BA4DDB66BB6AF433A9734154DF57C0366417C04A299E741DF9ABB
50AD971B2C80BBEE954A0371BC746D768152903B9EC1C3E9E769EDBD32E60D40
629C23047345AA5EEBBAF26AE9BF0C3E807EB31586616D7CDE6BEF5DC0B0C8B5
441F2793891222B5FF4508DDFE02E8F963371DCC7568CE804D56F580756348D2
3C0AB74DD9D6831337F1D88C585F87B6913B3DE0AB97358448073373654619EC
6FAD3074B8F6656D4DC893C0B6184490E51D76A1E3E8E7E910E08CDC1C703288
2041F3440B6196B2C845945DB0F73A000B882D5425A5E132488206BD2A652F2E
08A886CF7CE05DC30ADF2636CC8510BFCECC039B116C31F7BCD3CFFF2F0CB967
CE1D5153B77CE7801057FBAE31833B92690A674A91AB36817C3FFD711F2B0DD2
EF54F35647D7C8DAB8437AD44A035D249DA1A7DAFACECAED20571246F010E9F8
5739ADA005A0B1A27C1A4D6AECF79A3E80CD29DDF972FA7AEE3543482FC9355D
4B69F79D382D7D300A04660DB80BEF10D2FD2724F0FC3050069CF639FF877FFC
E8AEDE459D19657D310EBDDE2EE9E1E6EB4A6B5C106E7378628539D61F261463
ACF32E0964166459E94A08C74BE14374111BFC838A0A3E5A6B476771965EDB88
0ECFCC1760603EA2A99F095A88D1A38311995B0F9E9779F420ADD9A8028AF1DD
BC9154C56374D7C69552580E77819314CE68516495D1BC72CD769F073D1E8D48
D4222BB8F07683E97F68B5B1239FE72A4542D7A9CEA456C114AC6FFF1E4CB277
E5793EE7FC620B69079EFA0C52F8CEC5283D38DA5F3B3EC4DCA4EA5A5029C472
ACC8CD8BD8E705DF9CE67332D35490F60DFE9654720E78402A62512EB069566E
AD8388B7028736512F7F2C3FCD4EAA09BEA2CAB769715991FF220B5BD6ECEBA7
429974CA095F723B5C4BE58A99D8FAB4AA717C6112D75024AB7BBB83B6D746FD
A8394DB588C9E3F64818EC593115E17272C3ACD230511BD8F1723C55C7BD95E8
F44106BFD7C75B4CDA2D1B013CA9BC3C3D470F6C5E8D3AFAD654A91B58E85D61
4968E0B93925ABC9FB8BDD1BEB9501095B565ED6718AFAA9585030920405506E
1C6A74326C6A9106196662AF0EC24C49AE749BE58AAA5CA2B4A22331D27C3422
65A7879A46678558F95AC7D0F25E99246BDD8E046433A387D7B578122446CA25
E65513E339E06A488E8A1839FBBC2C2D7FCAE17B6247C0A1A05A328513AAE263
5926C15F36B3A86830766FE79CB3971A6EF1E648445D20755742DA367D927881
02545314E902CFEFF4AF797177D4CBA996D488AF70510BA0A0129E3055B0FCE9
6CCDF9E04AC38129AE8F54B347DD5A6F8137025EF39B76151732CD43A3CDE1CF
CF08A810973C9C59D50881CE92A9FCBC8F4BE5BE97B73B83BB6FB50F93C876E3
7EA790D71C993B10DAB73E8DA81486C1A1D764C26CA6746C8A35AF957D9854CB
0F5E5F296C459163E73BA7C56F3150FBD10A2103840C7EBD85929D18C4E092A7
B05B2C4103E9DB273B249665AC7C2A8EC97551B852DB0364E9F0A94F686E970D
24B741351E0EC7418A7BB23B0C89A16A55BEF033A650F97D9E5232F5875362BF
D5F51D355E074EB21E355EC83680E44A9E375A7609B880C365A23F07453121E1
4FCDD8722B462A15845F588FC34BC09721B2B31EDF042814BBABCBB82645ADBD
7306375FA187722DB24172ACD66B305585CC04D01BF572042E719A3E18BE95A1
31BA6BC6E46D4595039A9EE706AE1D2F53B4A8B174EB152DE16F6B3FE7305E25
745E4756666F878E3C57396EC33AFF8F6201830AD3F6F2ADF60DD92E2A32CC34
37CA2BCF6D985F52DC36C8407CE4669226953B489F30DE3F49692F7034B2A5AE
B8C213C966DA0C8FDE24A666AFE65D0A0BD4D3AAC84725F61952E732F81AE282
8CDD10F3B1707C04747779D65143B3E61D50BECADEF046A39FA52BF82CA3EE78
B6C285134CE0087EC46BD8E8DA57C8C133D52607609B657157B23729588755BF
0A9488CBA5986AD32576B4C1D1CCD03E5BF77E764FDD0A517A4834D4581F735C
671548935FFD627C632118E230799F4FFB2017B18DE7AD270FA91FE1E6047D3A
27EBA042843B55B6EA8F7B72FCCEDEF94F45F37846807F9B3260F05ADC055936
03E5274D4667B974D02298B1D9B1191B4A485E618844B0BF3AD465A8BAEA2717
2921BAA7302D82384C57E2C853A4DDCD96831F23C59EB085C975A537531AFCDA
20820EFA83B1929F064CA0D6F423337CED61B095D758A40DE62796C757B8FAE9
D571901AE362B5FF763F36166EFE73AEF5386A2A9EB8B1AEB066BB6064FA3568
72AE51F0A462E3C45F044F95D2298D1AA9EE5DBF1F3802C4E9825227C6C72845
9B5F9056EE109695AD12722D15BCC03B76DB0DEC280521E2878FDAAB94995E11
AEA4A40015B6BB251832B2AD01AD67404EEF6DB522478B5927DF19CC9D10BF19
F24F239F92AC0AD7B94BBAED2908A4D35DE78FB2C537FDB8455504AC641D5FBA
E8731A562415A041857F4CDC82A05DCC387AA958923EAD911786DBF0E790645F
A72E4176F17F5B34DFC31B305614FBCEA174A5DD91DAF9C597AEC3C15704C0CC
5003A806F1F67A181EF3F794976B92F0AA5B4B3D60746C7E104F3A0D5DE6199E
329E13DF7562DE26C779C0E7F13E7969A98A7CA0558A1374D392DCE06EDB74B3
BC7AF5F6BA8212B0BDDA17A2CE430D29329EFCA21275F878E512E4D436886F05
8AF88A155085AD85E8FDC147E616061B13EEF5F02350AA2817E989C7E4EB909B
4C1823435E180DB2571DD6D3A5E61AFE5879E94CFA996E9718DCA0CBC9C6A492
6E387A7BF9FFC4F7291D16C9B119660686EB7781D60484488DA465F5E173ACA4
39461438443B90290F8740A39DBAE7FB346A9DB772D2631532ABED42A0DC1AA3
ACA5E00AD6D9D2A58E52D67AB7458D8B006CF89441611EE103BE139FF1465329
63CEF2B44B08779AD96431442E5318BCE6B07607B69E3109C73DE032E5D13AB0
FE25C55DFF30CBD5DBFD60468DBFA4EBF924EAFFA0D1ADEFB61676F5CC6993F1
80D520384A44F879755CFBDD4AD066BFBDEB59B6FDC4EBBE5AA6833EAC5FF571
E77FBBE96231ED78647A135A7BE93C8BEC630BCDAEFEF198343988EBC9B119C8
18D238EA465128A6739B4996D0B402ABD51A7ADC6AC034E208D2005E0CAFBB62
7507D6778FCFB8F6A0C236DBE49E39AAC51E6C3012F9B1506B2BB768A11D8185
BEC3DC7A2193C42E8F2073D7B3C104A821B93D8251D1A530E59646705D981832
17132DB1077420D705C90E579A620E8FE6E2652D6384E36ACCA49857A7EA7543
EC490827901ED698F2097A557BE7754F0D0D358E418A0BB1C9B66503A39174D6
1491C2E917F0580AD603FCC9F3F46000159C102D538A011658
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 8 /circleplus put
dup 14 /openbullet put
dup 21 /greaterequal put
dup 25 /approxequal put
dup 33 /arrowright put
dup 55 /mapsto put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57034F7455AB67138A1B6DFCA01660EDA
B80764458B5829EB2FEC53E0A1F53FF5AF7A2E1564E666101BC844AB50DE3860
2235ECED71E86452D47F2A3E0D887538BAFE377CFC4DD49B397BEE459E06CA48
29B9E43C4C347E6477249288E7DEBDBA39A132719765FE1E1C73DA7AD4C3BA0C
FDE73EBB257F28D35E9726698A7DF177A8B298F5E10A5067FB4679B7933017CC
24F3742696D3082DB19254C83330B03F50C92A4531898054696C5DD48F7B9398
6F7058778DFB298C60FBC86239B119ABF4E313BE2C17CEA5C48BFC241133F552
94C05D8C15D71DF046CE604D7B93DBAE57A2AD8873B55F6FA4A19F867E5275AB
31E63B2CEA23B905000660D109531594DA88BC1E24AF5CED88A52C5E90774AA7
02696B3752E5565495D1AAB4CCF0A11F1D441B6A8E5958460C06C304CA542234
180DFA21E16B4E5E9BDDAE1102C15FE6EE7AD5CC69F17B15A21FA85E1C5E3AA4
070182116C4C4883145ED03EF26FBC00AA965E44FAF622DADBD354B2DB543096
E3784F738C7E396CEB99C79A81BDB0ACD4105B22D0530563A51275037A17FA4B
A837C27CBE7F7CC6C8CDD7BC6668CD4D89EB2F27DE8E4EAC02CF471F2DD75905
332D8C5100DF7DA0463F4C31930A8386460195EAA1DE1EC71D061F1D22DAC884
EBF146FB9161BF944A46ECD93422ABB30CB43C9823798880C3CD38406633472A
E9B3F7A5B8F7A6470B21D839F9D1E96361E4F51F5BDD39E423A95B9E5CB2C100
CF0ADBA28A840DAA5A4BF6340CB2E3CF9E99A71FAC38821D6073358F144E6951
8205F26B2F6DAB64F68ADB769135E0BC43E7CC8AB611AD24A30A36CD6A4FA52C
92D8EBF4C4A6782D09EA1ED975228A0551413D7AB6A390D4C2F0CF365D6CBF97
0D2618445C3FB21F26E07EAEA07905F5C72F0AAB68B635738804738D7AB0A37A
9F4B7975A91C96D40A6FDDE5FE5655C21CE103249A4CEE1EEC0A23700316A68B
1EB849C3EF2617F94DF751F8B336A1695E5861008ACB69E85795E4191BFEC677
0D242B4BA689E37739E460710B78788363982C0F630736244FF85F2F1A62A56F
AD9DF8720E9D57D72BEB707C45A9175A9CE7E698EE86599F02FC5C805E42F04E
3A5F3981EE58903FDEAF488D1493EFA7ED10F468EE6767C04EDB52322695581C
611DB68AC637132E821212A200CF91399F499630D9A3DD8EDC80A8B7ECE33C5A
8777D6A94D3D7289FA74DE59CD0586B8BD8671ED6C0C5C12FB600BF781A091A7
595E8466683A6DD52E1D3A82C6DC0BD9F5788C3BED61D28898917BDFF1D17EB5
500E65F8B18EB4C52710EB4E6936875A1CAF387C34B34518A9406A0F01148995
2192C358085E82376F1036BA102FEF09C834CD9287012B70031B1044110E8657
6A04A5C921500D9138E2CC98CA2CFE39AEDCA18924C1AFB187D15B0D983D5165
7317828E1F69BC3DBCD358F7CFAE2821B336A6B1FE0931F02761E2DEFB89298E
0A0D9EEAE76008D5550F2C3D12CC8EBBCA4D060BF8707FC89180CCA5FC931CC8
E706447D372C2C26FE45943194038D92599A112677CFE80F9205AF583BD6773F
D8F299610217D5FABF1C77CF4E343D3C6453EA4994F3911DA6BB1EF97286405A
F9A3A8E9713439234947A0080F5B1CBF1C10A9CB25F6777CD5638B67B633C816
D83F47774AE95C105D6D18863900C5F907FBFE7EDB4EDC33ABDF99F40F316DF6
BC0263D9053108E25F0D47D05C7379249E209A47FA3FA3FD9893D681FBB31096
CE943887A89F73A3549F9B5837B31D33140A83C3CCB360CE223C3E6FC7C3A6AF
53ED29EA8532F5F6275C40A98647F5E5F8B71DF18D375BD925A0A86DD9DAEDC5
C03A4468FAA46F354317476AD067074D85433E0FCA155B39FDE06D9DD5A76BF6
C29BED1AF6E4E0791F7547A1EE152BBF1A832A9323C5462AE7D6B3B287E68703
DAF87CEBC4CEB9477D52E16C7A3CEF2A010822F76A30630A11E724FF3A46DB9E
A6772CA50B5D17D3447ABB9F7F9713C078B5514D93098D04CB8A57DCE05B1A05
55C180890AC46004C351658F500469FDC435076EFA82EFF87F5A2D0BABD13F17
CA46C4CF69460E5107A6D3F668B023E637E0238CAC01269972945CA865DC428E
7F18F46C7970C33F69ED438A2D9EC77EB79EF814D4E689B38AF234C472
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
326C94D4566983D020CEA73FB1AB77896A323E3CB963232012253C8FEB39EE21
1AB387EFF5B044FBFE4E62D00B6EE32BF8010B370BACA1400F50D5DCE6CE2B19
496DE0F69C1ABA5C2CF0E723412AC9F86F4A8C74B550074FA64DC48EBBDEC005
AB17ECA8D9709212314DE887754E643BF46DD693467FA609F40956728B508DC1
6817AE21AB918D797FE6F7A3E1CF551472168E82837D97BA9583E2CA11928F8B
133710CEF7F626F1B4C2A658794008B3B47266B4D3B540FB8869BD8F40BBF40E
6D432ADCC2204DDE1278D831BFC64C6B3084579840C0C9D0E4DD093560DCEB37
A2EBF9DBB36CC1FC75CA664D1537BCA1F5C64FFBD805EC85265225E2D662E1D1
389C92F4CC86C33E4D6341B2F692698723BDBA74FC0D9281B2C0D1B3F527B7A9
4714E1563B65BCCD39DE9DAADA01BC25561B40AA869FB94CAE1F927292C33E3E
938B7FA85663DAA09B900756C61405C031379D49906ADE71B5789FE0BF39BE74
9C03A32BF53F259864D1C70E8DBD0F7FCB508A292A0C728745FDBBBAAF0B129B
7340EC175EB44F7533DEDA906CAFD5CB02A565BB5B31ACC46B478981C2870E48
8FF0A69D8196A7DAA8E1C3097479C63D6E505CA443DCE43BD0008681A356E6F0
D29615B123A6826C1E99605C170D011D15150F0E50CA30247663B837261B3A19
C60D9BFA942C49C563FA4ABC921FE4785F2D85F02B1221631E5B79DD9EB7F75A
F38F818D6FA90EC033A94523F2780C040FB1BE4C789947FEC653F15F9EA63E4E
5B69D1B00BA7326D10792F014A3E329734BFB78E4F8033B48A58BA92F4A13DEA
C8366A9BAF2FFFC6DF4E06667837376486126A458AEB9018C2C622BB6542B0EC
7573F81C144104E49A4A41541EC05FAE97D4CBFFD1D1917E341A77559C624C0B
0D6EFEB20041FB41AAB855A6939B2ACD057074E4841948033728E93EE6D39661
02C47949238896687A253F5ADB64C045B77BC00E4A6600EBFEE020516EFBD0EA
C4414CEFA01DDA2812F07EDD60181B57593761F80244FB2368749852644B60DF
B6F10AFDB95E65E956B5E306F76FD94CDCBC883A5A23C1E38E233DF22CCC8F76
DDD49329030BF21DE52958F1DB6435DACEF8790203507F01F3DA968B80454F9F
9723CC2B21EEC30595145ED42B05F65AEB2F375D0DF90935E5A3C150C1F5D774
683A6BE9FD43F22851D41B77A46E0829DC571B8C0A76A4C67A2462A46FFCF0FE
448460375E34779F88EA8CA2402A7EBCCAA8DCACC9A3F8CB3C13A52DA1087C0B
2C2799FD06F97AB11E91EE87E4986A04F72BC5EFE35237514E75AD8B87D79EC9
AD64921B5D77C1705A832763016900FF1D7F797E5CE33AA782341C895A01263F
C911CFE950AAC3511A5A3781C4D89D9BBD77B6D193F52EA427A0EADE973ED829
6CCEB28758DDE46541B51B84C86B673FF18C3B24C74E6802505729DBD2C473EC
831FAAE083777EAAF373CE4D2925B99FEC4C2DEADAAE29E2584D820EE4E0EF3E
8128561C8E29C629651F5F66367A224B4D882E3BF869F95835EFFBF5BE58D861
1B9E4587F33FA332461834FCBD49507AC4933A87066AD0B690E442F740BAD310
B07139AB5320BF099F69DBDE8498D5A28A5F75DB34735D657CC1FDE279D6EE1E
C541CD6198BE7AF35466B7F25D0EA3757B368B38531DA52909FA5932E997BD82
B115AAFDCA69555D51788982AD7EC104483ECF1B3A0D25637D14E8D4D1CE1C06
7E5CE383FB23CBBA2DCBC763A4476413D7A6DFAFAB639310E4B493F6A4D409C8
D95A2767F50C96161A72970E19185C1E821D8AB99E1EB7CCBE1874CFF9939E4B
18F50532C79086A13446228012FA8E608EDCF9A4845EE607D5B434F7F2F60999
A7BCC353D6B491D7D7E06ABF8CF7CC164F69BC472F5F56FB8932D8704CE959E6
4B75F97BCE7818DCB53BBA6FB2BD8B17A5D51E154047EEE9A3E3D9AED650818B
B4378D0B90B4E62359C31746F9E0411065D59912CD40B9D207920637B6DC2D0A
B7FA79AAFE5757F5C2E58F8DC369EF3C6BD53221248DEB4C089CA6C379C49A90
452E5D4ABA9945E235BC4721A8F2EBDAEBA780BC0998930D16FC9E4042C7A329
EA6F8CF29E14ED1E7F8DA2B51D6FE37709E2C9038F97D75156196DD8D100E9BD
FC55AA0A9CA9BFC29870BC51662AFB5E2976534F90CC94B0381EC2C90DBF35E3
DCFC4AA5C8682437E5BD92EEF9B0C0168DD4FDDAB4A530A77A5E7864574E5011
F43A34C677B275F75FD8D28BECFB074C02080D7AF162F64EB3EB1E01079A885E
368B88976A6B8F30BFD490C82BC3FC1AB6C557CA4364BE7E860B77D2380872AD
733278ADE66FFD7F0C5653741F74D604D544D85C28BBF34F05DFB88E0FA47E39
ADA771F1F4DCE3360C00FB380D5806EAD98A380DCF80E077167DB5AE67310587
015CD45A3EA630220888FBCB471282D27CAFEFCA71E91BA2FADD497983D0F15A
F1E71C88F151C1654A112E936044845E11A5B323AEE07BDF120FA5BE2166E17F
3E9F9370CEAE8CC8D4E98BC3265BAD277724B4036145F87A7A1E20DC063B79D2
676B26B187291AA6FC1758EC45DB3DA2AA9A0B097CF9376AC0E9A2DFFBF39ED1
1977DB8D087F1A2812E8A0FB6CB4E8BEC69336439F4115DB0DAE65E42C26997E
AD40399A43C5BAE9954A90E32E77BF00CFBEADB0D042D0A7EF5BFD3423EDEEBD
CAE549EE745A4D8814065C936879EF7171CAD955583B605BA4337270707902DC
B6CA1F501A723BF046664FCDBE553B287F753B755342437F59ECB9ED29A25435
210B65498AD25157222A8DF436B048CA4F5C08A6898B70D92A231964809B90F9
BFB0B67E02B4788A085E9DFB4D3EBAB7EC248C2EEA7C8498B2419C28CFAA60CB
E4F43C35D011F053675EB735F9C6296BC47D4ADD5AEF1BF720BB79CA56C802CF
713C65C172465E22F3970B24C7B0C01A748B492053195B175759FFD0773F60FB
115ECC51D4264B475117A8750D6D1B23CFECEB98DC2A0845483F650BE97F2BCB
D8A2645B37128CF5EC6A516C818A97E0A961F914DFF175BAC898C25E9DD8D6BC
BC8BE19B9912E40749D139F5046552590C1A9E0A11B92161DF3FB84E8B38E783
BB24F75C99B58EA4BDEFF777C338A25F730833A8E4289E7C6BE00881511E1584
68C175E9220ED4C841476FC67B44F04F31EBB657013BF71E17791D844EA5CA54
F08FF6390AD7083127E8ACA1DF6A7F165D3535162540ADD8236619E2C2C08244
26784BFDBBDEC2B61BD94B357C65828CB7948603F9E3BF539F93A19D3877B50B
D45DCAA0F27C797CCB93E89708FF7BECF240F1DC58A104E0E2EE5FD4296BC383
EB2BCF01CBE263A3AB887B6FA0422F21468B6BF7E538C7106E16596E9DCFFCFA
C246C0BC7EB6170AC3B318BBE7463FCCDBCA5B6AC1D205E81C658C425285307E
B5998D9CCC24B99FEB22C16662E450A6FBE46A5CC001A8ABF5129D0719CA6508
8FA5FD84E2887A2A9CFFB6554171B6585855AF4A354377B9789F180AE76C859F
B6788BBD90196093F804911FE5126AA69EC3FC45A1577B005EC30EAB50C0FB9A
2A9AC9B31DD11DDD79D2FE8FB2FBFE5A2F063A76C17E2C861BEC5B0BAD2C2F4E
8B6B68BCF5C2EBCF3EE1BA62ED05C697C81E51BB305E13FE6F621C59F38AC164
06F2A9E4637D45920299F2E11C85E992AE1AC7DD049E0DAFAFAA913F60FB2EC3
DF5147B63AF34D2125D1CCD1599D31C460E892DFFFA8AB0ACB6011452351CB16
BBEFAAA24B014E4D7EC1A40A1355FE01C78D050F5E500992BA04F15D7D378F5E
35DEF4536A829299933EC9A3A8A57D54057AF8A3624CAC18F942404E68DB07D9
0472FD03230222E3C6F40FB430EFCAED6D93741D3369BEA9FF95A5A10E7025E2
7B7162A16F1488C9E79CD88D4730E6CF60BB5C491AA8C41C3123CA3204475034
7A1CC6F41AD6C2BCDF31E600AEBBBC29C54D8FE7AAEBB33AEFA36BBD8B6AA507
7586A9FC561B5487876F2E58ABF2F4B9C8C6187422183AE955D30EB30CDBA68F
4529908EC60E48B057F5C64B53F1598D895DCE768A91EACD5F3F7963E0FBAC2D
ABDDDF7C6F54B30A4331F888548FCEAA8151DCFF307521152899D4D57EEA4AEB
DB47B1A547CCDF558FDE029C69610033E04EF1BA37E0B9D19FFF08E0B1C5A553
D3CBDB378B82418390AA7E0A253C1859B5E3C90E204E4A61DF308BE8998EB7D6
7A7428A97B87791071001075DCF0A645D6B2AECA3315F72F40FFC4B98CA26C19
E87CE65A1E79784AE75B696C4632B771BBC8176525AB9808E24C7574146C50E5
CBFA14DFCC46B7F790AFD378F04E642D74396D0914841F60F00D8E7C448F74A4
809A3E28B7D9AC65BBBF462C63B3CF496E4F684714C49045FE3397F0DD6482DD
E925C2E554DC767041C4741DD2A236D78561ACA5C8B8E6B4A8F6F0B9539B3414
270E1C94759942B7F67699EFEBD6012BC45DD0F6C591DA852182E31867C02135
4E83069395B103E8C51A62C78C0F6A7A0F68852454EB0CF96B90DF08BDE93663
3673F27E4679492104A941329716E7CA2DF9A6F87461880E70F8D5C5AEBDCEF8
17234A9C89E5CC221F81CAFF33BFE65BE4EB69837026AB5388A4A6DE0506100C
905B459385C071153500A68910C60C238CB618D0F6ADD1A079F942CACE7C18CF
C6D36C84D0C5C8AD25E4FF4CBE8104CD8E4E4AD5ED3E34C03616B91CF14CAF67
F9F658242C8B17A1D76B90890C3AB8F31E8A1E71CEC7DFC5B5EF5EAEC3A298E0
8F0DDDFA784B77FDE117C07B41EB02FFFBE0344D56EA1199B125022A758BDDAE
F71AA20FD5259A81CFC35BFDF68C8E09DBFDEDA8E14D8F259A9966F3605AC784
0DE2C7C592474BE02EFB66D0F94896B86A508459DDF19E87F392037B4CD5B01E
F6DFC11D32605899DD9FE8E797F13A0FBF65430B4E22E0C9593F7A7AD53DA7E3
BCC460482ACBB10353377F3D303F7A427D370F7FB288103855E450DE5F37010D
0CA3473417F7AC7F206DE8758E40BF55C69193BFEF5214BACF64CADBBCD79AFA
5312EBE7E7CD3E677D4F6C24B4BCA44BC2B637CD742527F7907939F09069D921
F147D7E056258A8283C720C38C24B9377EFE155A614325EFA113B5CE375618AC
DC52111037932911701358ABFCB6990B657D8F0B4F0D8C53F0AA45164226C5EC
729D4B8EE2A3AFE2A01114E98E22FB7DE2C9120DB455BB70F72A9B70B89DC99A
290D2239C34BA372F79CEE39D1697F9AC7292019546F23680678A6102834EEC6
245AE34F023221A1143FD076A072AC0FF8F871D3FF36D1BA06934C2A5480C37C
D38028FF30C016364C3670F4B9E83BC7FA25C6B154313E1CBA87A89DE771B473
1E1201C38966856EFCB0FD4F975C2D58512031563E7850C1A04963FE38D993BE
915D60B9F724D5B3B03CFEF841FD4BE5C63190D581631A25EDE23EF987D4928E
C5227528E8180F05C20D157374C7C51234DA52E7AF9FEA02175F54BA3F9060BE
3C41E1FA187D2AAD9C20C853EEDEDD3A28F0F4487637F247A9FB9A7D06BEF8A4
90726786FD6F7BC685D879D0CC6A28A1E3FC3C765822CBDC81314CEF185F5719
34B173257A6B8475FE6F84C5416A01DB6819280CFDEA651EE13779B394B80CC5
32BCF887BA6700991F34B68EC6C3971F196CD0D059DEE9FD143872BE72328333
E0EC0F5094D06A07CC61334ADDB8EA69476A87CBDF4F6D1D8D9B9B9B60D81D2C
E99C101E6B105FC19654A804283EC8EC78B879933AB27850FAAB4372F3FF7834
B3A927850ED98E255ACDC2CA5C4BCAC0A3EAEE7402387F7DA771AE797F62073D
5220A1ED7BBBF6EA44EE77FBDF1665BAD2AD7F508210973B6BFFCB5C7C49BCEC
C442EBDBF412C79A690AE328CE1BC7A791CBAB1158B29908B041E8168356B718
7C3241ACC191ECFAB14325F206301AAE03B63A6496FF4FDC754DFF94EB466E2F
47C86D8FB8BD8B9F0F47A129AFA849AF63BE99D1CC0BB915686EC9F911EE8CBC
355F5A8ABA871934D604D42E39CD618A21A270640C6CC4A1DCF8644061DFFB6F
5B8AB7794F6D80C3D8E85B19749BEEAB9B4A678279855834C80DAC61A788F8AC
1C4F248F155791F0B34502DBE2F2E30E38106A6B5CA977A152C521B3C3C44426
0B74DEE2E288BF911FA8658AD6720EEB7A5E7F7C3DDA7D5D92F4B4A8D3B878C0
B895539759BAF49A0C4F6A3A219B938E6177BA178AC46105E10B78C3A90C8D69
CD50A16FE9057C62060C48EC585E8463BF95479B684BA9CCD5321953DD1A9E0D
1BDA4D8439A11ADB7C542AC458D5338F7F28131F07C8303D98D725B7DD41D81B
5CDF4C9856C01A1B873E1C44F28D22096AA08B312FA4A1337B90D841688AE6A3
2111BD7E235A79AE106E30B1D9C99CB1D8CAD10AF1F07DFAA61170828ADAF104
CD27A049573F330A32A24048D32FF5DCE5671BD0B48848223AB42D7DB906D2D2
606FAF9F76ABBA5B998E760FB4C38F805D3C5E80E23A8F37E4D75D2E2A57148E
D4389A166ABCA86664964A1876A7CBD4F2062A026377353AEC0B5C5016C5B746
09BA9D799E701E16518655EEB0D347D84EE5FF92B3A40590C7DEC3F38D0E89CD
D980685331A39E61ED272CA48328E5EC633E03161BA7CED8BB7CDBA6405FFD8A
AE6FED8E140D61CCC510B5498E4BF7EE6AB993B9B9CA22F70C2A53C2EB352263
9A700C540D7458C21C8E95D0BC868C9AE4D6737EA3F2F0D09678DC49858393B2
FEC8BC0ADA7D378C7AE01FFC5FAA93CF6245938272E8081C4001FB38E1D04121
3C18CFC84101E6349F05A6C6D950CE0ED8F3706051B5292608BC4DD2422D9E48
1011E0C88470B7EED6124B67778320F71D5A74191396E2CFE20AE13C28F7A3C7
95713B472D80A762A3119C4EB9D214BA4E1C34BCA5E620F4CAE2A337C6D8E9EC
5DBF5FD0A66436FE8B936F0C10BCD96AFB02C855F10B3E29B6900E35A1ABE36A
D4880E24D15566114CD5E005D1B9F0BDCA2519990463F221370B159638C0CFA9
38CE240CEDF9121E67F235100A235751EC9DC865EAADB47C880A3A2C3F895567
5DC91580C859784C87319F554245FB4A3D542AD5E86241AB1BE5564EC6D5A1E7
B607526BD2AAAAB8D756653BABD2E2770774419895B1770EF136CC1B008773B2
6BEC755318C511459D9CE004BAC2F8200BE57AEAB99B3473A00C89F7F4C30098
AAC28BF8AC65143143BC9B4502350E81B17167796B9106803C5327BA504D9868
270D62FC1EDD8266919E062D6F19CAE3A41ADC065F3FD1D09AB6B43D45F50F3C
2C2964191A9C53B5AE78EAA2322E28673163BC731165646509FA5774FB8AB238
E1AD6A73FC84B97B6C99BB7008130F21B4555F83DEF3C698E633DB7198508A9F
C2D57320B749AE8C70F7DCD744EC26FBFA0B62F68A7C57BBEB1BBD3BFC9AD153
56C5E6F38424128D515E4009C6FB929BB6190697E766D19FDF24D508AAA6D1BF
9094532380B3C65227F7E2AE94453FBE4E4F076265827790EDF846667622A935
B5A07391857A5D44A9D2D6AAD2CD287BF02389D5A9BD6B157A9EF3443D008ACB
6E9CAB9FDCA93A1602B73DD327CEE715CB30CE89F396F2EEF22609B0A2E90473
F181CACBBEE0924BD867E0260D60B8AD215D8BC480400E9713F05F695F3E44C9
1DDFA98ABDADB1F867F0AAE80C4B72B550C61E242F1A9BB2B778934403716A41
EAD41C5B9924BB466DA53A165AC9BEBDD36848522C83927F2EB9CF22BFC50A12
191B43E9A83D245C3B9A417E2E41F42453C9F23D4C7BD2245D248A1D2DB0C6F8
C3B0102BA7958EE087CE9091EDBE5E051C8A90499EA5EE19901485C062C5B080
54DBDE39807836A96C17692460F873983826D166C3A00FFDC21D2C320F3BBEB8
BDFAB67C7FAA11787687357392F866BEB68E4FDDCDC4459FB614A6F9AD432490
BBC3385A0ABD5AF072A304C706D9A19E3CA936E23A88D5802C756444ABBFB8C6
2D7AFD33B582BB384C20EB47C161BC493999599C2C5A576E81F64FCD92B371BF
E915C17F30CC0757D313722688ABB671D1E4CFABEA5C9C91710351E7E975B394
58F88E858DD3AB3F8562EF0A31D97AB6A95461FFB4E42B7762F9A991351504AB
40AEFF1250D62B2A50826E646E85713ECBE6980CA9AD0A1F44DD7C4323AE89B6
30613D2B25EE25B2A8F923F00F62CEB5D45FCAE247524188D5088C29561DF2A6
5FF677AF395B8B5D0D27D49D2CB0FEA50CE4679097142D4EA6BBC1645DE55D8C
8DBB6B09255D2FE791EB10A96EC75390FE25CA91AEA966D8F0CCE830703376F8
951B406BC69E153177B65448A69AB5F4538BBA828692933901DAA61ED1D3B977
88F10472BC9003B573D1DEF080C1A02481EEB911EA7961EEEC77B8FBCC7D16D9
A5022ACC31F7287D078506D6696FAC7D03F8926543AB01973F78968D22F7A502
5EC4D94308F776B19462582E14D40E9DF598C87CFA8FB4C29F41ADABF369DC3C
F6D904D7DA6069D2D42C18FE48205CF312E4A6C1EC4C65FACBE6F21EB3F17D41
08021A7FE32BCB01B1523231D4AD195010534B0789B2874E4001B335A1E915C9
7B4332208F6609BA937618E790F30B949741261BF2A9E5E0269F9067288DD8F0
D0BDBA5B0D2E737C20517B6A0B295C8EDB37AC53A796F8D9A64A553166A95670
0792EA533140291B8323D69CAC02A99FAD368EE10A0D0DA94FFDA98B11FB36A4
55F26BA6C96B757CBF710ECF0375457BFDB2305471A71A2C4452D038A212CEEF
A21E0EC346374074D667753CB71833D6EE04B1F0483E12E4B78D585E2DF2A0C4
FEAD5C2CE1E15A15653F71E0F13B00BE1D200A2222AD612B405A592F0A7F5023
37E543541F435C5FA81C3C273FB415A2A649E14468F639DEC63AD467FC697F2C
EACE152F4426157BE9B018253B68C5C72D71DD7690E6EC5C130FED380C9B61CB
B70E7BDDE518AFD8C50FA7A16846AE0AA1BFAD8AA00213A23A00F054D4DD6294
564B3403C45999
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.1: CMBX9 1.0
%%CreationDate: 1991 Aug 20 16:36:25
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 65 /A put
dup 70 /F put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-58 -250 1195 750}readonly def
/UniqueID 5000767 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D635D93B1823EC35EB8316AA1
86031FCC99F57CB21E8400E54AA474B57112F0D4754A16BEC19117E9D3638986
0777A71B135CC18E20E193AE6C2BCD89F4A27516DBD2BFE69FF9920D547796F9
89E0825B6BD5F492B36AF136EA91B826501ADB1979A4204B2CB5C0517F2B9494
9B2077F316D2B3DA256C99F7549E6BC4B04FE12072B09B4F5D482A126AE351F3
97DB85F3026A793B51E6B28B54661FEB087F011F0BFF67272DD1E8825C180723
22AE77CD6166D2605D0C0F131537417CB60086F08E7197AA916D590944BD801B
DEE8F29FFC516E11396CCB8395CFEC9262E22521882DC0316B0A129DBFA5FB57
E656890C2471675E0566FE461028FB05532E274E6DF77E7D320D09B2203BBB5A
8B185B66B2F8A18A49589C4EE27596DD56260D0D759D2A12CEF7FC3010BA1B36
85A2FD45129DC01A0C7570423305C25D957DFF9215102FFF35F428C823D549E5
014E7F99ACA6C10B3C92805376D0F3F280D65852CEA54F5CC9DEF9EC1347824B
0733D3341B34937316E77E952AD9366D3B2ED045165565F07CB636385E5A5911
2620E185B105EF6C93890833054E05B6301137338A3F1D6AB2F80095E57AE60D
6E5EE2764624849978C811EC38E014AE4A5823734C5CEB2BC22DDA46BB408D00
4F25CA8ED287D35E26A4CACA77D2D4B986ED2ADD3BC0C3405741CAD56DE28C7C
68E8944967C022CC55907B3DFACC1EFAFD38D3EDDA1AADB6E2C006ECBEFAC8D7
18ED3C46C331623D8FAACC6CF9292B8F1B407806A0D4808F51A5BC97FC62435D
15A63533D94ACA801A78D9EF6CCC2845509B1484760277C544D1320493DD507D
D0341F3158E82FFA962C6E62C6F4D0538B7D7135ADCC79FF470FCF03B89F5B9C
0B24D6962D749B776FE1B398A27DB2B343DA2A4C5E8F789B5E49375FB3DBCE19
3BDAA32C3D601530F0AB48C1595BA19E5B06625A1F67F251342D38284BDEA9E2
D601F4897FAB65C05409FC310567753B605267F3E700AB71032C834CAC391D9C
EDA64AE0AEF6A9EE036E5571EB947B812C17D11A1B3073C99CD6A514EC4957B2
F6587DD956F07AD8DF3F4B62BF16551ABD09965B0A44E3E6FA1BB10DF0F93E26
A9983DDDA89CBA15FE8E63E5A5502822445D1C49F5C3E580BD5DB06FE1C509D0
ACDAFA5CFC270FA940B33899E49808F84C2A3170563FD4A099C09569BC865210
9F318769644E995E7C730D2E2A1D8DE8B3A5DCB461EAB05834BC72BB910A0016
8339A024BCBABC67843750B42537A23A5374F4E91EF0C41373AA5CD8384FCF56
EE8A2311D0C97F198C710B83E625FE293E8988EBFFE9B1A560EB0FA48982F9BB
9442F861366455BC3C51A18B8D1B758A944027D7CC3E208BE4B790FC81AB948D
9228A4B36977C4176D857374FACB121B31B6768C27E35BF18896E272E68A3EC5
42FAF760B6E7CB869D4BE8D03B967A3850F852AF47001E470BC3C3CC2D2B662B
879CE9023464DB99BA8C1AFBA2F85C0E7EBB15F7D08B5283DCFECCAB02EE7999
C8578991F16AE53932C5BCA6D30BA47E726A9402B8CBBB5F0458C2ED3AD91719
1981823F52F75E265E7C6FE19AE45CCE8462D92F3E1458EEF077D22E85CDE529
71DD74F20076DBB75DC91DE79A5ED18164BA6BA77D29D3F2CA15AD89B530E9D7
31A1F4A58260D8487174645C9EC045ABF1B4FB4929D74C8834D7C8B3CD8AE3D5
A3C99F9EFBABB64E57AF29D86611CCC50A1F1E27152474AD40DCDF175C9957A4
B2076AEAB384A1B62823C1F79538678C446319D2ECA3EF8024D1444B0AF0F8FB
8939B28C7EA3A9683E54865C8985471622DC17FF147D4F83D228FD9DBC46FBFD
8CD69B6062F4707512DF69D770A2BF59EBD8EBBB5A0834C956FBD86B8EFBABBC
EE69502403594952711F92206B5C03C8A0737931007A73CF386CF2699E50B557
675F4F1DE633D92C78E4CBCF3CBF2D75791A36A97444130EDE4C4F95913A266D
B4F27932278220613AACB04B1616A607B7EDCC7C0538A20258DB80C2FD380982
8F3DE7A3FC32628074034AC9B13E998F473F139A61F4E057C55E87877E7482D0
45D12EF53700DE17F2D9D510AE7FBBA66687EB99257AF044352A0D6BCA148B1B
9F3E2C5C7DADC234F753CBCF9F14D741EA406E51722FFF6F8BA2F5433D7411A3
6931FDCCAE109D65E13E5CF9AE1729A4FFB8CCDEF03A285375256B72607C5E81
0ABA6F9874158E88AC2EF9FF39F856AF73CC36F839B1E4EDEC0FA76103C6E7B8
BF58912D617D2FBB9BA08414D198839AD0F3044BD2395E2D0E3897C80ED12A5C
2CAB876676C13006C55B0995FB0EE114EC1CAA26FB10449DA99A9B85F02AC7E8
4CF84D316ABA31F2EB0A8F6F897DADA28D78CAF3E76ECB874AC3EBC0112BBC74
98AC9C3F693479E27AD9248E2062EE85E35C5211B356130C08520FC4DED04BE1
417E7EC08B4214B0248D54A0668F0614B00AB7A6138240A237197144F74D5FEC
4320C12E43EF969A24A35C6458DE0D4B6251F2A7A090174C7EE656FB7B4142F1
D90F8803ECB49631293341F35A2D9C91C3DEE26894F2AEC3498B9426A5B1AC68
4742768A1BD06CACF8D421F97BA5EB01947173E209527DFD7FFD86B87965BB96
CC57C103D7453C92FBAA1EF9990D4C8AFF22835EBFA018CDD16DF4E6E56D9BF9
212A961F39A582FCA7DA589CBEEF7856BB7A5EFB250FE03673EB92A93A847E80
5E8AD4F35A261A91C4958524C007DB0C89D4A0A6278CA8DC6355F36ACB37BF83
6A021A24B8CA7C1EC398593AA6BB5CD2D73EF7E557D129E26520EA4848944DB7
7E5B176FB006F7913F2103DFC43E4063F1B8FE5A7205F249849DDFAD41AC44FE
26A225B1595494F6F1248079E605B0A1B8D48E7550B57B7820D6AC6BC5BB9D0F
BC76A3746D92104A9F0994B46559335EB2C8F5A554A7B4A248F861DFD8583438
F7F345C6499468F3800DF35E8A2BCF12FB06112D77B08C3CF930F81EA7526CDD
58BEE2EFA0BCBE2E4AC9C2E78D8002EF807D3C8100A4FE6DAB8FDAB5C787ACFB
A9247F41326187278BE3CA612873EC9FA619FC20ACF068F90DA96725ED2C12DE
DF46BDD8D8789C509145365A2CA06CCA5AF74CDC16DCF339BF5BA71DFE39317C
74DDEC3B0EFA6EAA63AF8129D037446142AEE7AA39812F14C7BD98F9C3B616AD
EFD8263B40B4B3238CE24AF77FD0BC7F713B74ED2A2073A27A693DF292318734
D602D47F59912D4ABA66E7CC84E484FAA30D3E4E7487892C77762E64499A42A3
6E4A079F8DA7E34D9CF15CD43699AC210B39EC50A29A5FE327E6211B64DD9630
91C0881816C5F8995FB7B80844D87F95388BD844BF86977926E185C9A7F74434
FEEBD8212D4C92862C00AF95CFF051112FD2E9F64E5401579E2B998A8A125C98
9311E5D76BBF5B9ED1AADE117FB037CE13A516EF38E8B78222326F5CDFBA0C49
BDE77AA888142421DCEBE2CD65881B500232DDA54032BD125FF0F6F8A57DA549
47761E6E4B110BC2FDB1EE0A3BE81CE5E6463F659643E428A71709E95C5E9FC5
89C7101BA19758DDDEB31549643FC9EB051260F6CEB88831CBC4735B9E3279E6
D1E9A415271912929C1DAD16C72590E51876304646C4E65A8A92A23F2CE56C93
656A78087BC539A42C8ECB7017CA220D71DA303350439D484380E0079EF101E5
54BB2195320998C414A3D0D3BD117B75A81ABF9BABED2FB85EE5F991DA628A0D
9724F58D59893EF52B18F725903D385CD98A71239178D54F6CC45039EA1C8114
F48EDF33CC1AABD08F4A480DF10DD08F2DC9C2276476ABF9CFED49F531FED8E4
B422289390FF4D9F5C7CDAC7A8324A83F068CF6F1E382F5390DB61768247CD4A
83E005F77ADA818A2747A2BF48F846C4F91E6CF498B52476A08AC6391DFF5D88
267D90F68E4C390E5DBA368DEBA551D25D95163D47AC65654D3CC6129D1880F4
465B66B47052CA6E3EE1E85B5CFDE00B6DA002381732D16D4D23268BDB9E0CE9
BEC0EFDDCC1F71451D17CE1A83DE07E754CA608E6FC7501DB44643D131EC8526
BBE3D2457BCD6C1006B05C665EE676DF528805F3B2A0BDF4BEA36253BA556B8C
C4221A4955C72C2E26B94C6F1C1D9D6396E6F86E88B242C0C48869CE31435D43
A943143600F44EC845388253A9F363252B6E1926544A6EBAB2DB098329B6FA9C
DB9C9E27D1DCE261580F3F9C8DF592A6B0F138BF5A11AA92FB1DA22B95A9D262
EF9FF7F3288A86A2F8EA8196F9FA5D8730B8CF2041DEBCD7764F145E8B6C5D00
0EE23577AAE3198262E3C847C449398A5A39351FC943C7C63862A04C4B527140
6333E439DAA6A9D0EA06F5235F5A9103902D4D9298D1457CE8A1A62550A0CD2F
9CD6CC606D352C0AF0A1123B8ECB48791A5FD2F1C6C9A71ABB4F205FFA90FE7F
15800F2EB0F95F1554E4AE1A331C73E15E237066A2767511F962C85BCB0BE4EF
DC224F23F38F27028A1645C00B8E8A23EDE033C4C32DBEF43D9FAB33BD6EE60C
F8AF8A81DF16975CE5DDD4F70586ED89D60AAAC13FC6E932BBFAFC7D74F6459E
D27C5128B6DE77F86E241789B85EFB192E728DA506CB9228894E5926F58626CE
B757A86B6419DFAB3E775526CB3A78304E8736B044643701D6A2F6C92456BFA4
9A12F1B58CA95838C29563567138350B220067A8A9C5EF3EC5799A829621DF9B
4B7075FC1F68F9D564C89C6302ADE7D21B9AC7AC31C1D6C75A896589013E338F
5E474AD12231B61D9D76C68AB5536A4B7BB19EBD38A3892276CE3BF69F1CDB8A
683C969925A28B40AE1C4A7846E8D88E65C8B8686133497A8153EA795A658CA9
871295C07937AB8CF633C39F7F4A6F259D7D57B358A7142F7EFAD65C33538733
8186777CA6417A7B309976ABC356B553CF090837283D4589141F886F2B429183
87E41E7840DC547A2D325187BAFD612D5380B14DC03789F7FAC2FEE61C6C9726
126EE6CF747040DD8230BBDDB7A6193C18D47098542B8D0770F8ED364F73C551
AB0B3D61A0027124D2FC598F3E3A6790FEF2D76B72D0B03A47E268B4AAACF25A
D5B0B285AB3A1A45919B7407596E196F7412C51114AACC2206CFF678213218C7
7A86E917AA42711862E1AFF79107BB1E30C24BC1B3CC0E7C4AD8E232D6FC5383
D438E8BAE7A0D2DFA9B19223DB45EF9BC5029E99C386A71891CFB8E3BD396775
E638952F7C05869EE2D72AF65B8B2DAEE468678FE71F22619E9F16CEB3704BD3
B2566ACD73B0CFBAE58B8B57F561D7B8E0FD12DD9788A2333F72E0156BDF3F6F
71398FE75F6EB0D2178566535B7245C0CF6B899F7190303FF1D3EB42C50778ED
8B650A13E0A334180CC596A54695121B60658D0FC40BC76EADA3B0DBADCEAE7D
8D996F7344319882DF1019BD41AF77AF38AB2B496CA61536552EBA223D6917D6
15B7438C5A352A8F5307CF2F743AB13218C78E57A4BE0D122E673C3B0CFCB78A
A8571125440F25F78A44C92D03040CE5D505DEFCA9DABF1E638C26E483C017D0
962663510A6340E7892BB066FC0D372F607BEE81F0E30E84474E527E2455B71E
497F490A8E0400B6F39CC6D6C516EA37EF8C002B0DDDC1584AAA74393AB37D9D
98AC293518F822B3FDD5B94069D4758A8CE449BDECB668473958EFC7FE6EBD04
1728549E75820B50A626C65A1DF66D7C067713815F9161FCE5529F38A9154373
9D1188994DEAC1AADC25F7B84F177D0A9E2334AE371FB24DA9D71EC85A63926A
8F6AF721033FA709957C972694CEDEE52FC7246E7B3931B276D827CF41850043
85E1098F017969BC4A30297A023556B851E76534213297D2BBF24F59E310916B
10B13203EF81533AABE92DA5769C810438C9AD833A53284A4BFA70F2EBCC2A50
DBE7BD957410518DFD93CED5DC55B0161C1033181887F061E8BA54AF25DFB877
0509426254B5CB1FCB18387033E1DAEE540699DA7C28F414FBAC4071CFBC4F45
66AB24F160959E373C0BAD21E70D3DB31CEF57A0497A9E51DEA0B580601552F2
4567DA69B4FF7217AC70E2F3CDA7BA0B7DE627F082599F0563EE5EBB8233C5C6
AD5E0EE5B000017FEDC0DF7F6968B05BDEAD49B85E03152C0F1CB70E8A86BE1D
4717422B3B25218368F1E54D01CA9B5142BDE95654E3BF7FB27B4BEFD2CDC071
69B5D625F8F889752DBBECA516BBD8BC08F9901A9F6C1EFAC9B495C7D7BD3864
6CC9715505E72D75E7707AD88661CB58A071C408178B738F607AF3AF3CCD8198
75676C3E8CABB4AED7E65DFE16F677B75520F5D971AB33BF7E631E7A03067906
6E7B64405DFEF655D057D4794AD38CEE102F0B6D4274918B041D02DC7C768675
D38E558C0A0E34D5759EAEA39C0DE920E83378307D55C7B8B3B462EE36DEE411
9632DF92F222584125D74EB120D8A5E4B05DCCB53EE377658389DE1BC2DD1E89
CFFD29F47C9646A4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.1: CMTT9 1.0
%%CreationDate: 1991 Aug 20 16:46:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 64 /at put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-6 -233 542 698}readonly def
/UniqueID 5000831 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D1E
2931CE5F5D18C658602059F07BE66E6EFC9239D7AB2FB8A4CBD41675B8ECF279
650C29E53B14AC0E392A664848C1844B1CECBB2D5CFB72D0916B675C9A9A1E35
F12696A6F628473C604A95376468E06E295AD6F76CEB939D94113532050B9D5A
D2F41A9EFB9424D986612313B89EFE9C8A71313340B248F6853B1EDBF02B7F9E
F447220FE131D7D54CFB8AA1281DBAEA73E665BACB1F164552CC0CEDB63BD4B1
4A9AE8AC6FA02242DBE8DA46B64B6BFC11762F0784F216FC8B9120D688D1705A
438B14F5E5DEAF2A98408B3B64620DE3732A4DAE6D08D5D97E34C75DAE19EABD
BA0796165C1151BCBFB1DF8D29A63A8300DBDB9E3323CB82D0337598B83F4F2B
A97CF5196D4D1CEC1EDB8966E548C0D9C194C932319610FB43EA1B86322FE641
AB48770FF13BD475A7267E142388563D1A400419C585B22A9886074687BEDF74
D905BE8EE440BA2ABF28EAB673399B7F129B9729DD5564C681954621903B84BB
CAF89AC5ADB2932472DF29ADA2BDBDB4D05F65F28F5F4C529613D61858E0074A
082A852710A62A147C966F2B85B51B0BE85F11D2057C66FDD61F6C5755367980
9F4DE680601D4DA41B46F8D2148450000413C27AA39B586B74B977B25F0FD3C0
4BA1EBFAFDBEC531EA13DFBD6700E53818CE04D23886B8AE75DCC36BCD3189B1
0D55FAE27D0D126E82AEF31D7B5DF27E58C30BB0867D6D7AC1DA9EFB8A2DF095
B5B934A68EE122DA0A83B36C952431586B957990206194E89339048AA6EE4C53
703763505ED57C494DD907D0EEA04F6B1D4C8F3BA778F4E7AA832AAB4D75F024
61E91C6D25FD6823CB24FC863B512AF5B4C2C548B0139409F24CB681B4E9BB80
E488AD6B852446AA4D06EC53413CAA29CDD438DD65BB5A951FAD77BFB1E46B54
DA571485F2EF18110982554358132C363189BB6DA753E781EE9E92C032895ABB
FB6B1B28587587DECF2E912DCA50B3D35C11F15C881E14ACD0186B688DB580F7
7596F44E7CA4D1689712FEE304F6A3AA69294950C879AED44E3E7646172C5B90
0A217764050A7D29175008EE63F9EE54C2143087C3E1402429E0E1052813AAD0
1862FE2B3DC1EBC8EBB7902DB304BAF53ACB43500DFCAB443E1D13203DBA58AB
3EA8ABE423555F440082967851DC1DF210730159BB5AB7560E46263D88A1D102
8D1A5AECF5FF01288EE3ECB680412E74F32E24471B9900FE0AB9A02A7DD1A721
E430C9209563E368C07F678C208DA6132471378795BA4DB353871068A099EB60
E995BDCC4293B7435BEE4DC7ADF567D24F99A0043304218266276A1F9726590D
DCDF81DEFDC5F3E43276D063BA299EF2283AB15990E86D588692C6D33967C990
08F2466BD1BE94E70247A441FDCEDCB837C66EC4B5DE4E4E72CF45E8D6BE738B
BFBB868BBC7261869DA6DB20229EF90312C9B14D243F5AC84D8701F553D96036
FF6D7A6589B827B1F5F1798C650634EDF3E4C0E8C098AD1DFF6BCB5305F5443C
FE074C50B210D297EE6FBE3F4C2EA4A88C219C0E1FE9F5D7AF4AA364E2CC602C
D67154C9207C56C6E55D87972F77D3C7BC0BFE13B5C5F700396D1331BB883598
4138F09FAC2B3CF731D9510B261196B26D9EF8F35B17A8FC4E70CD587C83791D
FA8B1A8B008A6942DC74367E3B520D46566FC028887DD5391FA9FBB637464C26
4D66ECA2158B6E81C0BD58CDECDDDE60532AA1DB0074AA7DF60C639AEE468413
94D9708ACEF550AAE0415B7140E12CC9E54B963CADE8862B07C918FAB1F59F5F
DAE82DEF6201974D5D5E54EFC6E4DBE45752E37A57412782887809819A15580C
9E7219247D2A8E6A8E290F9A160E780A79B55A44A9B2AA212C5221BAA6CAA3E7
E8894F15D2B57AA31D19CEF2A413A655640EE155B2CC188BF79D710C9072ED90
C39B1F249730A19901844FF85C55C7C0D9CCA501C1F14BD3CC9D8B96CBB07367
1A272B1924F03678F81649DD1F8366543DA5E665A9E903871EF2095AA08A1C30
D0DFBBE0D26DECC09AF64B052627012449114BE587C7C0C173D6FCBF91D1129C
AC20D44C7044CCC6AA4C03E6FCAB6BB8913E6E3FC7FA1EF31347C7E77DC2CA4D
89A8B28D0417E61E693BD6B81008E295D12C3EE2750D25AF115139914B678006
5521178248BF584E773678112ADF0C229A784B3794C1C4E5D816932A8DA42C3D
58FA93E036ABAECA18E8DC0BC6DE5E67A4314504AC5291A798B33FD92BACF217
46752DC45F9A514C2644ED9A3C973762B5F7B334E92EAAFB9EA135875260B7FA
3B1817F21682805490ADB0AEE6C105BB961FC231DFA9F566C739051B92F20FB3
95A92B68F4D134747AE32DDC30B431316B91B906C8627FEB204668EBA11DC54B
245F25DB4A5108E0AD81D6452C268AE5A33F5EA2A906D1C31B230796B135A435
1F1BB76B8173994EBE7B152E0C7C4F9C1D7A48A9859A2883D69F8E5CF2013D4A
8FE0A972A492EFDA7AAFD396D98506A0B1B77BD07315470D5B0492B21D5C4E11
7D9B8F16955A8490B2AC65E80591E4D959BCDFBF7BD51D74C659F6B17CA5D891
C13DF4C7E80A84291079F01AC53763F924821447980B6E6379FCC45B590BFA7C
C990B730AB7B1E49A4373C23E45F77ED5790B0A3E87F7B7046AAE9A210A3F0C6
4D3A0E968FF4F996678FDF64307AD4FF98D93C0CA2C55FA5806684F80959A0B8
55D4CC0BB3AB89AFF22E98A1EDFF6C1EDCABD0D98F6882061AC9AB81C8576574
AAEB1F1853501CD0CB4EDA3DDDF912CC4D54C718D577A7D0F9A2B6CA496263AC
3A1336BC86B21981B53F26D4DF235DE8F5540FDCA0991C42C5064A58D18C3EB2
623B29FB31CF7904D367F51EDD7641732A7450228CF6E75AC2F6E97265AAAAC6
1C7AAEC6298C7C566C2A413F7068F8915DFC92E84A80BD6DE4BA39574FA95628
74B86C873B2C35F6CE50CBFDA7D62E5314767AAB616C6589DFDDE84CE0A1C13C
904504B8BD25831ABDD77DA693DE23A67E6573D9C32D178719962814B3E534B1
F99915107634F00BA99FD057AF7056CFB9BEDC59042589DCE3021A5E4B3587FD
DAD32897762170F33A5F1141EC4044A2BBC1163669A5B0F0575D0DD9EAC15F2D
1DEDDC926A32E4CAB998613D71D3F77813E8E75029A147FD6C91B26FFCAF5CE3
7235C419F7C5C2BDD69927D55A0C7DF50F7469A9AF71659D56D16DB453CF8A5B
A2A15CA4176046DC11E883102A6DBE1021F714A54E0390F1F45B35DA6A97179B
A4F8BA64474E30AC34F4055A8AA911C4CDBDBF0C7316A75F4BA59053B1AF70A2
CC1CACA95A166C7FB4A975DBE46CE103A6C43778ACB7CE6A0AE2FE339CA7F1B9
170589136CE6ED158EE479D91D08461C327342ED1E3B9F8ADE1FEE2E76EEF77B
A7807240F4B6DCFD93222570BC81AFDB2688192A700C134BA0D00EEBDF18326C
4DD7D9A196FDA0B3BE758C2207854D10D9F2F1065050DB40D2A2FBA3E3D9CC30
FEFB2EFEEE71731F363B073F718CF987BF35817CA8EA8BF150CD1579F6F039B1
1109C0A4BA3C5B40AB86CC786FAFA36FB53D5262FB0646CAE8F2C30E392CDE6E
B2175EE32CFA64F685445F174C0D920DC429D700E07884FB3BEAD95FDA9F68B5
0046B1531354199AFB5C3C197E3893054DFB4537670BAA35879812B508EBA95C
E938BEAB46FDDC006B3A8EDD55FA51BF8C852E75F4C52FFBB1C8577271DB45A4
20F216D5DBC0941CC7B2F3895BEA0F951A7EB7BCCC609172C4780132296C71D4
15B9FD36295823A3D7551B788FB5F5E9D1C8ABF53131F78D2ACBCD160E093BE0
622138B3E093E82765155A8F35CEF3C7A5B778E6B7E928E38F32CC301FE87E90
1D726475DFC16F83A8183250BEA88001B427EB9F9D4E44CD6928242CFEEBACF3
037C522317AD59C0DFB076E2A0B57C0ACCC096636170551E1AC2CD359F576515
6898578BC51C1FC16FCE4B8BCF93133BFB51018A47DBEDDA81E3E9A33B3B9A84
407EB34381AC26249293DD83F453B701CB970D17F772E0D03F567026CBD69D1D
3608C4F33C215B316762645F7FB9B7BF73C10684554702E568DFA736449EC86E
C9BD7D927D50A3008D95B5E8299391707D3A48271BAC02678B88A0172FE5A532
6D633F57B1420E4A986E46B2F1DFF21D2C364A6BE42B5E7244BB31ADB9369561
F633D6F23B8818B4CF7D47044420C921C333E497F26CA014C3781B03465AF672
8FAF02B3C53A53C3FC1E8D9CED73E6BE82FC70A16C356890F63009565079FAB6
FE53D5A253C750C06A3AAE8BA0CD4B8EDE3B7D8E57E155EF00817DF528D8EFC6
88FAD7A49215018486291591289F0A03937B82012206960C3AB242E4C92E635A
ADE17B54E73A74DAAF738FEA12BBD1B93FDCB7B73DB7B52D5A5809BCCB8F96D2
138B2021EE0257CA26CE0387314072572E9F396C0775CFFC6BD6E5F249C8FB4A
0D510F129DC5EB8F6E71B05F7C7A5C3083C9C12A23A31ECF46EDAAA8C0BA39B7
BB943DEEA268B7C44CACEDB16F5E01625F4A6D954EF4BD464348A0F2CD1E91DB
C4F84D118A16197D4523AA289425C108545E72FFEF8B0FFC279B0EDFF8A5C0DF
4EF29031E57E6953F1BEC82DD44F6C9E73A2CD03FA1707B4609E24ECD3807EDF
8A907C4F5F450D50AE9D4672C6BEA1C593C4DAC4A4EB1BA1DB99352C30091C81
0207DBAEE26322271571E1EAF9710435C9413571E355B829FD647602E5B47A72
17AF5844FCC5E0A0C7383F634B9A8D8AF158661AEF8C4C9FDCCA6BD5657FBD42
1F6693F696F73A087BFFF9094F40D58239CE43C397897BF5E45CB392FC9F8F8D
FD4A33D646AC9930F84094141E121C37C81A908FCC3317736886CD9956FEFF46
9F8BB5520FE1CD7D5BD5C4E13B7918AF2A8CBFB95AC68B6B962FC4B7FA098696
08E39848B4C24DDDC17CB9290DCE19DAF71E8F54A74F0FE8696F28B1CDD8CE33
6E9A62CA1820BEB38E812E809F3F9999B3746CC239791269357451696E8DCE6F
C33508DCB5D46FF3F221672CC3BD3BEE1C4D00007EB464E55D0C7396F30A897F
E89A2DB9B78553512873CBC600A03933B3232F339F1CE0ABD208D608BB5A331F
977FE8F238A5EDB82EEBA633BA1D55EE75A9D2E7AA079D2A34D756A9EACBBD38
51A42B67A2EA2D67907508797D83BD66523747A1FE2CE8E9B5E3D2D7A07D33BA
D5F3EE57F3F357FF0E24B02EB0048EEE6F9A10082738E9DA59ED6EFAA8383034
A2E14EC5A9D3679DCA948F6D3BA79E80B589E7B181BA8EA82B7FE79A9F790E77
16F52630AD8E8199F3A90932B28FECBA22AB7B66EF12CC6F25EC4B90DAA8921A
DA73E1CE48A9D40BC77033CF0D5A263ACBF5512A23DBB4DCD20EB18D28A8B5E9
6D317DC0011D701DAD000A693CA88F916D7A05943B00C0EB82FD70AC31C9D3C2
31AA344E332A057ADB71DB8031BADC59B6263F176DA2315379293C043833808D
F3F4D63C281FA0C248D0E6F5DED307386D62D01D2FC2CF07E2288A657E150F72
BDDBC4DF2A814A1AAF61FD9F9CA31CDB1FCEDE9D6584EE5408255B746F7E62BC
78B18CD5750D47FF8A281FE404D98AE51C947456B5676BD30F2A4B529E87F356
DED5FD25F8EE716C1C12AC021A800E73E38822B4164AB3C0C4011A9190C02F51
7A7E98DE70660C3D7665CB57A7D85CD0D914ECA56AC7AC57F8B40608042B3413
35392F55F4C55FE121ABAAF11952943A5CB26BF4EB062601C47CEEE4F10B6BE5
7BE7C70F86DF12DB57461BFE49CBE6E1C3E0F05419640C2E02E0DA1A5E87312E
3723668D5ED3305F4F8E3C2E721E62BEC26A96F3919C846CAFF6AF1ABEE0A0B3
4AAA5C787C977B57802ACCEF0B3E5C45E797E4F6343D0AC5F421221F339B1435
EDCA29AA6B0F51A5EAD8FA3B15182524AA2E1BBDFB101A57D68EF1AFC1471868
27AD674A35F74EDF49CAC92F41806552789B4017AF81E9ADB4417DA091
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 34 /quotedblright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueID 5000792 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AC46268691C741B2D4
48A840F1128D9B2F9CF07D0709FE796B23A836417BF7B5B12D67F74453C82F5F
25F7B30701D6F6D4F4DC623C0C27D6A6FBECC7312A3CD10932FC7C10851C3C52
24B75DEA8A648B7F34F5711DB0E843C914E25663C510185BC37BDB7593C1C259
21D8DDAD33982C336BF272BAB2F48E68217403FE9F54877B243614A87E64784D
2796EE4179FBF96123D1BEE3EF89D682B427BA4F12A1318A57F18BE5DD903815
26168947724A8DC3DF39EC155721A14AAFD432D73F5992468F84A7B3ECD619D0
97E18EF7DCF54239B374958C90D272ADDCDCD8EB10ECA2AE79ED6C11085130A9
E8B87D813DC8EAF168EB49D2BD53F87566FA62538F1F8FEB1107E9C72FB4FD7D
793B24B9E72B4C356EB3941EC25499986D584B433C43A23EA7F0D5094EC66E86
A69D62CD16373FBAEC1C3A93A71404D89960EEA34F067289C744A30A58647927
5E602A77A88543D37A0957040E33E30AD0EF14CC10CE052E42A5D9C7B18F0504
54D055BD52AF6A111EF491CA0547E943D8DCD1CBD3E3F77C657689B48A96BDA7
83F657FD08427223DD6D2B633A7944B4128F9BF7BA8E2A71D46843A433B7BD3F
77213CD27B2349351308EAF89658BD8BDEA6DB1CCDF7472C92991D492F3C8B1E
D0C299518C93911A9CCD7D77E02C5AB5486D8778F50FBEC9FBCC99584CD8D2B8
E6C4ADFCC25C50ECAB8D437A510DD1191D190B62AA803D49257748EF082EF217
2C27F3168B3D145C7AF3D51C00A1F9732004D2EF8E25B602F57F7644BDD7135B
C4DEA0990BA23A1AA8CE3F23ADA6012CCFAE205C278B9D50381A3E7865C249FF
161702435BEAFA03DE173EB64B1205A43E47F592668604341B3185020BF47686
6D40EA3B463C989076C13DA13F3F566D4AA5F6D8E62328789055B9F5A8DBD43B
EF75D911CA2D758E44625D257D748F3560EB74A1C3D0233DDBB0CDBB3932D058
E14DF2E355662232972009A1B07DA2243584C5455E4D375A13D5BEC0198D0317
DB92178619ADB42230B53294C2C3856A5C336BFE86AC45285A4EFBAFF0835D4E
CE03499C027A63B13D721F1CE255C33E0E4F05BC701D6A6751894715960D8013
B3919BCACBC1901870C303F5D212786E2054A064AD0898C76E17D2A855481108
836139F7F31CBF35E661C25935F94956F9A13ACE86DCA33060ABA164E25A5F5C
3F5F4B0BE13B76386F8E59941BECDEAB79D96E8FE2146A0EA42505AC6439952F
FCB27CC3B0D6BC48B1F52420152D4CC737388474C4B23B21EDFC3A6AB60E8672
8A7F2D55A126C325F348E891AD2999F25857DB6C4D8BD24C1D5EA6D591CF6063
8091BCDF28A037C4B9E74CE6D6783ED271D2BF843EAFECED026F3A7E5032AACD
DDCDAABCFA8007436B83F5DCDF7AE28DEC895413ACCAB55A3C675B24D64F6C9B
5A2AB404B629FE5A80C8F0AAC87626B57DF312F6D95CE47EBE558552A49234C2
9C206BAD8AC31B634D482AAC3644F575DF36C12908D977F28756A8C9B3F6D0C4
3A1A01CF5F4BD7C03A01B077662CEF75C47BA49059FE25EFF5F84DF8BEA2C2FD
63913019CCDC6A6546CD81BAF93AA3E9139F81EF1ACF128A78BE6F7694362001
CD9DB63467F9C0568B7D6A582082B5E9B60149C8F625A11741B292C62D42135B
941F27F6D29F5008345CF2A2A274FB9D61FAAE0FFE2B31C98C1E9B0EF18BB208
5054578404D6D1A40A3E6ADA609AE59AC6C94552E6473DAB6806002F11007BAA
A59B1B6D7F841D8F3C80C7410890DFF450D087F598B857207F0AB037073DDA3C
2770742C73B339F9F8C33610FB4075E1B5C29E158CF329126C3869396FFA7DB3
FF99BE7D701AAB3E58D53E56F7B9B8290A66ECABCA131A963E6DB82D343E61A5
C448348CABC4D660C6125892845977130295F0D3063747C4D10AA05C255CC31D
0F113DB0D0718DFAEADCD48D61045821DC766627B82EB99A4B7798F6CBA24A9D
5482F09C5F277E1043CB0761A4EFCF9F930EED4BF3E942F7882F582D51A3CBC0
231A761412470681A1C4CFD26D48C2D4D294ECE248141EB5E95653CE68DBDE01
9DC8429978EEB9BE2083D457AF51B863FF432CD8B5A34CE1538356157358F3F6
4C24A29026E370D49738EB4ADC7D21745EC916BA9B1B6A4B5323B21866FF4227
FEF4D11251D83E10A0F1A051EDED9BEB5451BE52E9F79EFD06E4E979B6BA20A9
E08DD443C8FE067511F32B90735B255D938E82F7BC7FBF2F8D7350119EF056EA
6030C3A8AEF91C9E34772808A058D83A2A47061BE09DB787BD5FBB1D06D13EE0
EDA4DCD1CBDA0B49D95FC9E80C260743E5BFBAB1FE28B9D144698B620C5D7768
4C1EBE46DF252E75B7010A85A8C722083E28F912CD8958F160A67E51F611CB20
8AA2B722B8FEB9BA4AF53662530F4BA567CE62272B06C3D5FBA1E10D4C15E8D4
5D4CB90914164E5A589F6E57BCA25FA41BAF5B202779B89C8996FD8682A26800
866D15314921EA98D15EEEB917C9BAFC796BDB70BF83AE3686754907AD316929
7B3367EC75E744765126B240D2E587B0EEEBE3669D98CEA5CC7E2E5EFA73DF8A
85A96B10F7BD1C902F9271E1A862C23A72ED77ECD1AA84BA3B8E3D6BBEC2C049
B76C6F650FAEE9A6206FECAC5AA089414B4A8D50CB58EF2464552AA08883900F
AE16B568BDAF804C04BAADA3E2F41D46B176BD713092159A62C097D6D547817B
497250A167FCFD33C7371A65F8FE71F8DFA8595584D0D4A78E1C055959E669E3
B18D36C2B7BFDBBD30956A55CF590DD7216B8DB7787090F7D75AE66068E9CFBC
69891C60B56ED73E8D09F0E2CDD00F906DA79E71D35D3335237E6787FD763ADD
CDE5FC7C0C47C335882047801E801B2AADAA4817AFE50DE0A24592B2E7FD6C46
145226164EA5EBAB3DDCDC5D85D4C779751BF6B491EC159E9FE57A45D66CEC6E
84B62B4D6C63441CB12C0EDFC76A95159E15C872733E82F70EC55FD8EE89D2F3
DA554AEE61E77C0461C23EC6EAB7F3182D65073637150297DB6F0C4905F52E32
1BD508051A7FCE0F48475BD15071D396DD03AC2F88C644D286D6B3270492F4A5
5022BCA9055E9BF83D18D14E1F3B7828938919FEAC53F90FB5BB3F395501E43A
9E6D39AD12E2507EBA314C38F0A9050C1FDC0CBD3D9EBB27B3D6717C28C4AEF4
F2ECCF24DA1CB2F18AFBE4ADF8635C7CA3E12B646D8607A31C78DDC8200BC026
EC10C13C26DA68D3D989D816D5906E62843C7717A101D21E6F0933E64EDF79B0
B365C6E46BAB63E2ED3450F40F09CF51F3BC1FBC423183A7C6209625A0FD1CF7
164D0F1EFA0FF51C07EBB2625DECD1B0872E777085034CAA8326E4BF15E32733
90CE4B2B9696712CD6E237B257033039EA126AF41D9DF64327F79CD1A98A5CBC
253E4F8ED9DD494597061FE99FB6AE8A1FAA8DB3D71C3594CBFA671F0C7C6B4D
18DB40D4867F8C0F9B87A31F3E47FE70A32EA9C76732D0BD4DBD05BCA3C30679
43F44C7B13C0AF6DCEF18B7268101097441944724ED5CF25399A83CA5BA0EEC7
D9D1397B15F110C9496B639552AB7AD7255293117E0D58DA858FD7172ACA6FC8
1A72544ECA0A9650E199AEC3EACA4D080E42C0960620975B4F638A07148282AA
27F20B777298247B358918E3E514EBDCDA912DD29F7C6AFA8E19078C3D766D63
B82E1B0B4E5595BDEBB903440D58B37E6616FB8FD4F32F72A15AAE01E9F75E57
AF4B1E5FACF7555209FA86C4B883062E8E2ED7CFA80C93790E1C9F61EB4E5440
BEB0B0A92289BE034CEE7A07EDB211A5DD36602BAD210F767D6A4938CA39D29D
CE6C6339A51C1405F79E8FE824EC30C53BC80FBB2863EDF997289BAB15D1FD35
930138652EDC0DA12B2CA1A7817BF6AAB81812EB2A60EA609CC2BAC55F2A20C1
C59D73A11650472338087FC891F534D275613A46445F3521D0A919B462177340
7C997DAEC5C735393125B91B5A29019025DAE7CF3357BB2157F0EE405199CCD4
874161E1E273A3E8961A79CA8801DD44DB683C0CC9030D6A7E34CC8E7C824C2C
7820CE2BB0833BBFD436602BC7E497A79645F3C78EDCDE9B4FCF0A5BB58C27FD
9D5E38FC5D7ED27FA9323235B490ECAB62506B580F0025C3EF2E4682D0DAFAD0
F68B56EA06E646B3DDD8EB341873E5F5A098C8DE37DB23782594DECB76883F92
4A49F0FA437B6EFB56E6857EF7700E06409F66D2A2133A2757F121EC3A448268
C17896BE0888EEE5F202C5FDDBBD8FE9600E8212869229AD105ED89B8C1A92AF
3923BBC868B7D425EDA1B430147282BA2F4EC305698A83590319F36988452A40
CFB738FD533851999C8F3A61EAF547E8FD7D07A4944A0B274FF688EF021DFDA7
1BB5F5AEDD6D90BA2181FB6C0FA35C42100FA5F6D713AB9979420189EB285922
E027C2C42F313A99E94941C518BC4AE5A06F3D3DAC785396D2DE2635F152E623
0D1151B088C839129459F9B5EFFA9AA3A5331C3642A7B4CD69FED5461F05ACFE
4928456D3E6F59D1E2283D393AECD126E5F0FBD0E71607BA03DA1E05B8B34294
2F67B09C754ADF9344A0C5EBC84031B0E1474E2665B630A3B5587E2336F3A023
F667938C970577D29DE4B4B722BCDE8859FB4CC5F242FEB3D05EEA49B8D601A2
97E2B59DA6673426BFD7471C76C5A5D2F5C3B074FD7AABC6422E551D614BB9F9
1D7CB917238D5D23B0676F2BF90733C70F49053B13347EE398C58FF8681920EA
16A09AB298AD274BCE519333742BFB014CBD137F390FD11CDEE6AFC0435B6884
3D9CA59362F0531C5D8461DF0C8BB96057A776DD8FADC97FADA65D0FD433ED13
EAB092FDB4DC8017D28001DBD59CAF7A34A76AC2D35C35F7AF739A175D11E53D
D93BC9A3A8A5628DE6CFB627E2FC4748488DE563AC1494BA85F5B8C1E20AB88A
BEFC099CADDCFA71777E4CC38CEA655517057BA14B90147DC7DB3EF238112EF0
62FA613DB91C4E0C1A0F7334EE24424F76B62240C5F026667654440D1B35F1E3
61FD1909A93B197F5C97878A37ED9607BEAD685414ECBFD30EF8DF013ECF49D3
F67B51846D0C1FC992C61085A6AD2EF089B59B6992324AA0F018B766B68CA2B2
D93DBFAE51D124CE478F3DC4C7091D5AD84F09E8FEA94813858072465748DE35
F898B34CBC7734699F821D11E0DBF02227F96FD9CB8F7F353571EB88FD485BDC
16F2908F0C2B50919D5955092D4713C7F33B43CE7FBB0B1207A4F7F722173E02
0414E69C5A2CA4576959AC55C81A673FA5A77E86AC9732C1C632CB2569F1B4FE
4834803F6BD55069326484AB58473359FC291B431432191CA6CAE8DEA9E6E185
B381594CE01F45C2700D7B19E9861E91303469233B7E16FE1126BB5716E646F0
96A604EA45F38366A3813FC665E98A349C78865E4FEACDC71E52E595C169D9F0
D5AB48D75E3772D0D95671DC53E51BA7CCD9AC0094ADDACD97C21F7F67AE3DCE
E32DCBE6013A6AC9C0B77BEEA076B2F9F3FEEF37B0D8801D0F06FA92B5ACBBB6
40B017D86480A782BC934488D1489DAF828670FBA7169FE67F748724DB65EE20
45F807A9C7BAF81843BDFE1C5F31E69E6A94AC0EE878E1FB629E1976F10A50E2
FC3B1671CD44DF385F144DB7D17DD8FCE84229C623279A2873AF2FFE3E277485
6BAF77961D540E7B3D952F6EF203061FCB4A77151B8015DA2D7C95B3276C293C
B1DA306C2D15285D49765BA0FFEF98E1504720E82151791708A7FC74B74B7843
1AAD2CB588BDF121607140E030756256B96E6E003BFE682123EF2CA25B865946
5C36D82F45217C016B1F588078E56EC594AE697B1B20C20F1AAF574A9065F7F5
42387B67807364C9A55FA0BFFF369ED94DD78DFC5FD9249314A705BAFD7FC4D1
26D6BFE92AC4DCA0B188B0BB38D51D2DCF2FB992FE28706241574BD216104879
E0A4B83615E26F6FB3B2902845BF832B1C9D3565C0F47C4462D93F2FF7DD03D3
AB8D45ADDC1E8008C0B4EAAB0D3D28A7BD17DA6335232DC0B912089AD28E735F
A3A9080DA2C2B62EC418FAE9F55C650D6EABC1D1A2489EB5914DFC20DAD96B73
355E500D177C0C989CB23E2150BF1283EE029B9BFAA83ED7E205C27450008F53
AE13ACA4EC5E51CD9EAE0703A36D34E831FC18C3BF0BC9C2F0B5CBB93DA324F7
C2B13FF7095C43D4FECB021EA58D2C8CD55A4E4E6D075582BC23DBC55FEAF23B
FCE7FB64BE556EEBBACC5518EA41862ED0FE2D2B03D47DD5D9353CA36B236CDF
CC1ECEFF764F8CB7BCB579C286CC814EB342996D9C9FE25B988D71A1904B4948
17D2E5911904066988064166FCC6C1B25B611F69538B33DC528FB918396A3A68
74DEF65251220D840276650BE6B7DFE333181470FBF41167E8FF8FFB37F545F6
82A0C253B9EE48E2D581F129FCF21864407E71CE591CA1C68C4FFAF56F444B82
0246A63D8C857CDD27DF2AC6D196402202D8D67254E0C104EB19F32AD39C09D9
5C61A7CE51A68D98E328A39BFDB5D4C99A5F54CE812A556EE827B728DAB5D787
CDBCC523C6F233B22D1DFF13BDCF8C2173474A45ADEDCD79D4075506B9ADB3D2
7EFDFDDAB68298550B4AAF0152B7C4AC381B75B8914A805CB4ADB01C558EAB18
1274C3EB16490D1FCDD6210657910DB1FFDC927188925074DA52C0E32017DC33
31B22EF7F3BF337F159AE5C5AB593079813C3CB931A314664D0449FF7DE4C3E4
41A071ED27B5B36F6190B45F7CB96C3257D5BBAFA3DAB4A3B8AFC4A20D67876D
2DEE7FDD847C6D310AFF16BA16F8C3A1E79AC14F2F83E092CADC15F619110DDA
BBFF42C13C5B28A2D7EDDD553DB47B8B14D9213C4AAB28EAD92656F67C8B137F
E0F2BF1F5732572B159210F2C057E91F1E258698CA2C70146A02897378606489
833153169A349C83F252F5585E64B0916105C59925BBA9626314EA93F5F5F547
B828B2278F1DF1A2F6E8A953DCA80582007E4F06DC8B10714E7D0E44A22ACCE5
10B22A79A12ABBA7FE2C2EAB026939F924C7FE4C58B376D63A17F77E0A2BABE1
7BCEE5F3AECE3E62886BD1380773D709C976BE5018CFBEB9A6F677B305ED724C
43FB6CDA54BC48B9B536892BC225EB87AC394BCE4CD3025E1952663869F03837
3389ABEB694D04D4392E992F71BD1BF8DF69614B82DC8E5878698A902DD5B372
750872F546F3D05F490C0C107839F982F7314B87058F112E2DDED9F939979C81
6BDD54E74DB880DFB0D2677D3D8FDC342465EF95D23C26E9C08F0D3D81A91618
729767928DF33B7A246306AB65F305B3C3D4D23950152E49611201B174F61ACA
6FE24595B964CF036926AF188CC6A00196BD65A1A64042CFB4088B4BA518A5D7
6713C7E6D4A513B15325D29E2AC2D281468B0864F9C46A35D34E5AA6301FF309
D0C98ACE336CD1DB99D49773116ABA421FCD4CAF3E414E2DB3238652938916EE
7BABBEB59EEA033ECC6C5250E9568FF2D6F7E4F093529E2B9F3C08A587681CE6
7410EA113E2A4DBAE99F2425C86D04E9197A379304C9BA414CBBFF619243F2C8
1DFE3808B6CECD1E383FCFD9CC2CA08B85E72F356E86EC610B44669003F227E2
BBD9E8C91472580F94B75EEA0D9DC0CEE69D48E1387AEC08C3EAC4C3EC0DB6E6
C54F7E49B91A33FE388A10957429C96894862BBB12AB3A516B5A27CF8DCDD697
6583EDD7226B0905A29099658F2E88C2C53507487F43780B5CB6FF6657E85B8E
5AFF9B7D2424D0977BBD683763FAD3C93A30F51E9528ADEDCA73DBD9520AB081
45E0F4D22DF8E97B57F0D6030C5322B176E6DFE34340106120A5A78C455C32AB
CB520B0BFBC9466D603231A57E7DDA448EE12EBFA04CCC3E9A89E03A39B35998
CB6DB7776789179BCE4D4F5D910EFC46727FF13798A47B5A5A29B004055328E4
E7C9993B663FCD5CF044BB80BF3B8078B645D1A63C4CA6C92BF1E7248B74331A
287BE47F2F12B9D25B98E319065D99E93A6072BBACB12A61D7CAC511865B2BE9
FB20DFC5F0A135F60B22D7913FFAE0D7B3B412A282B8EA0899A3AE3701D8C532
0AC215E4C635927D3BAA05243F8F14904143D02FEBB2050C9F457FD2F31B3956
4FDFFB10144814CC61EC27A2F780D5D678AAC6C259BF72C6141820A4119DF280
F8FEB340035B73C0E47546CB7B287FC9DE46CE11A29A77B13A4EFA6A1AABEFF0
EACB3C841EEDABB741BB5EC7CD75627B54C78B1A4CF05D3807E009B844495FD3
8F3E070B117E009A81A0775A28B192F0C5E0B991F7F15D44FA9960B980271C1D
4AE6653BE6F786E77DD86686F3C673012B3542274B96D064B69A9D63CD898691
A880B8C70AE9A891C095C8599A208FA58E90D526507C6238D8F0D3FF57861F19
75744387E6E2DDC27DC7E07E3F56816E4E5A2E890D24FCFF8B918F653809D7FE
5A570877DAFAFBDB5A513A0BCD538045173DEF99F8357248D6329C3436D2E416
4696E1EB16A9AA574002F2CB14EF2059B5F799FC0659692E85F2A318FD4B350E
5856B23206F4F55C424D1F3308F6975AC12626DC89DCEF1A297DD30BBF5B0FC8
EACD6F57899BA800E35015CC5C230DE0E43CD2B2EBB387AEE3687AC484E263BD
00594A9136C95F98E38AF282B78207D2C823F6DD8F40F739651251CE1147047B
60A00B00D684731F9CDF6573B3855B4B6D463E3E09E0C4D5529CA19BE38DAB19
E90A996961492ECF8978BD8033B560245A9909B92B92F26530C69A81C6F81B20
8F337FE6EEFF85AC29137E6CCF309045DD6D37423CBA0D7774CFE089A6F06031
BDCD8717A40A5B004EAE50E99532276A01704CFCA3856CE1AB8ABE7ED8E596CC
D0CD56B381B21C7961ECFCFE5B5EA343A71EE11C9D068932862067BF20CD27C0
2B11CC731B03CC41BB2C0CE388AD9DC5132B03D5A9F17336110F6A3E06E46B94
432FA2EEF9B351E2BDFED6908D9015B708E104DD0F04E50688E193F78E9B7289
787D509239500DD1AC7978EEFEA280BE5ECA4693CFDA9EE3D4F445839847B34F
963951CE3CC3462D4FB83B393E04EDE0AF2F30EA308E1A45A5BF71E6B99466DF
DCAF29188A1D687618DF443D36A93EAC6864386B23CAC0F475E3BF0B4AC7C7FE
B12846A2C8977C743091455E6A6D8FF01BD651EDB626707A5C2FBC3C7F4ACF7D
CC0C8D7B7CD683DDDCF7C7465EFE8CDA4D89F14E5A524B5A1140702805EA0D4B
045E6C59B5C7BCBBDAC7C0F237DCF252FC07ACB13DA4032B247EF1EDD1DE7791
E4B70F47A0B4F579BA7EEB02381C189107159D69FB340EAB08A29CF130996114
0B6A38513907616967B131E2E2E38E0C341B41992E5F155D6DF8B76960E5113E
FDFCD77E77D6E8D2934446F0212BBC9F127F59F9A6448C5EAD94AD8F34545BB7
BF5F7472F263E7749BD149C3EAB14461A5D45F7C705A7F5CE59D4EF976BD823D
FAE41FD3EC58F9165B1EE223AAC5C05302E573E57C9D5219E2A86B2F2E73D838
BE54C6F41C8C24EF839800741BCEF620C82D885DE373250C8D25E5A664D1B46A
DEC49FF8762153243B65460F51405DFCAE7FB231760002D0589D1E0B869475E9
E4CA7EAF1C3F16C53E52DDF13E5949D2EC07C968CF6B2DAFFBE1302F1E89E2FB
C882005B607646E6FF36DE618013EBBAE982AEBAF79C1234B9AEBB8287C8B8FD
7C4781021D1F0C7972C8BFBFC5EA2A69786B4971CBE792729148F17219A1261F
3D6F9920FF9B9D13128D961D90969440E462A27B1549131AA7A27C4D49EA8F80
BE40E9C8D1F994FD0C8DF0FB63B91F2FFB2B5BDD4AF6FD1D40B722D4BF9892DD
F0CED910BFEB4317CD38BB9EB03E2A53A0D2719DDA269DCC5CD3AFAB9F224722
AED5DEE62B34F40731AD269240123D2D877FB4B97FCAC4CB10415E7D64D3D742
A1F4CBD36D2362C517638F5EBB0513264790840BAA93455E9770FADF439F4E85
F3B4343E9783B6C62AD96A892FFE88E5F33C1D530F082EFBA71EC35CC0639A72
A9335CF4279D90160F5B6A33D92449DAA1FEB27F219CD7D237B867BD34FD11DF
F53DC94D59D0D797E289833BF176CC6A9A36D4CECF4F6022BF46880011F7E250
6B33CDA91683559116AEE11ACE1200BD8D11E4AF07906A137C6B1A557C860E2B
9C5CD700CA0CDF7FB8B2401E7C59538831CF76CE79AC4B1226B59F45AB67AA8E
889779D87B63091738DBEF874C07F7F77144B1A5E087A1C6C0989729269E20F1
533295F7D85718ABD1030D6AE13B306FC1D323576B9D7F55ECD0AC70DB7D5C80
F90F10732A6214E7DAE701868D9487AEF508D2430B092CF49F27550B333A1A27
8D65DEAF593DDF8AF6BD0E39A1EB17EB1DE1C822080907E3B6359FFA85E76BF3
FFDB3159C84AF1A8585497CC433D0EFC08CC6EAE0B20AE078360C28BE67FE54D
04A48DFE0514F8B01A07F32FC3BF98FC11C69647BB8A72EEAE0C3A175ECE65E8
2108DD56D814A1D21FED060CC2A0C618FC4C4D559217CF4EED5FEC59FA752CE8
064F3CE9E82397DA1AF1D3933E9AF14D6EF3E97996982A8E545AD92EE48EAAF3
CB4B7FD2BB3B5A6B693C29D5DC02C2A4B02211748E4BC4DAFD94D246C7C6696D
06A32158A7C710044C71687CAC19BABC0DE6637645608DD6FFF0478A36446472
3A2F23CFE7614FFB0EBF4B350DD778205D33012701D57718BDF694371ED02228
6654FF1CF74C153BE8810FB124F34F4A8BB4C75EACD86E9E5A05F4D99EA2A813
79AA90DC67E36FE65EDFD26F85E9A771513074290C88B5FED823446F122B9406
8FF8E8ED73F3D8312ECFA94A25B7B486EB026AB04F8AAAA0D6D7C67993F186E2
601A6EEFEA10584B9DFF2028DF0B54978FA22973767C2383836932A2B1625AD5
78FCE3D3F4A6E351000144CF7EE879D991598A503EFD74F5C99E997CD916B158
6B4B8E1DD7FADE040249BC958BA2F0D8C402F22AC67942529B1A2E75DF061631
CF0AD82C0728EEC3307BFC1DD02FD7705ACBC3E094D9C46B16D2481C75C3DF0A
95E6E33EDAE4E130FEA213706484002A6F55E1AC4844D169C33F73786282A33A
29F93754CC8BA2DBCA81E04EAC7808B7AB4E9BBD9508D80B4ED85AD5B654B432
590E7B324382D873510ADE990E9E63912C3B69EBCC11AA20D281F15F0D6D9BB9
A62354C3A75A65D65FF85F3026F3CB48A5DB499718E517A621609C91620AC47A
E08477912E4C777DD11A06BECD94A7C8F17C1B031014E872779BA5F20C67473E
5253351B2570D485C3CA2EC3E4F845959DA91C7AC0B8F9DE984DAF8A9B39F38B
22FBD3BC4A1257BFF709023B35C3D0495F3EC2D24D1D79176CF7FCE1813B38DA
312D33858E2F63DE342E0661E0E10385E44A92D3BA077C84FF055514785D90AC
0BF7C4A64D976B9D2586E86D09317C64F99537AD8A6FF251FEDBC5DCD5BCF11F
3DBDE3AFEED644F269E1879857C042DF6E1AD8566DF35ED6387D2404A3873E77
FE891274748FCC6C37A394368E2BD635BEA1F596F82F6864E0C3BEA492E9BAA3
6E88D8688D2B3F088AB770A62DB7F38FA47BDA830AD9108A642364276145D254
BA75542D0CB50133954367393E6C4EFDA21520B46DB88BB9357C73262DB9731D
588843B4B272DDF2201B62ABF80D63EC696DBF6C546B46A3897E49D2B1D449F8
01CEA2D349791F89F5E5997651FD071D0021A90F27F42F6DB00D7BF873FBA48B
6D03B3695714CF70CEA64D7B8AC3A3876E2CB90881F28FF90D3CCDCC7F42DDBE
E490320351BC82AA0DA29762A4A1B8E61BCF559469E25EB78CDB49A76384835D
579084B34380B6B960DD316F4A3BAD44913333099BBCD801CD44499B48C8387A
B29F8F68743756206EAEF9607B8145958915DCB43BDAAB2C98AC1670624A776F
807EC485099311E41D6F1520656873D0ED83D64B4853E167AC271A021165A399
0B974C3D53FEC8FE48B040B29E9B3B591E402D90A7CED86A573645DFE6912F2D
1AB39420FB363F17CB6CCCE2C4F7B546AB1B1388C06F464FB16609087EC5426F
BF2E9B39079902E57365377242E847B53D24D51ECEB2913DF4BA59A14909B88A
C0FA6CBE2D2E5199A9AA1A06CD7BA4903953C7B023F5CE630D21B0E3E7FA0D6F
04A87717F6E98D84E8F1CE630F2AC36C0E40A8ECFB7D74D99A2B6F6D25516F6C
95FBF6584E221A53055DD8AF463DD6D20176C57FDB3AD13A1C1CD53DD2BB5BBB
76B2805EF3D437670E6AD9737D1B024C4D94F3934D148537A4C278311118A55B
8A7C854397DE35A4795E8AAF74799A2C278CD7B60562F07A3677A5FE394AD07D
CBDAA71B7C8E73F19B4A382AA84C7CE4FF88F5FF4CD57C2645D8A86A808C8CAF
1B9DD6BD0F6DD7BF60C0B6CA5A280734D1CBBD5E9563760C13E54C6A068FF3E9
BE7952B78EA320DC385E98C32094121FC853A6F53A746087F0ACB675D8E85995
50DDAA49FF031C3EBB982C7EEBD67D3620378C1A9ED57317B6A90A0CE0758164
DAD6E294E5EBBBEBCFA727C1663A76D262342F6708A9007F16A65996A5D0E5D3
15E5C9D7C97B8ABAF63D774E89897EAB43357A555721D237F5DA2B2BD0D8285C
6363AE1FBDA429E3DF74C83356EF044597FF5D6EF608ACD733AE7B306FB0670F
D92A01866F3849A30DE4EE6895EDA86D26CD331D5B827E70EA2DE560A208C4FD
14C788A58155075D8FDFB5692C7B0ADEEDCCBFACD673746AB453EBD5789ADBB2
0DE94FEF64F09A31235D1907FB203A41BEBDF810DF75903EEE471E11A8151E4E
1A4B19F1A8C7408219106D4D162A163902A17CDE7D283FD7040A8ED5C039492D
08F4C3A5F43BDAE7460E5F447746097F3D02CF5C222A396F44D637895B1BBBA3
B71E44DD32B15D0A86490A6ACB17B8F42BAA999BD345E346C3C47C0304426546
0A05F3CFD7EDF2B3E8E1CE631675FB9C13968FB874FA76C81F1FBA5150A667B6
C186E73BEA311D08C1128ABCE73A588797DDFF06BAB78D2271F84DB2568EFD3C
ABF20980F16E344B17E15608DEB9FCB46242B844C76BBC7353E62CE25511DAF2
7569F183854BB1E60FF2107EC8071E6F23CFF4E73BF0C0C8A299C38BFB4F66CC
3B27B7444D86C3D0E5FF436E164D4AC8FCE9ADFDE954FF812ED679FBAD402E0B
8E00C6C0387AF8A9B4833E2BE002C30DD3F18C9205A256D3D2D43027264BAFE1
FF222621C4BFA8F93D86C1C52BEAD7AD7D60D0A9878544613A422471CDF090D2
8931B3A528BFB3A4CC19E308AE670DD7D5ECBFF1BA32D53ECD6276E69F2816F1
93336420ABA847AFCCBE84576EBC0A96EB7EC4D721A337CD8E019B29EAFA1C4A
5E9CCBEF9E1BD9CE36E935DFDF667D5222ABEC6F7319A08FFEEF950B01269070
125D5E7FE1D489CE00BE2F610B867A1A3B1692A64EBE7EAC84E26D4EEB0AA5EE
E238C2C7EF22E2E3238DD25A66C3EABADC291D0EB2B6005B6DFC68C71F64E031
7E53925C4CEC742FE002BED0DA43575D161341E4AD377BEF948459D0DE615F9B
C453164AEAE09EB0CB85A4ECC2A6932147512DD89872C7333AED46B0A23EE00D
89F8FD6B8D732CF726A40A2C38CA80B18520A181F629439EE8140B20397C2B42
B991E1674949ECBC78BCE4429BE6619B0C4AC6E65548ADF1DBDB9C1F2D0C4E80
5C642326893F747B26AA77A04EC3DFECD6DCE8AA713EB29E32469AAF5A204FF3
8095892625C55BD0A7835555E7C87BB4C4ACB98055B418642EA75A36AC7C3C2B
026A9455FEB9E0F223898349ACA9AA37E4FCB47A4D74FE415235A0E60EFEDDCE
6D6B822B9927F52E31A7B743C6F6FDC57AB5D3E82C4CE4D5659EBF6C312B2B64
BF13A95526BBC3E683DC70E18820C307817363B8D5DD5E00C95F5C0E30872214
AFE312988C6D4528B727C322EC63D1AC97B7710ABC27A14121725F266FE3D1E4
68F05E7563E1724D4B3AD1418F9282592ABC5D3888B5C7DF66E2C27DC9D9B386
281B84BD2C8E1A83AA56A6F3A4C1B5FE96CAD6AA097EE1947222BB6CD4680E42
FD8EAE3D14A201E0751E5090EA5F5C1AE70CA7C8F4F7E7D1A67EFFAF179C402E
7F965EC428DCE978DCE3288103DDB58EDB0A519CA5862E34DFB7CC2193404DD7
3E74766D135BF815501B7CED5BD0DB605919D823AD3B1AFF81BF06A3F140E273
B41487DF53398115A99C79FA78A36F4480958704596B6DF412B1721EF31DDC24
1A00A679880DE161B541E4798C965DBE61134281B6D2C18B8D17660F35E97E78
93AF80382849E1CBAFC61C8CB94BA1993F90045B2E06D5F793874392B0D47F2D
6765065B87680F1DF715A98F4B94CDC0BEB1794641C96BD42BFB3B5AEFEC3695
15FF6DC373921F432B6B7A902F4C8A718B291B9ED33A6C01BB56051B50D3BCCC
4283BD8EE081D42BA153D8C040AC1313C5756F4DFEDCF394FB7595AA7ADA35C0
0D97A31AA252450558217A4F4E35BC461A6492BDC3AC30C688002977F1FFC07F
7AD4CB15E8893D360CDA458BF277DA705274F9B95F2ADD4F81DFC6366494F81C
C3791967B71F2192B10C5370A3F9851AB283D338D8588B028CCB8B8623CCC875
EE927B3903367CD4A2EDD740F0F9C8B999DDCF231F07AF49AF7107764F46B35F
64B1D7DDCE602887A58D9FE8A0AA03B15835BDB1B8BDEE3F24DB614E5D588092
3CAD30499A757BFDEC906024E7972E73E440223A26885A5FAE2BC9297BBAEDD5
06776E755CE61A0A2243D50E4FE69807ECAFEE64F9262AB4CCB4BCC8205F80BE
E070EF28438DE26FE1D3A7A4C2B0D9BA6E9AE669D661EBAD6D845FF9A61B1033
6C3D12DE1DF94390F18A7647E84CD4E23907FE6EB846BA590599344379A83F66
3A6EEB8E4F7AD1037B38D541B7C01C29E13B0A57E979A1485978C56E27BC7384
23C9B2178888F71F14479AA23E4875AA50327B5FB82A531F36DB883CCFAA9D28
9E1972DA17BC925CA3C7F649056A1DAC85E92314B7FF3A5D4A0BDC74CE9FA7C3
78C4C8428C75D3147EA3030415E5AD6962A0780D06056F1E02FA77DA2E337003
ED02D41A9CAFAEA44C4DAE2A4EE304024F4CA93119DA407069721720483D66AA
3F3CA4F0BD1AE6523A6AA432C3294BFC1D3005216DCFE3BE881948B83A6888D1
BED6BDC9B1BA7CA00200D58B418E1BF73BC6FA50248503B8E08AB522C8C86AB1
B1B5EF63082B3A308361A5C9A275AEEF66F9E5A758032428CE79B620C15FCF84
14D85D93100350327D62FFED456C3D703C4407D35308D6113C6183C2EAE4A026
435D0EA9084F2510312D841CBAC0B2A6FDEE7F6B1DB0D03D4D1CDCC996EAB518
D86D92AD03181ADF4B767BFF0A05359C431AA2892E025688E64CEA6004E50B6F
87265C132DE0B1D5062FF6DC6C6C127E7C8E1CC1059AD074DDDB4D74BAAD5A90
298471052FC14A8A9021F826BDB15676DE9B1FA193E8DC22194BA3C40DB5077C
650DA20D1E19C522929274E690ADEFD0884C3E2D46D5D08B4130C8E7D03AA5D1
0B3DA6D73496AC63094EAED7E86DF925802DB4BE9755234996E1B796407CA0A5
A0C1331933CEA9827605398710F70B535CB258CAADE6B7D00513CF8BFF4EDE6D
F3303EF4476CEE714704C3089E1015428997A192554B04BEC1F34F8B2B19D318
04F3E0CD411DD6E75C90272402467A1E60752DB8BB404DAA9A3E4211BB1D1C56
6D268B45914E30CF07C74147422F39CB789ADCE145450EE829A76B0E81AFC15F
ACBED44BC6703480BC193085363310F91BDDF2945E0665FE595323227A1E3F82
47FCD94416C53BBDEA5F5F5E18ECCCF3A5375A008FDE495E55196F3F507DAD42
58557B3A94705F7EB853CF152BA189AF9A9D4DABCC5560DBCB30BDFA7D1C90B7
19D3CE1C14ECCE765A72DD42E147ED463A86B375676C3E8CFDD93FD73D00E012
79098AF742093C96995EC514600D32F4ACE22FB37D679D10093FCACE50EC1082
4C290E367E8C2AEE91FA7D35A3A5E37A33AAD3685D16B86770C24B97AB9FD17A
35F3B2C70EEBCAE43E8DF2D4A50F7D567EB56C62CE572994895A6B8D82647332
1753F7567EEE5EF8EA6DA1A8920D859080CC60E2E2D70D32621CFCAB6BC0B980
8F311EC7A3D420A2C4B08CE332C1CE36F790FCFF229611472D12287C490114EB
74A165EAA933A3AEE2464B559407ACD84E3CA8FBBE8E5EC9FD661DD00924C7A0
D98C192C154C3190F10B40770E5ECB8E1A5AEAFF6F832E5BA8D5F3A51BBDCDF4
5BAA91B8AF86FA19707306A9C5E8546E69EA7D6F85F59621426C2B19A352662E
193318DDBC857F81D5CA3CD1AB0B819891F8E5EE9AE28C264A14A80E3304B671
E3D7BB31C9565B589E78ACB301DD7D353971FCBB65DAC150B3698D8DCF7E1AA8
7FD0734685688038BAF9B12C1D6D1ED1552EBB1FCBB0A74D1232A78B495B6A67
89DAA8B1CF87C625C8BCBD9F93165945D2B03EA5B4C52F5C11F6495FC748220E
60A3D043CA819451D64410A468D12AE717A9C4E275FC408321829A2A605A3893
77D3B59854888B5DC6D8A7261724EDA154FCCDA042D79BC2AE144311294BE828
983772F7AEDDB3116AF7D7D6CE4124A9AFBD08F81B71DA4F6F8A96CF7EAB527F
8FCFBBB23A542F991F92A88FFE2C349E13E0B015A4E1F25EF4ECC65A6EB8730C
3D4A9733F904168156675362EABE93AFFDEFAA1B40D16D506E7A116155AE2058
8B535495259B215672D2FFD73CC2A509135EC0F5EF9BF9236274C216F07A937A
780C86D7228AF95A0020FAB7570024BCAE8EF5FAEBC1F0F680F53F931C522315
353560BD756A502ABA0AAD768C63CDA0305E6E901EAF44D8A7AFB9B1958FB148
8F02A1C7DE344D30B6737628EA24D4DC3D7FBA00920A621C52983A9F221EB929
BDCC7F67CFF53B79C81A471BE95B33B6B702286A19940017EC3FC20FF531957C
F71F022DF47E13CDDC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 54 /six put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueID 5000789 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB62FBEFBEFA
AD08ADD6648E354B05E584C970AACB6E015F56F3482678504279F10E01CDA446
6F6E039511BE0576EC00ACDBBDE8DAD593121F1D855D175D616711DB93645AB6
03227673BAF4CCF593EB7EF23AFEB7B2CB7AB053C26530E564BC01C2F74A3D1A
4C1279D91F1EF1383E34E8218B3A9918341FE9E346EB3EBFE627E7518D6AB787
8DC227C39FAF27D969769756B98A0A078058A6D04DBC5A18344ED6EC71C98E00
7996DD675B953CBDA5AAECA2AB8819E1FFFE61F2A2C48F13B70F8334E9A2CDAB
4603C68292AD8A93E29A04D262AFE205293FC10AD70F360DC07DC03E00CD12A1
5213BFEA869BE17CB485E81907A09B54E11FDBD10D0F96A93331A1C67F567735
D8103CDD80521A3C99A41D027814CF6D405E1ECCE56AD06878ED9DD601EC3D5F
77DFB141832D6A1205CD020AE2DC7F1184765AB81CB90EFD36FAAB3EBD0DD796
C157BF3E867C5BF7500CA0265053574EC2B493943E894ECBDD4FEECDCA195DEE
68A3F72351CE5732F1E466EF31F1454572113E8098A3433CB162DF809F6DFEFD
69F5D0C8050740755A41B1AFBAC031CB876EC4D1C8EEF3E35D9566BDA93F2AC3
55EB2BF661A9111BAE2534E4A8DFC1A37148F928D7F6D8DE1F4B4C5A32752F24
F22035330C53BF5999089DCEA2578E92512D265EAEB3A6E150EF343E22033DB8
A6B7CCBABA52215BF69218756FE289F3825F4650796FE1E23C575132F99FE2E9
E7919B06E71FBC1ED75F74DA20E4A0720D0023DDA270A6F104B03BE9775AB5C7
716C017D25245F778FBD409BD200B45217D2BE5573D15CECF99A6C94DF4717E0
1AE54B7651AC2E8D9C75FBD8D4C52671DA743A4A2C2FC7BCDAA07D1324FD54F4
02802A68267D6A35E576E2D51E7D28D9E5A9F246CB313D801F886312943907DC
9D10C1F108B1F237D3C3808F440B0F8DC2F6ADD6F2C992E3A529634B82196850
0CE2AA4FCA19C321CCAE7427B22713B5BD0B27D9402FC890034139485EE606F9
4AB6C52D7AEC5C311A7B81A82765616F6D6F18964A0B5F4339AB8914F584D56B
E410A1290B52A6701EE9F684B2AE15F4982A359890A00E0AB9FB62849AB9CE56
8A47FDB676E6BC0D838BF55F7C1E0B06F658D189C9DE4F19DAB30BB41357CCFA
4B1FE11C54BDBBD03C1A26ECEA380E5ED9705631572F04526384CE7AC21D9B88
2A297C97EB7A37CF365BFA05F3921BA06867A178A30C730AEE349C23E3E931C8
709B2F0522F24F38E270EA8FE96B5D0DAE418D74C5D1DF71C86AC26F8855A0AB
D7801A5F545E50400F5D79A4458BB9927F3430D66864D453CF70795B65FFED23
85963995474E956A28EDF615561156315C3BD71026
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 61 /slash put
dup 63 /star put
dup 104 /h put
dup 110 /n put
dup 122 /z put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueID 5087382 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC43FBDFE1B4A245C9AA8693DE3556FCF9B554CDD7F7C4AED9A836CBA
5204201FD54A8FBADB94CE34561638E8F925F0095D3B03850134E00B76501085
0A6ADAA5F12E05CCEF09C608E5DD8EA4ADCA9E11433CEB19BE0E5C771F7119B9
903AB915939518F34C1E06300B83A6DE7768DA0845EAB46F9326ADCD95383F29
F9959DBF64EEB5661911DEC99A152B827AF3FC0DACCD8E6104F1F424F41B05DB
C9411C6D0C7F530FB3949C9019664A7A5367559E3FD962D64E97F480B1CDFD00
F17079907D7D09008A70C21839796677F22637C94F2417B6A8592F1DA5B5157D
96280F64CA251E5664A5896F7AA4E98A145C342D50A55A00DC8779BF46102DE1
35B61066534A212F99F8C591AEA80A4679D5F590345C95B41542D941BA2E65CB
3B88998F915DD480D0F06717BF45201402F3F4C62DE8EED6E770A97544BC3AE7
FE3F6E6A8156EBCDAA9E06B81D0C80AA6CBE184281DE2539ECBA61056C9151A9
3B1B155BC47179A9B08AB64C10E37D439C2A410188989E4E535B5102150813AA
984FC60FE03DB1F7933593510F63EFBB103E4559ACE1113B1D53F40C27734C11
347F9899AB3822099F7808362D5470B234EE8629931C8F06BF0F546BF8960D39
DD5CD7EC0D147955EC6493AF9993DFD1CFB95D00A113654A30BC96CD50E62BDC
1744216E2470D6FB86494D0C072DCF3EDFCBD47779B7ADF8B34F3896449A4360
B4849D422D36DB09F8CD3DEFAA0E7C9BF7FB0DEBC0855D566B2CD247919E8C50
D6B81BFC1258BD7A6D29604E5A316275F889E6F88B193D2A3A48D991963B5841
FAAD3A8EE3E844BA222E7D8E7F8838A0B8CEDC999A15A0E5829013060D9D4E6E
44D6E733902D836DA8BB305D0F0B705BE9F3ECA854E4DFDB5B64AF11ED670945
325AE3E4BD53E8007CF7F3CD264CE599C9C0FBCCE71D3A836D1EF1E726DE502C
44156342008B9F1941EBABE48510902ED2D290526CFE58586E9DA0E2CFD9D807
65790689125D1ED1D4035482D75436F55447CB7D6955E961434E3751E6FB467A
793E6F31B030A2AC5C325CAFAAA9CD65931873CACF9D34C634EFD1748F4BCC57
CD73D169FE7C79D171BB567BA1AA731A0CECF9B749832A62EEFD3D939F0AF3CB
52191E362A2A2047908951CA4EAC3D4787CEAC7581AFEDBE016A79E9FDF56232
53F9CD89D4BA80ECA4BB137961632E5DCFC3AF8C7FCA738459D899C01D395621
96713262D29A6D28981CBE8DC04002A4106AA4192E9B3EF6E6CD3FA58DB5C03F
D4013FA1F9DDD7E30480CDBE2CA5EDDC68E8639A07FAFEB443413945A0C8C1D4
AB9461F394CDACADE3A05591C3A8713D0151A2B171D09E7022FD8E93C4EF2188
DF124DBD4589380E45E1169C63FC212D02822C64DA705081E03054A0C01C652C
8651EE1A6FCA5158F1BB531B85C5AFD9DAC9D8CEC22F1D0CA9D67CE6B4DE2964
593087C9FB8D9B59285C2C6D51AC31B5989DDED6F9151714AECFAEB00B718919
0E49CF4D517B93CA4CB817F5F9985DC8B97EF28B44A760175DCA2454F64104BB
49022AEF9F918AEFBC898A4135C70B263F9D56B23F74AD19CFFC07CA77F6617C
528977BAD21E99138B2F4858F827A0CA2A0A3258EF3C557280491ACA7D8C2CE0
786F6C5B554EBAB34D8E391851E6997CEB4B4F0E528978EC52EA4E4653971609
E4A20ECD1EF836140DFF6941953DBA36FE4FE4E4407600252EF596
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4EA1CA80B6FD
7B4D795B4D2972F034BCCD77C82507596F44DE854FDCDB0AA07801603517E05A
646BDC50DD8C7B94A51815ABC0C2FAC80ECFB98B4798B585B250E24100697F62
91F1216CCB24A314655EB441A7ABE53A9EADFC5F616535211E371680117D0430
EAC6D8BE179F1D386F4FB48A4B55E3EB7EA63241780EE58F2E23E0D7D31B1146
1707ECB742D1FDF847E30959BAED81CC3960D52C010339AED8E8D38370F0DC39
8039E570C1D08AF11CCA95E0113B03069062F85B69540968D971146210252A2E
E217FDFFE744BB4D5CB23650171F6372D0E69C7841D2B841FB276F2C00404610
FCEAC958B96C37ACA04A7B57B100F0252EC2141A5955BD952B048D21D1F517FA
A22189B64425D3CFEDA72B5AA141CF815D4E453BC4EA60374D03D6925321D4B8
B00CC21EF53DB8260E9C1813E4A5AC867841F23B34D348BDA1177B4053E2BB2B
0C8F61DA5ECBF71E2E1BCBA80748B50A4F11A25ECB7D22E8CF2DAA3127A79373
629129AE88649EB0E2B61510F34DA85F40CCB8F2655637E35926482B7857A7DA
311C084CCAB63DABEF73A5C2A3AB0244E03A88C2665A4B100A6BDFAC009611D3
A28D845562493FC3AA93C36589DD72B8DD40E5F812BE9A4E1929603E8C09E0DC
C3929877A724A5593B4A6910D99961B81566575796ABD753C8B1AAF86277EF4C
5CB71A2A3FE6A3AEF4066FCA2A9A77F4B11F344F96A297B4D11F907A35261C62
5CBBDD207DE839EED42FFF33FFB1C127C2A79B9050A5B0475368EFB01FA7FC17
7D254F031777E97FB8919E1FEF7921BC6FE8E5CFEAC78A9224771FDB167B2343
F3DFECFFA16B7EFE729B64C13584512BE0E42EA9AB4986A5ED9C031F7F8E3518
43B7960B03619D46BCF39C7E52FF0B3A178D3FB08D3FD475410709AF7E747FB5
2DE4F1314CD9C5DD92719BFD77D736EE04FE37EDC17402975925F28EDF2585E5
4ED9B1B0C02DC150BF8E5F033DFD12E5F0EA600B6051B6D27D19B3B26810BDF3
EFAC886A1EDB0612B5D7830471C4EDF227D55A4889773BC282BBFDB369DC2905
39F9DE0EBD37793F41BE4A94E50B8D6D72418F2C809584919E6F48B6EBC50245
881B3151F77E37CDC6A61CD5C26DD40B362F84E984A7FA967CB29FE21438C774
E81DF8AB8E58701720DC081167235F58C1C8EC38ACB99EBB0B5A95F224CCF75F
70A2ED77EFFEAA7F60D256226E497BDB03F42C0E5E7E3D53A5C73A42A57D57A2
FCAEEF15FB9974EC347827666A8D8D0A86BCAF028B23E7470F4FF6C61D59744A
0E986A3967920779F5605788CD3F23316C09788397FF46A18A07FB6D55A150C5
95A23F25B07E95075CF6C6D92DDF67159B46CFFEE32650A0F389CE7DBC77498D
23DB2285718724128E9C71876C6E8A9E17274FE718C17AB67A089816D55B1687
1248919FF0098D7A80270A34FD1C481C0046C1D26D9774C0282E324E0B9F00EF
38102A0090D998E95C1CF6078A587AF51CC8CE904E12E38A0FF5F8B79B54931B
328AD82C0D5095A5A13DC15858B81540D5C90D2AF99A76B92A15A0820A1DE33D
6A24AB1F813102CB6407E92AFE08AD7E4143765D9B2B0C7EA5DB4EA83373D6DB
7C4EB4711C3141615A743B5214F2F59BC39AF549934FA9E0F87ED29CD0E672A0
AC1873C10A15F4D5B77E4294141C9064C832905D42C3333645247D9AA78C30DA
6F73DCA6F9C939AEAF0263E1FDCB820F3115582665ED9E3CA3562F8E1E6560F4
FA12BFEA8CB090D4E13221F8CE27EFC3C379C875C1DF178E48BF25AE91B567CB
C3DA3CF0F42A24CBBB876FFD2FCF63BB4F927FEE493B19252B79861B226EED53
ACC253F6EB9754D21928E261D0C112B5403BFCB313CD89ADE75F3E90093376A2
97D48721512B082C7D5FF2191D483C4456E792B1EADBA0BA20EC0B8B41BD1F1F
8CF2FC584964AA40CC57B57209492BE99A4DBDD0E337378F0F966C42C2B3203D
1ADB74D95F8B9E4FE9FCF5190F6E381B7E98FC3B376A25F4F36A64DAF4B88AC9
F7A5F804230DCD4854D768E2E43C23EF8C97577F7844FB49029C40D5431923F0
86B06052CE78E1CE3447531F80F21529DD2FD198D7A0F903F31DBDD4CBE9C138
DDD751E955595BE5A4D5B69F28DA961E960FDD94F5463313CA19BAAB56EF3641
5016DEFF19123DAE0DF3C943AF6F8997F850D2AD6B882A80D5684359261D379C
99518D766ED931DC2594192696E87FE03408E9B2D9063FBD8466562C6DEA47CB
3C10123321DA0CC671D35D8B57758689C8B9176D49054F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 127 /dieresis put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F966977BD8C8D07FDBD
F4D058444E7D7D91788DEA997CBE0545902E67194B7BA3CD0BF454FCA60B9A20
3E6BB526D2D5B5321EE18DD2A0B15E53BCB8E3E01067B30ED2DD2CB9B06D3122
A737435305D42DE9C6B614926BFD44DF10D14402EBEDFF0B144B1C9BD22D7379
5262FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EA4FA1566B96E221864A
45A24ADAEC63F61C9FD18376D39E0FDDE3FB4FBCDD6A7B66068A99D31CF54CD7
DF2262DA91CCC72889CAA62B1D6F2155CC8E940A2C35D8CD3EC75326188E2D30
1090F31AB50F30AC77D2C445BAF7323389406C44641B3A72C26BCDA442504D03
6C22A3BA1A69E5F87EA400501A3B3231E46F96AC3A6C0E4A4F6F21E0B2BEEF53
E016F34D7003351FD12436520926C632218410359AF9FF167750D3CE0DAC3B91
B310C457402E05C316F400246C8C38B98CC8030F71104BC4FA0505B5EFA4F5C5
9E4FA27C3E790D698690336254D7E34451E692AE23BF5FFBACBDF33E25359BD2
B0E7A0686602568BC87422F32486CB50776C7EAAE7F1BF78B228CA3254510653
3D6368A4985C5FF5A48AEF16E1AB71D7CE2C6649F2CF4B2879D4FA042239B504
F988D2FBE87C3BC784E55B8EE36F1BB5EF14FD5836CA448E139EF8FE221E827D
0608A6B90E08CBF44A30669AF4E20CD5C0C80518B7AF4FC2F56904C2849F7F05
BD9E5029B6C79D25E34E18176A2755CA288597D1CC18D81511E93FE88B94DACB
67F312A4986FDFD913164AD228F5201FE02EA6C5FF3F6B1BD792FB99819E2589
7BFC7A527E99FD1C1163D10B83BD61D7CB962C4EA67E887FBA85DEA3B2A1698C
6A896388E3CBA13AEB278D02354D5D40ED45A86BAE6F213806E9A598FB92FF2E
8F498BA926D0DC8E167B32DDB47D5A71212CC63EE2BA1332B23C48433BF78C22
E5A050397513C7B9A954B20801ADE837DC725EE53845DAA89D59C4CC24F9C849
0A7DDD7808E5E31755CE6F8957C95FB68823B9F944BACC8E18307C10E9D566D1
D6A4BEA8A230E5C3ED80B9BD0F2A30F39C905F11843A9C3B873F2050025DD297
F61A7D44A58B63C18C16C4BDDEDBA73979AD1CC2C211E15E42F6AF3AFE4B686C
9EA058B6A330AF99BB0673333FC04ED65CF45BAFE78F1899DF782FC2E0C10A45
622720545FE9E04DC3703FF862999D20CD6BBC8944F7EF1EA84EE89A863FEFD2
9C2E61C7A244AA254CB70319C57F7BC4E7EC1B7ED0E2E0BEFB7BABA64360690B
32DE9FD9158DAE19BC5605AE0006A614D4E3D70321708BA09AF5774D4EF62EBF
6CDFD17652326A6BFDEDC298BCAAB0B20209AFB82CD9E4AA63BE5CAD1455AA9D
C5D6170F697E088ACB6FAAE3427B3A26E0D8D0E14968C973CA0D8BC90F4278B1
BDB067AB3428719BEA95A88E93D13409A2A02A7EC0773CD94FD43625A90B2141
2B341C59871983359614089B5292C2BB9C184A5F3F9187988A4F6627C63FE9BF
1212A94D185FE803E6B9654524E569ADB223E8DE809E44DB791D1C46AFE2BD85
2E5382B3968CB9762BF37A38626A385D5F03D69C90B1989EB0996CEE0E1C7AF3
DD198CF50AC697B3489FBF119FC29242EA5A6F02B7041833027D327EB8A9AEE9
28681EF627A2AAD81E6881C369D9C09FAFCFDF22C504167CD5C4869C1B13A1C0
5114C83FF30BB4BF72E1D6B8495CC1460BA66BBD6E8DE75815F8D410B5D77534
F39EB4128F1E040AF068E294D1C44D36ABDA5BF66FF2329F558C23D68136DA0E
43F4409222ED19C3154809B41B8789480B1DEE9D51B39FC956CD33CA5AA52F35
3E5EB48FAA2EB751D7E4F93B77D4523F1B2B6158EE3E528DFE51FDA44853EE78
2DFF551AC65FFF7EA5EB3D939513E7EB97B3166E212910CD6553CF56D8331AF9
A3EC273417D6EEC0B1DF2FC11A32398BAFECF19F7C42286726065AD394BF1660
337B6BF99FC971E29FF2973A1BBB32CE1C8AD1B501BA5633131D1E669147C152
43719E4C5D0E8AEDEDBFC89D6EC9AD307C73CDDF6C4A93D9A374505F8A16FF01
39629412CEDAE6ED490C2326722BA38D58D20A84198BBA499010CC67035411D8
671747F2A40E2681253BA38A27F9C86582B1FB8055AF5A49B97003FE1274F1D7
329C994F4DE7CD6D7F9CEA0A5FC5E68A65A633BEABB520D362E87BBFFE58F03D
1F5A63D22C7A3CDE187065E98920A475822FB4B5184E4BF0DEC1B85AFEB2E802
3DA427391B39B4241ACB92AB8C279C7E24768C838457B9DDAE4EC2C14338CB91
2C68A20686F612AEB8F2FD6224BF97B38880E8D78D5CCE8DDA74BF2CDE371543
14A0EF104F27F6E7007B3B2C54210FA8C537F20437A1844772FB5D59CA5EB4F5
94B50185C8A3D57FC3A0E7F3E73D2A362F1FABB3A352C578B909041CABA25AEB
636C2287428C531896F8F122F6E0086078C2402B67BCA038DD93A3185BC03715
7C4C286E7B71E4B4700148553BEA924D152255851F11B7D1443636C071777747
040337E686880B66C144B97011DD50CA7A0ADCE9583C26C3EE74D0CFAC7D8EEC
E2F524C236C72D2605D8AF0CFDAC97C99365909758C6905DD5B09C3DDB886C6F
311465C09C07E3EFAC80F2846EB7B52666763B2724CBC376DFEC99FC7D14C882
F8DDCA56998081AE8AEC5607464675D88A8CCEC8606794E9C7C0242B5921C029
6998F2C4C1EA08EB009D81D6399054E07ADABD4B948EABA75B48ABD47FDAE4E5
B680B2F45DD2807D9CD74E0A660BA52495AAC50D1AE18EA5BEE8471229E6293A
64CC60B5B5ADE6DF2AF1709282C0271DDCB7B6CC2374DD9AF7BCAAC0EB5057DB
8813494B4C29F1B6C71840FDF10A90434D8ECCED7F76A31C8989532AD6E84E6A
AE718EC4C23DEB9D16568C7A60D24697EDBA18E139B0ECA0BA4FBCD14EED867C
1A33AF339FC72487DF562F586919C87B56EF5928DDC046F5750ABCD6E78C03BA
F491B0C91E147CCCE2DA292FEB9C9969528CBFD83287F078166D47616E28139F
5D2E4DFDA0C9F18A66B39FCB37EDA25C9394C4629EF3B3E925F330DEA9B8FFFE
D178E169564903F7A3279B23F1B4EFDE802C0AB36EC9A64D0B75A0ABF9815B23
845410F4E2711E3B3604986F9BB3CC88D6D77EA357F1244C079E9DF5EB4DB67B
54E2B8E43536BC0AF7DF3CDD0AB4C7B4B67A65B2C92FAC4532BC3BCB949EFFE3
16AF9B237391FA5C58270F85EA876FC77E8E2CE868A5DBA70F16D1023704D2A1
8A8EAA1F79599678F3EEAE90AC6C759FFDBCF0FDA9741D6BBF582FAE621FF7A8
F29ECEA88839C1B0E6A2D3BCAB42416D28EFC5DAC8E90A3D7C0661D0B5C75072
2210D89A0640B2D07B538A4E9BA173522EC8E281399116BFA3A89013B4291D46
229104651684278B7360D932481800604BA3FDB0F060AB0749280801F636B700
35ED66F9005D6ECA7CF98BF35CEF2DC4613933BC0A04713A1E95635B4222FBE1
1C36B2B0ED27271B5FF52221244EADECD3AD31B3195FC67EFFE71612A18118EC
9FF6803DA12951FB9AE4FCC807DA9AE57B40889BCFD59CC0FE0DA098B836BBC7
2D6302FBFCF8B21C53E36598DF059389F9AC5D5DF1A7C40F625EE219F032E047
220F213E6E5E9F5517AB59C58708B867AF4295611B104A15BF83C0572628F97C
4D637FAC3A40548A5355D787ED9386F764E770BE3FC603CA30BB69DC7B69D5B8
DE5F630D792275533DAA6225E83B77B576D47952234CCBA5C5531D69C738CC1D
3B372C840E71753F3C8126D786CD6B0FF63745C185FED2A7EBF2D17E7F9B872F
BF147FA947E4A1D4C5376B1AE391831C64E0DB2668063994224704A99518D50E
B9F3E84DC3D25FC07DC240D5B0BD498928DFC8796DDA86E10D323A2CDA43DEA0
7B6F80A8DD35717D40B63C6C2F948B324BA012AAF8959C86797BD7112AFFCEB6
0F620335B96A8862F2DE1720C6E0B3F846D8FC2C1A08DB3C174A0D61500B7FCC
B90F78E1850AFDC2516FBDC0A4E2779A90548693A94FB45CC855F30A822B5E24
7923D2C548EDAE0CC7721D8F82D758BD680DD84C34C58DC11E1679C4D0BAC6AA
6D62849E5EEF1BF89A1C2FF9A238698779444777DDC35F9A6BBBE9E66A69FC48
42BD5C2817F091670B99CE784FC8E77D7F777AE32526B030C03259E868BBB251
535BE539D192C0E848AC7D39DB870107DB3A4E04D687EEB2B550590F6DE81C07
D73654287F8F54F6DC765954CFACD5AA7CB22BC8F5BB25057852FDFF6C58E420
EB636AC9CC4D6F84494C9FAD77C1143B059DFD39C60618FF3DC846DFE76560AB
A5A113E1C6C61AFE1C1BC7453D27F67F95E89F0A75B0CB847714FF15B9517326
3A7D24C73D7BBD6992C3A79CDF379AB5E3E2F8EDCB337BD9F25B1D171DF16EB2
3303808323FC4E9CB8B0062565BD6B97542D3DB75DA40C46F905507DCE6E6BD9
6E3F30356FF739179EF37404AE45C701535AE40BAB3AD1FF9848FC4223063C27
2DBAF89C375700FA09A9CDFA995038E6E2D026F5DA37BC036B2D9BEF9EB82E04
4769E184EC1CD38156D8AD90441C911F4FBCADC671D9138762311CAAB881016F
4199B368A571685654ABB9E9FCB60E0BA98631A4FA85ADD3D317A52A094745FB
EC67054CFFB9C25A83529C6AF4B0B5C886FB42248210527EEB11DEDEE8E0A920
FD0E5C203F8D900CCA74E033B1E17BD5EBA5F938657829A6563388033667F85A
561AFC10700932CECBC61375E49622B81E5D85E070585F0F9B52C2372D57F87D
08F21B66C07D7D8CC428DE1F68D1693EDD203CF1BF502F1D73FAA911E214233A
6B5601BA0CDACA5EB7D60B09C1F47873C3840909FD9427BAA53883CD75148C51
0575280EE40A17A9C5211E05312F409E37587CBE6A8FE36644EFB9205A39325F
18329D8804687C4C197792FEE868C4141B7229A7FADF9A1A76131C4F57DCDDD7
E3DC2F55118321C521B528A7D2BDB33FE7E6D5587EDA43417D8E746FABF73D1F
EF4A08F4AFE411FC887F682980F671A1F15B2FEEDD9B0E5274B8961111070DAD
4B11235C0F98153147D0002D4E79958F58E90B4ED0453121205BAD6C6C1E1318
7CF5E34AD5787BE6599879B6A4DB6B5C8E01F05E8276FB088ABE6E19FFE4CBF0
388BBCE7F68F1C5137C102D77209E3C5545C6C3DEA32F80964B6541BAE0A6412
8E9B17750E7EF2A258C303A30F157DF3B8F662BA5F621468FB5C6A212228A924
C542F10B32979262EFDAA0D8558B3833ACC6B50F7E77670819EBD295286F6914
5DE11B4962137A87809A14FEE150306BF5B1A87E492A6EDDCAB34819AE91C51B
76F1977FA9D516C8B3A12E65D8D6C229103CCFF0C3E12ABDB3D67BC879DC459A
F1E3B06B8238A0B6BE28314CE058F146B9EFC30EDA46CAC6FB6179DFED9AD347
A3009712E18BED81C8C182AA387209A0810184D1D4ACA3DEE9777E6E6D0E06C0
59D9EF30EFF1E73CFB86546E22402647C5645C13121198A0A53982A4A388D4E1
A15A31E49FAF610D32CC8B83400FF481EDED0C6BCF34CE9A3C28CD48DABCBF86
43C4F5822EF0D82C45A238B0A8E8EF1DF9D48B5B1679946C62850023A246A56E
D31FDFB3A1EAEC99F2FEF13CBB671DF9C693E590B85A71ABD12867E3382FB900
11D7B886E306354B383CFC43B8913D6B36AD4147CCAF094E7668B9D776EA547B
2884E30F61BD6357CB7B3A52003D99EDAD1E89DE39DDA24E29F860230FE8D608
129EAEF76AB7AC91C635F7EE4B93DFE7757D84B2A43F44ECCED3601D99D4BD7C
62F85E4A542A137775503207BB2920C5EBE4E271F4F1E257A24DAEA41FA7B391
5C14402373D015481B0C25D7F3B34C166B6AE136CF073B9606890B73C2F38E84
19EC8FFF47BA94C7D40A1C7719E2FC545315EF7B41777240F0D183A3F24BCFD3
05B995CC5A06E00FE30035763B9FB2E1771850DC5EE9B2C1074C1C73571804B9
8EAA28F69A9E30BD9E738FE48DF305B8FB1B33A22C110A9170ED322B88AE1ED8
C2FAE17D75016FD374E740495A4054E157269E5638CD04A26FEFA4F7302896B2
D584B47FD82F8B943B57CC60F358FAA7A00765AD31E2EA8CFA21347E7AB70A30
1FB5ED475678FEF848A111FC86D152A4C6507949B4CC030465D8B9B57E9A5E6E
2D6B8C0D6BB24BD38F6DC8B0F2449828E1DD3D9BB1DF2C237C578BF7E3AEF02A
BE1A371002036524F1C3FD00056F0CCDBC59C6D8D6A29F2D6BAE0DE977BBBA89
546488D6ECAD90E4553C867583748A89361FB4BF5BC49C178E2BCA5E9CF4BFC3
00A3D2E8E32D1BE8415243EDEA5275931E20F328A59F81FEF91B49073F3D72D4
631D35EC3265ED02ACDFB643FF30571E2A0779EB414A2ED62E239CDAE5C96876
0913C86D2CE025A57EE511D90757715E825DCC28B2019B15A05DA80340A8AC13
280062D1D4CFFC2524809829F6846DAFD3509701351E04E30AC7D053118CFDD4
5EF29664DFF3F2FA66064ACBA5CA5474294FF9A16FB4D9C8C77B118B6643FC6B
5266F043F73476A181C6CEBF6C7DD063A7B3136F9078FAD40451861940798F32
B5EEA642B73B759937995E6E1CD06D281753CF852BF1FEA791192D6029B6BD2A
162F804E76B68AD176E30B6611DE8194E658F7D2DF5A6AE5F52CEA33F8371760
B018D9F480FB889C690E3C152D0FEF4CF3BC60CCDAC300563962F397399C24EE
F88069C65A4662323F808A9CA4AC4A1818496214ADEF8320A0A0CC3C37E19B84
548CDE4FBAD39C1949FFCACC8B9809DD56531317DBA45972EE034C8957ABEF86
71CA66B578D8BF647EC8FA04939D4BEFB74A0D3F72B091157DC32BC914AF3CB7
1BD7FF356626E7AE891CF88DD5695A80BB70C5D443CA9CCF52DD4913F6330CE5
9658A664D9E6E3304DD9D09E70474B4855A926241FF8FC77991E8FA48A166231
03CBF4B67935CACB4D7332C341BA3F62CD295B658C4563F7D2C81E9D63CC96BC
C9E61450459A294FC54ED18839BE000DF9A8DB1B92D7055424C6462A54523375
F3F8549169594172BEBF8ECB6DFFD37BE4ABD1B6292AF059C91325CACBFFEC60
486D9CE970973E33ED001A57F065AA5E74F5B6EE22BB68492B1B5B714CC993D1
ECE69AD6BF7E296509A2C37D2D970A1C214F584592FB1F05D4AA83310869C802
2BD73A6C8E031C012D7D3DC30E43935125BDF4376399EC94BC3277A14E17E633
DCE5207B1EEC68819FD867EDBFFBC85BB9E0198DE3B8D09A2D882CA0A91C1986
5629E4709E10B383EF5E138D7B2C24B9C5BAF6DE41C51F8D94162682F9B46C15
D69F2B7751305BF4AAB4BA934BA9B69134142A6A4FDAF176A64C2150E2B25A8C
0C0958F9E3E8F67BBC8DEAB445ADA57DB9C5BE75C99AED2D7AAC33E6D25D0875
99979A68825862DC2DA389364193124138D450D996ECA832CDFC2EDF56A83FC9
C2F2C1D5C3123C085A1548C0CB131D9899C60BD0C717325F4A2FCC542492A560
425A8EF413BEE555A54799F80A39B96ED36E4E065D3078874197C82821AC9C88
4318B5F1544AF15FA33696003A171A5FBA2D6869E5676C3C3058A7580AE2CB55
50D060A65C6A8831D4071296C658EF2967401D3FD648710FEC1A5FC4DB5A9769
6DA5CAE328DD0514C73E6632909364D94649136E903A8987935187F2330BD654
7D12F94D661B996F83CA292EAF65A5233ADC978A1F369FADCDB7226EDC8E9E08
2A725B3296138CC3A341C464AD17414EA4AD869EC43D6E8457BD7F9748E81A48
25FB72C333E4AFB0AFE86BD8AF5BB51F7C3E0B46B364D64E6343F1D98AF661EF
B0D5DB285AE93027EC2BFBFCDEF36E3A05193386B924051FAF77F0A2BFB38E33
B52CD4B4DA6DB9F0E3C867F94ECD8C8CB53BACB643AA5B2CAF410278C04689D6
B3C09637631FBF31ABB66205E1E98610A1611D1CE70340CE3C14DED5D379A10D
6BE6436842BE5CD679747BAF2BA6DAB26A59C1D473A807F129BA3B682314C525
527667FA92A8AB0485513CD0090403CD3704861AEE96AF44278D70D5CED9370A
D5D9759CD71068612F8F4C2E4A78C3004B872F3C28AEDBFEE5CD04D7473D46C2
439382D3C81447AC3903245BB649E46E4D12A6036ACFAE49AEE47CD09BC672AA
53D202465117AB7D9D709E8C3BFF28E915856B5489C48957E3B1EEF8A5ACEC7D
84D01DD31E1F8B0D390FA4C47A970DB656D922693CB88DF3F5DA0795655335B5
957D86F603C8C9BC1A1D70EFEEBEA0FCD8EA7E1CCABBCBFD5AD9D743CF7A2D17
65F92A40ACE36BE505CDD7D25FB3D2764B28B78EEBD1115F3693A695237AD8E4
9E644D64F86BBE6655F8C422615B4E12C42E24F9EBD09F84EEE8D28500273339
63AD26EDF0C91BD75A856F3BE480334748FCAE9F21530F19AF8A93B8C8B665B4
84172D991648B3651E15E37E958BF8D3FD49024B6E6C9B099A7DF11ED7F5EADE
513783B474F194EEE68E214272CE5D8BEFEA0C6E07DB5E49C5C0173B39DB2894
EE9ED1791B0ECF4EDD253C625667573450AA48C74055A6A629E1117D1A52AE7B
42D8625B51940FEF4C20D2FB6A156FDB3C087B85FCCF3D8CB6E964BAC289270C
9E2C93D67269884E266EDBC60817ED37D59EC2DB10DD65A456621767CADAB6A6
39F263CB2D4C3852281715EFE47F3E55BA0A94C80014341D9153571F6CD36AC6
733FC08748B8963C0418149DAA66D9A758DB45E1B79D05F0AEDE1846A1E03EEC
82D28834B8581CD9F72DAEBCAA03796D6B6D6574CA9A030AB52CA6DC96927B96
3C7AA655EA877B03B4C078FED3A33937DF5759F73593E15375CFEFF210E090C6
237C0AEA44DCCD05DBAD6CDC127912DED0799BC379E6AA977E34CA3C7D1971EF
E8896A8A4BE23F171E2DCD187DB0A8DC76A3F66F05246F065184A0B24D1583A7
60482D658223F26AF2F8828305843813385B534FF5D1D900C9159278E2A48AC0
E47CCACF24EDFF3B213AEBB3F7A7AD92B3E407A8B70CAD22133D4E9EEC4996B5
DEE9E7C52BF845F2D06BF9030FA5FCFEAEA83F8D7121C7DE55B34A24F1526D56
AC8C61F99202E240E1535D330DCED753BF7D55B367709348521BCC79EE0897C3
9F21C4CAEB7BEB17402470CA715578730CB0AF6117511B2ADFB53AEC0A2B9F20
63F908ADBE0F01B61F2747195DECFD8E5CA14BA2C20A5BE6036731C2CF2C0B35
C48655FF9701194FD0A1E22557299F353804B6A1DF34A75152C87135B669AAC8
6B5A922A354D9FE41EB859EC2B88EE1645A9B64AB3168D5435070A78179F9EF4
34CEA796455C6AC772C915340FBA8F6EAE03392AF87C05F985ACD3118FF5D23A
9B5646485696E20BA661323C88109D69E2AE823ED85E68DDABF505AC0109AAEB
23547F555A8804ADC1881C2ED23785A0E300EF46A7D690ECB1ED357620C15507
ABEE3515CC456955594901B8A83FADBACD7F5184274D987176973B7DDE135F18
A9A82C6DB3DE9C79D3837CEB892AB410778700480A081EEB7CD42258D0952956
EA2F72B07620F79CD9930C71CAFE853A8E4E6DFFA6BC548B7CBD4DC1CC3A6207
692F852E75101B2BBA6CE64435E0A014B6B817F8E8490C0C255A7AF80779A350
0A29234B28E325F91118471EDFCF79727990EEC350CCDA6A986656834DD771B7
0D3F9417AADD8584DF6123A6E3F8FCB87C323929688BC2BCDF9FB2005E124149
C6E13FC4F19CB3588FF1DE76BB71FB8EB7297F49D1D42D7CE157733FB73F6768
1E5D23773F32F5B49F56951358A6125B0B6883EE8BF18BB6DD98B063E3B57891
EA476EEEC895D8A3F95C5AF7FA10D6AC810FB9B4A2439BB7B3339BDABB55D744
446AF135E4E33FC86E6AE8199748B5AEB6A7F792D6D347118556F4F4F8344A39
06DF8DAC2C9A289CFCD5BCD5499B365532356FD14006719B2EFC6BB6ED331BB6
3D6950A5E11BDA76A7A8DD2AEC1526465D989DFCD700088EE7C6BC5CCDC50B92
044C78FD88183B223E7C186EF73F7A55ACE733E095E66BEB42302418743B5B11
76C46A69DD2E01B57658A12E85E3DD9DB8F1FEDF8E37BA0C4E02A3F0B6148C07
BE36B994517B59D022EE96B61CC7590AD280287B09E5D80A6360CA762CF8A728
8F456AAC1D610D927368D7756FB43C547D0576E493C330DE021D10FB541D3BFA
7B64086DEBE1677E3D138A195F8FB8568A4694CC64901392B25EF0AF9378603D
1B4C57CB4E720A554E7F0527990CD505DED9001F149A84CA9F81AF531EFFE201
49AC6B0D3424053D5D34FE896F2B0F79B394A5B1A5EEB2452CAA1CF2492F9980
40A9242C0DE338EAB18FAEBE3DC956EE0C74752E798202DB9B8899BBCBFF6114
FF3D15C62D924C290F7D93E97C6F879EB79C1589A444C8B4DC47FE7C34595A24
EF91A1B5FFE2006DD8232359BDFBCC7C9DBB87BF9E4D382A6E4B2F96BF49765D
D842B33CDEBA6156BC6ECF920BE8185758F445669265C03C0A5536A567745BC7
41E1D663FA636E721BF3D83E2645F5FC1EDE44D265912103C54A72E8A5FAC9E7
BD843C3130C0535587CC9E03F6B7C90BC4613BEC58977FE799162EE75C1BA35E
43B0EC0B80E6525BCD237C0446C8C8247D56F17B8DAD631C58F32F4C1DA32965
7121FB915F1389AA57F05E8C6FCB285FF17886FA1B0E32823730436919768546
7513124C43FBF937CA782305D253091B40F5D8133CE01A0335F2ADAFFB7A9E37
2E0F8060B26A79759D4E7B7310B90525106437D7E51B8C1AE6AD04943660C633
2C565F83F32BC39ED41191D586687477F688817353B96C6EAB42C551A9AECFFB
3A15CC7212648AABE7A840E76BDC162AA0308BE185383CF1D3E034AC0402644E
CBEA6FE3E9287DAB214CFEC2F4DD22D30B7ED73AAFA6C954FC560C1D484E64E5
33CD1A3AC06C88914CCDE4BC46CA678C25A70A0B3F5A73E0D11CA3726957639A
5EB2B37991F95A7B3D9EBFC7E94A74E4D3F30E3D9A4AEE509CE84C008A4750ED
18549E02B5406FAC72C3FCAEA1CA5F2009DBCB819F63BEB9189680BB454DE34F
790029A8B5F971C2ECDEAA0742196D2A33FE2844E95B9FAE68CD943B0C5B9CE3
1C3DCC188D91E0110A3CAC451949B3E0878A9DE6CF2FF52D53F4AA622792ABE2
DD432DEC2DF0B4CBFF8CBBA2D0EA78908837D92F5296DAD084001F0D532206AD
CF9E3A41B1A63075835BA984E3C6E20AB1A4B1EBFF10C2BF6081F7CBA4B41A9B
DBE68F037D505E49FCBDF67ECA7AF159C41AD2FA212359D709F83908FB78C56A
9E21658CC285AAA5DDAD2EB1B9AA7561F36E973767A44651F50078199174519E
7CC101F07BA2FF5E1A74067F1CBB9306CF3C2261664C38F27DC944C25F7B2DCA
355B3B2543730E039CC228D3FEE24A8CB11EE27A21E324D873E5EC58DB4AAD5B
C4D81A6C7A7ED52238A7601B969FE5154E219F9F887424698D44EAC96B03D945
CCE815384B998217E944DA15B4441E7D316560C6F746888283E0C32EF49087E3
BEA60486F75E511A714DDA6A1E4C0BDFDCA24872E46EEE21964F729E163EDF42
74FB8CF2DA8438E67E4A28801122379AF3C98F32B021E330274B3D2CA90CA8F0
0394BAFFA9531B95DF0D7FA3B0FF03EE21F383DA57855905278A63B926F0D47A
AE9FB02FFC181C7D5B7FDF7366EFBB4A6A2C1F27631AF590143106C1A8E9BA7F
2380FA34B0B12D6759B420B6BAAC56922A80A58327568E1C3AE3BEFA35DE8850
724AA1CBEA03D200B0BE7899154C8CAE3C23C1C73E5C8B25FA78C17B5461239C
44027C25D10B895A8E99F1BCA7F3B51E9D87FFC458F74E0CEA62869A1B484FAD
BF2FE7A5E4DEF404FAFD22831F3F53356401FFB85334D339426CCFFE0F869606
955F20FA055EE560B4744730EEA18CBBDC134644F124B714FD43653BC0879B82
0871B8809020301A71D37A44252491555D9B6278A9070C088C0A80D2BC753160
E83AF282F3DC077CDF610A18A1A83D4920EB6E2A2B73E40BA112F78CA18A26AC
D11A5D4E12C67A631D4928EFB809640F64571E5605AD4BFD3D00FFCFFFE4FF9F
FF1A63002175D401D4BBD218F40B4C56766A4FBB93741F9D2B746F78B062CF36
E60973FD3D52810750C06C73CC376F5291442A4EEF4B2842B6317CB7E1AE7357
93AA5CD2F927E4DAD0470D0A6612E8C0557245213B0DC87DF4B9CD1260A6FB39
55E007041838B667417524FED98D5EE035C212C8377A6E2393D86DCABD509252
0A83CBFB978D2EEC4847BE9D4365714A5F36B343F87F1DBB1E2759ED78EAA549
1A4EEFB8FE1FBD10112294959C42FA664442335E521CA7D7E7BDA468AE36FFED
A896738CDB3054025485FA28A071C96A003DF5A940261ECCE471616CA5B0223E
7F435A096B90FF8ED7D88FADF050BC4C4C1FA51D4D389BC36E9D5D709C38800E
0CA38D1A045586E46563D855E4E6A8482BDEC35617411F8E046FB8381F745325
CEF7AF2EF0D7F912A34BA6CE8676944A3B12212CE7AD55539FD9179CD8BE8CA3
9C9EEC948BCCCF2ECCC8F10DD4C8E99A5922BD9A56191C4900063DCCC3BED41E
F16BD2BC1891D87E5DD05AF7C25D7E92B1BB87D53817643B621BB21BEA839B29
5433042A7E0CE294C031A4C460F05D16B46430445717EAC72766909F9008EF1F
3F8404DD56B1B1F90A06D99859A1C45F7510B9E7C6929BF9E54053BF95B49114
54183A5F2734C2CC7622ECFD0664B77640C416A1DA10F13BA0238C25DF6752C9
B793F8FFA012C6E8E2AC81DDD9E402F42DC4CD6F290BFF4B9C633E1E52397F38
5B8964F92BF50DFAB2CDE27A1D6489B117883A3272266C6FEC5589687F73B787
8F11E234DFC84DA9B78D5DC1F85E854EBFD818FEABF0842415500C23BC629A41
E5757A708153807163F6AFC8A08EE85210D9ABF2BFCE6C734B8BF60EE394970A
068B2F145572D009FC4B335B352C2F8E7D91F3458C7766819E50433734765CE2
A7CB2A730CB15F83349FA0041B374D9A91A5F274B39216787562E314DF97661A
59827B7C98AD9E19435EA73DEEDC9CAD5CF0B2043F021B53A37D1F838ED86D28
350B9AE733037656CC02ED9028E601439728DC54856C2EF694DE650D4330FEF5
B841B86633A162A2E03ECB094C37096C5E4D6984D330ED5A8738257FC34093DD
78E68FD5136C2EB7F95F5F0EAE4434AA66366558FBEA37FC3C053485B64681BC
A3689DC2BD729D3690D01A334F8A8B8F7EC0DE2CAD83416015D1C4946400D42B
CEC866B5D7D2CC91E9722B12B08286F92E7F01E449ACC9B6CEB032EFF1C99D6F
B09821089831264DD336F25B8399C3FE5AE32807E035604FE4374FDECC36CC90
11D3AF5390E53DF273CD6564A14F9B639E144D16A72FEFE31F898753AA2501C2
91B6ADA10059A8115D94B68C18D9E87A07C8F79E82BCD34BDB669D8B2EAA9C39
7D3C861877E0187B51E38009A1831DB1EF70A76B3E0A930D976F0EF63354D1CD
B624D3F6D97C217491486F80E404ADF8CEE5FECB50B4E92FCDD0DC093F06B456
CE57607291CB4462191E78000A80CD9E27C674E8C9126F04163BCF82D1DC68BA
13F656D6826A45F1CC9231FE10161FAA50989A299B5217E029002857A1CC07C7
6E4D03BCBA5C4A0A0D895A56EEB63957930FDD61C9399F3E92177507C46E24F1
FEE535B32580E0F2368853108F2E74CBDACA0B0D033AEED628BAD725DD11375E
3855C9C89DE87147FE62C5D58AACE37C952AA8DDFB3BF6F34EF2BA189E64F816
CC3858215CBCFA0B07B8185FA85ED86802F54140D8F77DE282B5D20C592B67FD
F2BCE661D211B22F57EB7354D7D345880DC29D7821F9709488F23A6190BF3B1B
580AB6A952359B235C0FFE2D72DF47C1BA09E1E25CBA48F366F18478ECA759A0
020CDA11B2A2B7E5047C6C606523F8875D3B2838F6CF504FDDD898DC3EDD68D1
A4A70407136D0FD1878A13009E19FC771822736C87213C7234C27E20C9AF267E
E04DC7E1D089B1C84DEAA68121F2688D95797F996079402CC256921D7DD3F3A7
FFBEEBAD62BB50AF8E370A1EFE45B94018DED146D42D869459236E019E8834DD
5708E1F000269142DD995A832BDEE0F279FFC8C9BC3BF1DCCB225E5AAC0F0728
E081FF3F9827756468F9AB1AD458FC4FBA0BE7708199CD6E57B2E153138F23EA
119489E8E83E9856A3E2389176BF800B0C1A17F1894DC2EE8066D01F90E0F09D
AD04EB3C9FF5251EF81315B7525F598E182DC735E869265A25F0151ED67920EF
5F791C0FCE262CF3CE4B1E3812FBF1989D2F81A0AD571EAFE3B806E9306CA8E2
783B309796BD695BD1C9031D25A8EE460BF80497EE25DC7BB3F392116D8B04C4
D6AD509F231752DB96B9D6F7577A0DF51F91231D976752C92ABCB265CC3B36A1
15A000C535A89DB3C8F7829FC49C76F5AD53947EF5E525250760E5510448137C
C9BB77CF7A0A2224339508163A43C28D2556F9693159BEBE348A90A89A2C2595
6BCE434C1B69147E4BA4981F273BDDA3CB2A0653B769EF6050377B0538569FD4
73046298BE2580FB8E57CEE14D9ECF52D21E5F73C455F6E676E54D4CCF9D9240
31F04041212799FCE3AC91F79C5B9764B0BBADF9276A9534AFD53189A6C71A8E
64DE86439E54C71249D28D7E5439E06D606E74404EB2D118E9A35929F2DDB0D9
02F6BE057983D0AB711949AF1B5C26569621F4ABA28A6CBB9B3FFDDE8B623758
CE3C02695C3AC52A073ABC266AEAE4356BFB56C886BDF56802C33686E6201EDF
8E61E02407333D2BEF118ED46B67441CF5A8F5335176C43413FF608FDC358C4B
0C311BC1923018901BCDBB84DB8B24FCA19F95D17470168FBE4BCE5D237BB3FB
659D9C9CB1B113AF89835563A97FD6E9A8F08DABDD30148E75699C88A1161A24
AEAFB3312FE28EC1EA411FF33C048652232E93CAD9B174C5312401EB04E16C66
ACAD77982C8977D7C1089C1CA5724550353A9D7EF362596788B3CD0001F92D24
9AE07B0448AD56F6FC16E6B59782740565F3A0CFCC2460B471CA6BE794DF36C5
79731D12696EF012B74002F742EE019E18250BF9EBDE1901DDE700D149F1CC0C
E910033A5A18EACCB1D239205016449BD0DEB8791E99C1CA9E84C3FE79FACB6B
FD1F030D77EE3066F50904880F7EBCC3D84201B2BD3E59ED2927AEFEF57475C3
FE9B690FC9531D29115DBD53602FE161030D53F691AD623B2E98BC80B51B3F19
90ED987934FC70A63BFC56B97DD0C6E61F5F3CA499508C93BEC5AC45B25D9049
D8DE745EEA403DDCABDBDF0534CC32F440CAF1A88933E64B054317860E83BBC5
D8CC3DC536C5AE2CDC4A3A7EB5831468BEAB2A8A70B4A05BD0310287290C3DFE
E38BFA259BFE28A0BA5CBB9172F6B9C5427B34E7C5B699D4C7F156E1FBE72B6A
E0798132AE95910764656E850E1EC56DEF0E0BC2B5F7A1E5129DBEA4371334CD
A63BAFDBBF731C70AD5145C9690F6A6FBA69EEF532EEA53DB9C35BD53EB3BCDA
8FB9379FEE758D279A13DEFF686D8A6ADE89DF6CB986E3A030C9F8557F5106AD
73593174A4987B6554AE76371FBA896F8D690F898284B2A023B1E7A9C3423D27
4BD709F80B6B7B9B2BE4A42BE7B29EFD7D58597D7ED34E344A1A8370F6901430
08F4156BFC7A293F61AA3C1B3A4432F12955E1A0DBF872F9B8247A8ABB19A27C
331B734EAD71342140BF8887BEACCA75663B9D5FFF6DF55E8BC72B101047F357
64807FE4149FAA10F2BADCB017FE6B4504B7EC3F70321BB8C772B23874BAAA20
233BC295CAE6B92CD9F17D9455BD4C5E326BF2FC199B9E1306C8D53E5094597C
30B5989457A022815ECCB72A9668E32A22DE41D884ADF39FD62CCD4E698400BC
0286999739B55F88D31361B6108E287EA4BB8A1196AA476346669B8E0EFBA7F3
BB0FF33C5D1C9F5B344FDF404EA8CDCE6ED1C33D2FEF921FD84EEDAFC31676BD
3FC2E5C40FA54B8C0F184783B55D7DEB475E5B95EDFBC94ECD88F99F70FE41CB
8AF39CE18A20EB45EDDF4B646A6E6A7E5671F7FBDC593D17A96F12E962647403
098332D9A1F035C38ED973DDE3AFA1E4C978D5BCF29C2265902736693E74C6C9
2C96437C893E550BF74BED1A269D087DCF4F4706D514095384E40E7942FE17B9
C6111BF68A6DE60F6C0B0C12EE8A70D662FDDBE60D767621D029156AF7EAF119
AC4D4A349217EA66B337FB47D899DA363964DBA274B989C190A3FB9A48E379BF
EF31A03C6C8F4E85F4900535657342FC53C4605E9CDE80A5153E254C968EE333
0907F3E7871C8E76EFE8CBB9CA186762C6AA989EEF6D58D08EB5ABA164E2EF28
2342EBDDEDB64A34F3265B14E67B7F637EC2C0AD339CCD269C1F49B5542D7212
F7EDCEC88E9A1EA8B36955B6BF579298742C219E70F9B39B377C000F1C655225
0FDC7F2B3A6ED891D5632D28EBB485C71C5DFE26135F80ECA90BA8A440C5E1F7
556D56838CF177894798BA96E712DC039DDB2CF016056A681E4966A1EB7F465A
74E6DE7C94AA17C9B5B5EBBA201221B750FEDAF0A03B0ED5A934A8AD2B8DABE5
2EFA02958695AE76E74D5D131026858D0AA82F03063822F3AB189627EA79F4A8
A5BF62ABAC9B7EFE151E38A96ECE9A140201637B9AA4E957632888F4C37281DC
97F8CB841BB330F1BCB2EAA053C0114A0C7A60DD7D54F7A44D2AA6D642D5A2A7
3C5C4AB33AC96415DD5B44BFBBD124517AB87BEADD51A0F06B47EDDD2BB7E6AD
47A7C29A4EE0D83E5E5133926363132E6D98BAC3504461D39421730A631C17EE
F534AC9121582349FD4DAD4EE9BB265332FA51C3631EBE9E0E27D0774D98CE79
9CD97827A809F0BB5826C52EB2403314C6A1B5308EC8BB058C23CBD64B806E27
6F1CB62A1964AE3F0C5F89D7072645AC0F3110E51715D4180FB4E628F1ABB9D8
1C91EB1BA9E0460C5EBE90F03C34D7CBB68DB4533E4447131174E13C57AFB4A1
5AB8DCE9AB9D33C65E845ECEC0E3340D2251229D70B577F8B3D11CBEF719C43E
3259438F0F125CC2F7BC435EE486CE8E734857187D625C64F2477493EA8896AF
470A0F8B12B90DBD1EFAC2E393E6BA1F6A161D09C7C24E3270B5AE2D663625C1
91ADF8C7B36F2A85DD1C9BC49699EBCF21EA878E7A8AD580C1707B7958286E8D
3A28ADD29F39E6EF7F89DCFA913AFC2A50CB75C8D5306DD2C93AC39FDEE021BF
57004D3D65C560BC2A5F75B134904FBCB20A6B2BAE15870DC836DF5E6FD97E8D
0B9B030E938AE18DEED3916033CCD133EF68AC6A4209172034948B9CF78002F6
97C37112E5E559DB763548289B3F0E872775FC5CEED1913A6FBD600027BF9438
4B3D0D71B5EED5A89CCE363768A962AF3E9C9A6AC78B02B53EDE9CF12F330C66
F683A40CCF9FEB15C31BE66553DD7D434E70E88E2280116FF2D499817DF3EE01
BAD299501F9B8329323F04EF523BBECE581ECD5B5A2B6AF1F3533EB9DE442ADF
1D0E865CED1A5D7B56914DA7F21E1EDD9DCA67FB594F2318F026CBDD5E91199E
3E8BE72546599533DF3DE17A3332B1D70FDCD9F0D3BC09BFC5439CC5C3E1F5E1
83C72B50D5425BEF27F10DB13EFEDD5989682016311206A9A249AB34E1465705
E1561B383F06EC49C68512A36E11AFCAEA8A2AA5007A988FB9525351455BFD9C
366E88698B1D02CD96808FC8EC7ABFD919E2F2AD99ECCB7A3170D56DF476B112
05902E569FB4F4A6A3E07A4459FA8AF48658C146663A6BA105C1570E21A378A6
F3F4CA377F0B80B1465727B183527FFC78FC79927319AA5E44A78895068EB026
E62C5817706C2D7760FC03B20C39929B78E3B91F4D267B54C9EFE04B3316290E
EBE6B5AC215B376B3A0DC38AA15976961C426028877D5E4441733DA7752135DB
360053DF41E6532B0DEFF51C57C6972C1EEB9FE18A6764E2288B9618F4A3E5EE
9A8340EDDA137E323DF5CF0F427453E7F9E16269FB745C70A7EF6BFA697C71D8
F18B3C1100A63238788FD270154DFAD4D05EA636C252F34EDA0674A54D645810
A39D175E81C9BB88153A60F5C6171AAE2FA6494C35BFBB02C73DBCF2D89F6919
E0174BB8ED91B5D2CA93901B84F7C95814FBFA0D809B00D3903EABAEF7BECCE4
2DB1309CE320F13B9FD543CC7E67A9B69E2EFE871050F98F34D70129EF4CF603
A4029DFD5C46B0C4D63B990C50568DE6826015909C588363AA48ADE99B9DBBA8
97AF4C55B5DC00333C2D64003569D9D4D23C93CBE426A7B23283B056CC087F91
1FE918C6589D642FC8C1CFCD1B9A74A6A584F776E0ACD9339F48C495817130C6
BC65181CCB9800D7CF5326C49492702A9591F99EED9AC46F324487F23B29B33B
C211C2D61B0AF3904B3CFE44FADFB884411650AA641DA54F57011EACE468EF56
528C76062F5B014E9B227E88AB8C073AFFDC001E5C0A93CD658C06F6F892AB6F
3F92D6B923B17DC17FB8C456E5FD9819DF76C4BA0E1476B83FA397D26B69665F
6A5DC54AB9FB5D5F4DE84BF18EA847E64F8639557EB91DBD0E867BD6B943F8A8
662409BBC3BEFFD7E7ECC67C8B5A5415DCC4D46E903F211E62E303B4843B39B9
22117EBCBC26C7E0DA5641D64E400412CE674F6820002008C4CF777D7D1050A9
F1430A50D54E4BE017B6001A0793CFEEF723022E75BAD86168A8B5FD52FB64D9
1E13585C5933B1DA82FA2ECBEADB1B2FC3C8F968424174DFE6F65E737CB7F765
3990679F3C93D653CC878E4D7F0B8157C98433DB12FF141C5D3D0426364F1799
7F452461ED9BBC9654F9BA542C7A473DA38ABEEF0C4D211076BE9CD94B02A86C
328766F71078D406B6917FFFA7373DA099FAE7EC5524F69B832A1BD91B206079
2804BBFE0A671DA11D8C4999DB2F2150E0312A92216F697BF4471A22EAB31F33
C8B4F95031991557D58471D8F78F6B8D503FB08422CD6773F99AD1C7162AAE6D
06EC61C2F4EDBD32F13D1561A052A228DB13B3616216EC8EA668DFBB08496007
65B0E6D6F758EEF08655B3557635F842DBA8019889A2938FC01CEF213B97B0F3
F24599EA70C7CAA3ED98A2A5A97A7F94B6818CFD835622EA6EEFA14033228EB2
D7A8785610D504DC5A29C13247036C0D1D7EE31E78ACDBC4EC47CA2C725DDF5E
FE750D415999643CF5F7D159B90BA30E81749AB011D038D466E881F49083FFD8
4EE0F1F162143FA9D3AA44DB36389F908D7465181D9EF5815EFA13204868134B
3EC450DFD41515153B688316F049985AEC0D4CCC021396110DE83CAEBC93F721
090C5C775E3E4C54FF1037D355B27B9FED9FA3403D2BB62D4A8C2ED30D257A04
DD88A3411FC04F29E2D0A3732820CAE29993D3921F23356E132AD269D6289DDA
545963CAB3405D4FF8E328850B004F615344C43FD1F7F245113C45B88F2E2A5B
8178273FEC2139146354B344CBA6E8AF6795F0BB7ECD6D8615D14E91241AB04E
E393C98B6924536491A04189DFEAB2B68D776B49AD37094BDDDC0FE5452324FD
59303DE28BC984D33D6DC6065F1C32B48EA875C2E739FD4A5094BAFB15071E36
1F7D6252F8E20AD44AF96B6B341F83BEA5F134325A7E553C30209C268C2CB92E
1C9C677724DC17E7F8A19FDF44BE50267B73C895B3698C5337A6EA610AD8F376
777454DBFFC5D40B8C720FF3F204802398151FDDB1E7D35111648D1177D6CE2A
7DE2847C61C8219D9A796B74B70C9557A883874A174BD9A1C560B05A1CDE18FC

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (leviathan.dvi)
@start /Fa 134[50 1[69 50 1[37 1[39 1[53 48 53 1[27 2[27
53 48 1[44 1[42 1[46 38[27 10[48 27 46[{}18 83.022 /CMBX10
rf /Fb 134[37 1[51 1[41 25 31 32 1[39 39 43 63 20 35
1[24 39 35 24 35 39 35 1[39 9[77 3[43 4[57 69 48 1[40
30 2[50 52 1[55 1[57 6[24 12[27 45[{}33 74.7198 /CMTI9
rf /Fc 149[21 2[38 38 46[0 21[77 7[60 10[38 5[60 7[60{}9
74.7198 /CMSY9 rf /Fd 135[39 9[47 1[21 2[25 3[38 42 2[42
97[{}7 83.022 /CMTI10 rf /Fe 149[20 57[19 47[52{}3 58.1154
/CMSY7 rf /Ff 145[37 110[{}1 41.511 /CMMI5 rf /Fg 134[38
44 15[44 1[37 18[47 11[60 49 57 1[55 58 58 3[38 1[21
59[{}13 74.7198 /CMMI9 rf /Fh 192[32 63[{}1 49.8132 /CMMI6
rf /Fi 133[39 41 47 3[30 5[50 73 3[29 48 3[43 36 36 44
6[57 3[48 2[51 63 3[67 1[57 4[65 53 1[69 59 63 62 2[65
42 1[23 23 56[69 1[{}29 83.022 /CMMI10 rf /Fj 149[23
2[42 42 46[0 21[83 7[65 3[65 6[42 5[65 7[65{}10 83.022
/CMSY10 rf /Fk 135[59 81 1[62 44 44 46 1[62 56 62 93
31 59 1[31 62 56 34 51 62 50 1[54 13[62 84 1[77 2[106
3[42 2[70 74 1[81 80 85 11[56 56 56 56 56 3[37 45[{}36
99.6264 /CMBX12 rf /Fl 134[47 1[64 2[34 35 36 1[49 44
49 74 25 2[25 49 44 27 41 1[39 49 43 26[56 4[67 6[25
6[44 44 44 1[44 25 29 45[{}27 74.7198 /CMBX9 rf /Fm 134[39
1[39 1[39 39 39 39 1[39 39 39 39 39 39 1[39 39 39 39
39 39 39 39 39 32[39 17[39 39 45[{}24 74.7198 /CMTT9
rf /Fn 132[38 34 41 41 55 41 43 30 30 30 41 43 38 43
64 21 41 23 21 43 38 23 34 43 34 43 38 4[38 4[79 58 58
55 43 57 1[52 60 58 70 48 60 39 28 58 60 50 52 59 55
54 58 1[36 1[60 1[21 21 38 38 38 38 38 38 38 38 38 38
38 21 26 21 2[30 30 5[38 21[43 45 11[{}73 74.7198 /CMR9
rf /Fo 201[30 2[30 30 30 30 48[{}5 49.8132 /CMR6 rf /Fp
133[32 11[41 5[39 40[34 1[34 2[20 58[{}6 58.1154 /CMMI7
rf /Fq 199[33 1[33 33 33 33 33 33 33 4[51 43[{}9 58.1154
/CMR7 rf /Fr 128[42 4[37 44 44 60 44 46 32 33 33 44 46
42 46 69 23 44 25 23 46 42 25 37 46 37 46 42 3[23 42
23 2[62 85 62 62 60 46 61 1[57 65 62 76 52 65 1[30 62
65 54 57 63 60 59 62 3[65 1[23 23 42 42 42 42 42 42 42
42 42 42 1[23 28 23 65 1[32 32 2[69 2[42 19[69 46 46
48 11[{}77 83.022 /CMR10 rf /Fs 139[52 53 55 1[75 1[75
112 3[37 75 2[61 3[65 10[102 1[94 75 4[105 1[81 2[50
105 2[88 1[97 96 102 65[{}21 119.552 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 757 457 a Fs(Bias)45 b(in)g(the)h(LEVIA)-11 b(THAN)43
b(Stream)j(Cipher)1300 745 y Fr(P)n(aul)27 b(Cro)n(wley)1790
715 y Fq(1)s Fp(?)1892 745 y Fr(and)g(Stefan)h(Luc)n(ks)2519
715 y Fq(2)s Fp(??)1545 887 y Fo(1)1618 919 y Fn(cryptolabs)e
(Amsterdam)1591 1011 y Fm(paul@cryptolabs.org)1521 1070
y Fo(2)1594 1102 y Fn(Univ)n(ersit)n(y)e(of)j(Mannheim)1121
1193 y Fm(lucks@weisskugel.informatik.uni)q(-man)q(nheim)q(.de)759
1480 y Fl(Abstract.)43 b Fn(W)-6 b(e)32 b(sho)n(w)i(t)n(w)n(o)f(metho)r
(ds)g(of)h(distinguishing)g(the)f(LEVIA)-6 b(THAN)759
1571 y(stream)26 b(cipher)f(from)g(a)h(random)f(stream)g(using)g(2)2255
1540 y Fo(36)2346 1571 y Fn(b)n(ytes)f(of)i(output)d(and)i(pro-)759
1663 y(p)r(ortional)f(e\013ort;)e(b)r(oth)g(arise)i(from)f(compression)
g(within)g(the)f(cipher.)g(The)h(\014rst)759 1754 y(mo)r(dels)j(the)f
(cipher)h(as)f(t)n(w)n(o)h(random)g(functions)f(in)g(sequence,)h(and)f
(sho)n(ws)h(that)759 1845 y(the)i(probabilit)n(y)f(of)i(a)f(collision)i
(in)d(64-bit)h(output)f(blo)r(c)n(ks)h(is)g(doubled)g(as)g(a)g(re-)759
1937 y(sult;)g(the)e(second)h(sho)n(ws)h(artifacts)h(where)e(the)g
(same)g(inputs)g(are)g(presen)n(ted)f(to)759 2028 y(the)k(k)n(ey-dep)r
(enden)n(t)d(S-b)r(o)n(xes)j(in)f(the)h(\014nal)g(stage)h(of)g(the)f
(cipher)g(for)h(t)n(w)n(o)f(suc-)759 2119 y(cessiv)n(e)c(outputs.)e
(Both)h(distinguishers)h(are)f(demonstrated)g(with)g(exp)r(erimen)n(ts)
759 2211 y(on)h(a)g(reduced)f(v)l(arian)n(t)g(of)i(the)e(cipher.)523
2469 y Fk(1)112 b(In)m(tro)s(duction)523 2648 y Fr(LEVIA)-7
b(THAN)43 b([5])f(is)h(a)f(stream)g(cipher)g(prop)r(osed)f(b)n(y)h(Da)n
(vid)g(McGrew)h(and)f(Scott)523 2748 y(Fluhrer)22 b(for)f(the)i(NESSIE)
f(pro)5 b(ject)21 b([6].)h(Lik)n(e)g(most)g(stream)f(ciphers,)h(it)h
(maps)f(a)f(k)n(ey)h(on)n(to)523 2848 y(a)30 b(pseudorandom)f(k)n
(eystream)h(that)g(can)h(b)r(e)g(X)n(ORed)f(with)h(the)g(plain)n(text)g
(to)f(generate)523 2947 y(the)j(ciphertext.)f(But)h(it)g(is)f(un)n
(usual)g(in)h(that)g(the)f(k)n(eystream)f(need)i(not)f(b)r(e)h
(generated)523 3047 y(in)e(strict)g(order)f(from)g(b)n(yte)h(0)g(on)n
(w)n(ards;)e(arbitrary)f(ranges)i(of)h(the)g(k)n(eystream)e(ma)n(y)i(b)
r(e)523 3147 y(generated)26 b(e\016cien)n(tly)i(without)f(the)h(cost)f
(of)g(generating)f(and)h(discarding)f(all)h(prior)f(v)-5
b(al-)523 3246 y(ues.)23 b(In)h(other)f(w)n(ords,)f(the)i(k)n(eystream)
e(is)h(\\seek)-5 b(able".)22 b(This)i(prop)r(ert)n(y)e(allo)n(ws)g
(data)h(from)523 3346 y(an)n(y)28 b(part)g(of)h(a)f(large)g(encrypted)g
(\014le)h(to)g(b)r(e)g(retriev)n(ed)e(e\016cien)n(tly)-7
b(,)29 b(without)h(decrypting)523 3445 y(the)k(whole)f(\014le)g(prior)g
(to)g(the)h(desired)e(p)r(oin)n(t;)i(it)g(is)f(also)f(useful)i(for)f
(applications)f(suc)n(h)523 3545 y(as)i(IPsec)f([2].)h(Other)g(stream)f
(ciphers)h(with)g(this)h(prop)r(ert)n(y)e(include)h(blo)r(c)n(k)g
(ciphers)g(in)523 3645 y(CTR)g(mo)r(de)f([3].)h(LEVIA)-7
b(THAN)34 b(dra)n(ws)e(ideas)h(from)g(the)h(stream)f(ciphers)g(W)-9
b(AKE)33 b([9])523 3744 y(and)27 b(SEAL)h([7],)f(and)h(the)g(GGM)g
(pseudo-random)e(function)i(\(PRF\))g(construction)f([1].)648
3844 y(The)d(k)n(eystream)e(is)i(b)r(ounded)h(at)f(2)1762
3814 y Fq(50)1856 3844 y Fr(b)n(ytes.)f(Though)h(the)g(securit)n(y)g
(goals)e(are)h(stated)523 3944 y(in)h(terms)f(of)g(k)n(ey)g(reco)n(v)n
(ery)-7 b(,)21 b(it)j(is)f(desirable)g(that)g(distinguishing)h(this)f
(k)n(eystream)f(from)h(a)523 4043 y(random)28 b(binary)g(string)h
(should)f(b)r(e)i(as)e(computationally)g(exp)r(ensiv)n(e)h(as)f(an)h
(exhaustiv)n(e)523 4143 y(searc)n(h)24 b(of)i(the)g(128)e(or)h(256-bit)
f(k)n(eyspace.)h(Keystream)f(generation)g(is)i(b)r(est)g(mo)r(delled)g
(as)523 4242 y(a)32 b(k)n(ey-dep)r(enden)n(t)g(function)h(Lev)d(:)h
Fj(f)p Fr(0)p Fi(;)14 b Fr(1)p Fj(g)1905 4212 y Fq(48)2005
4242 y Fj(7!)31 b(f)p Fr(0)p Fi(;)14 b Fr(1)p Fj(g)2324
4212 y Fq(32)2392 4242 y Fr(,)32 b(mapping)g(a)g(lo)r(cation)g(in)h
(the)523 4342 y(stream)f(to)g(a)g(32-bit)f(output)i(w)n(ord;)f
(catenating)f(consecutiv)n(e)h(v)-5 b(alues)31 b(of)i(this)f(function)
523 4442 y(from)27 b(0)g(giv)n(es)g(the)h(en)n(tire)f(k)n(eystream:)
1272 4600 y(Lev)o(\(0\))p Fj(j)p Fr(Lev\(1\))p Fj(j)p
Fr(Lev\(2\))p Fj(j)14 b Fi(:)g(:)g(:)f Fj(j)p Fr(Lev\(2)2411
4566 y Fq(48)2500 4600 y Fj(\000)18 b Fr(1\))p 523 4664
473 4 v 544 4718 a Fh(?)606 4750 y Fn(This)26 b(researc)n(h)h(w)n(as)f
(supp)r(orted)g(b)n(y)e(con)n(v)n(ergence)i(in)n(tegrated)g(media)g(Gm)
n(bH)513 4810 y Fh(??)606 4841 y Fn(This)i(researc)n(h)f(w)n(as)h(supp)
r(orted)e(b)n(y)g(Deutsc)n(he)g(F)-6 b(orsc)n(h)n(ungsgemeinsc)n(haft)
28 b(\(DF)n(G\))e(gran)n(t)h(Kr)606 4933 y(1521/2)p eop
%%Page: 2 2
2 1 bop 523 241 a Fn(2)237 b(P)n(aul)27 b(Cro)n(wley)f(and)g(Stefan)g
(Luc)n(ks)648 457 y Fr(Finding)36 b(Lev\()p Fi(i)p Fr(\))h(for)f
(arbitrary)e Fi(i)i Fr(is)h(not)f(esp)r(ecially)g(fast.)h(Ho)n(w)n(ev)n
(er,)d(once)i(this)h(is)523 556 y(done,)26 b(in)n(termediate)f(v)-5
b(alues)26 b(can)f(usually)g(b)r(e)i(reused)e(to)h(\014nd)g(Lev)o(\()p
Fi(i)15 b Fr(+)g(1\))p Fi(;)f Fr(Lev)o(\()p Fi(i)h Fr(+)f(2\))g
Fi(:)g(:)g(:)523 656 y Fr(m)n(uc)n(h)20 b(more)f(e\016cien)n(tly)-7
b(.)21 b(This)f(is)g(b)r(ecause)f(the)i(in)n(ternal)e(structure)h(of)g
(the)h(cipher)f(is)g(based)523 756 y(on)29 b(a)g(forest)g(of)g(2)1080
725 y Fq(32)1179 756 y Fr(binary)g(trees,)g(eac)n(h)f(of)h(whic)n(h)h
(generates)d(2)2598 725 y Fq(16)2698 756 y Fr(w)n(ords)g(of)j(output,)g
(as)523 855 y(sho)n(wn)d(in)h(Figure)f(1.)523 2346 y
 currentpoint currentpoint translate 0.62312 0.62312 scale neg exch
neg exch translate

523 2346 a @beginspecial 0 @llx 0 @lly 555 @urx 249 @ury
5550 @rwi @setspecial
%%BeginDocument: tree.epsi
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Basser Lout Version 3.25 (December 2001)
%%CreationDate: Wed Mar 13 08:26:54 2002
%%DocumentData: Binary
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: Plain 555 249 0 white ()
%%PageOrder: Ascend
%%LanguageLevel: 2
%%Pages: (atend)
%%BoundingBox: 0 0 555 249
%%EndComments

%%BeginProlog
%%BeginResource: procset LoutStartUp
/save_cp { currentpoint /cp_y exch def /cp_x exch def } def
/restore_cp { cp_x cp_y moveto } def
/outline { gsave 1 1 1 setrgbcolor dup show save_cp
  grestore true charpath stroke restore_cp } bind def
/m  { 3 1 roll moveto show } bind def
/mo { 3 1 roll moveto outline } bind def
/s  { exch currentpoint exch pop moveto show } bind def
/so { exch currentpoint exch pop moveto outline } bind def
/k  { exch neg 0 rmoveto show } bind def
/ko { exch neg 0 rmoveto outline } bind def
/r  { exch 0 rmoveto show } bind def
/ro { exch 0 rmoveto outline } bind def
/c  { gsave 3 1 roll rmoveto show grestore } bind def
/co { gsave 3 1 roll rmoveto outline grestore } bind def
/ul { gsave setlinewidth dup 3 1 roll
      moveto lineto stroke grestore } bind def
/in { 1440 mul } def
/cm { 567 mul } def
/pt { 20 mul } def
/em { 120 mul } def
/sp { louts mul } def
/vs { loutv mul } def
/ft { loutf mul } def
/dg {           } def

/LoutGraphic {
  /louts exch def
  /loutv exch def
  /loutf exch def
  /ymark exch def
  /xmark exch def
  /ysize exch def
  /xsize exch def
} def

/LoutGr2 { gsave translate LoutGraphic gsave } def

/LoutFont
{ findfont exch scalefont setfont
} bind def

/LoutRecode {
  { findfont dup length dict begin
    {1 index /FID ne {def} {pop pop} ifelse} forall
    /Encoding exch def
    currentdict end definefont pop
  }
  stopped pop
} bind def

/LoutStartEPSF { % prepare for EPSF inclusion
  userdict begin
    /PreEPSF_state save def
    /dict_stack countdictstack def
    /ops_count count 1 sub def
    /showpage {} def
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    /languagelevel where
    { pop languagelevel
      1 ne
      { false setstrokeadjust false setoverprint
      } if
    } if
} bind def

/LoutEPSFCleanUp { % clean up after EPSF inclusion
    count ops_count sub { pop } repeat
    countdictstack dict_stack sub { end } repeat
    PreEPSF_state restore
  end % userdict
} bind def
%%EndResource

%%BeginResource: procset LoutGraphPrependGraphic
% @PrependGraphic file /usr/share/lout/include/graphf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @Graph (Version 1.0)       %
%                                                                    %
%  Version 1.0 by Jeffrey H. Kingston, December 1993.                %
%  swapxandy added September 2001 by JHK.                            %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

errordict begin
   /handleerror
   {
      {  /Times-Roman findfont 8 pt scalefont setfont
	 0 setgray 4 pt 4 pt moveto
	 $error /errorname get
	 dup lgraphdict exch known
	 { lgraphdict exch get }
	 { 30 string cvs } ifelse
	 show
	 (  Command: ) show
	 $error /command get 30 string cvs show
      } stopped {} if
      showpage stop
   } def
end

/lgraphdict 200 dict def
lgraphdict begin

% error messages
/dictfull (dictfull error) def
/dictstackoverflow (dictstackoverflow error) def
/execstackoverflow (execstackoverflow error:  expression too complex?) def
/limitcheck (limitcheck error:  graph too complex or too large?) def
/syntaxerror (syntaxerror error:  syntax error in text of graph?) def
/typecheck (typecheck error:  syntax error in text of graph?) def
/undefined (undefined error:  unknown or misspelt symbol?) def
/rangecheck (rangecheck error:  undefined expression (e.g. divide by zero)?) def
/VMError (VMError error:  run out of memory?) def

% random number between x and y inclusive: x y dorand num
/dorand { 1 index sub 1 add rand exch mod add } def

% log to given base: base num dolog num
/dolog { ln exch ln div } def

% maximum of two numbers:  <num> <num> max <num>
/max { 2 copy gt { pop } { exch pop } ifelse } def

% add two points:  <point> <point> padd <point>
/padd { exch 3 1 roll add 3 1 roll add exch } def

% subtract first point from second:  <point> <point> psub <point>
/psub { 3 2 roll sub 3 1 roll exch sub exch } def

% distance between two points:  <point> <point> distance <length>
/distance { psub dup mul exch dup mul add sqrt } def

% point at angle and distance:  <point> <length> <angle> atangle <point>
/atangle { 2 copy cos mul 3 1 roll sin mul padd } def

% angle from one point to another:  <point> <point> angle <angle>
/angle { psub 2 copy 0 eq exch 0 eq and {pop} {exch atan} ifelse } def


% set up for line
% - linesetup <length> <dashlength>
/linesetup
{ newpath
  xcurr ycurr trpoint xprev yprev trpoint
  4 copy moveto lineto distance dashlength
} def

% set up for icon-avoiding line
% - ilinesetup <length> <dashlength>
/ilinesetup
{ newpath
  xprev yprev trpoint xcurr ycurr trpoint 4 copy
  4 copy angle symbolsize 1.5 mul exch 4 2 roll pop pop atangle
  6 2 roll 4 2 roll
  4 copy angle symbolsize 1.5 mul exch 4 2 roll pop pop atangle 
  4 copy moveto lineto distance dashlength
} def


% stroke a solid line:  <length> <dashlength> solid -
/solid
{ pop pop [] 0 setdash linewidth setlinewidth stroke
} def
  
% stroke a dashed line:   <length> <dashlength> dashed -
/dashed
{  2 copy 2 mul le 1 index 0 le or
   {  exch pop 1 pt max [ exch dup ] 0 setdash }
   {  dup [ exch 4 2 roll 2 copy div
      1 sub 2 div ceiling dup 4 1 roll
      1 add mul sub exch div ] 0 setdash
   } ifelse linewidth setlinewidth stroke
} def

% stroke a cdashed line:  <length> <dashlength> cdashed -
/cdashed
{  2 copy le 1 index 0 le or
   { exch pop 1 pt max [ exch dup ] dup 0 get 2 div setdash }
   { dup [ 4 2 roll exch 2 copy exch div
     2 div ceiling div 1 index sub
     ] exch 2 div setdash
   } ifelse linewidth setlinewidth stroke
} def

% stroke a dotted line:  <length> <dashlength> dotted -
/dotted
{  2 copy le 1 index 0 le or
   { exch pop 1 pt max [ exch 0 exch ] 0 setdash }
   { 1 index exch div ceiling div 0.99999 mul
     [ 0 3 2 roll ] 0 setdash
   } ifelse gsave 1 setlinecap linewidth setlinewidth stroke grestore newpath
} def

% stroke a noline line:  <length> <dashlength> noline -
/noline
{ pop pop
} def

% stroke a y histogram: - yhisto -
/yhisto
{ xprev yleft trpoint yextra sub moveto
  xprev yprev trpoint lineto
  xcurr yprev trpoint lineto
  xcurr yleft trpoint yextra sub lineto 
  linewidth setlinewidth stroke
} def

% stroke an x histogram: - xhisto -
/xhisto
{ xleft yprev trpoint exch xextra sub exch moveto
  xcurr yprev trpoint lineto
  xcurr ycurr trpoint lineto
  xleft ycurr trpoint exch xextra sub exch lineto 
  linewidth setlinewidth stroke
} def

% stroke a surface y histogram: - surfaceyhisto -
/surfaceyhisto
{ firstpair
  { xprev yleft trpoint yextra sub moveto
    xprev yprev trpoint lineto
  }
  { xprev yprev trpoint moveto
  } ifelse
  xcurr yprev trpoint lineto
  lastpair
  { xcurr yleft trpoint yextra sub lineto 
  }
  { xcurr ycurr trpoint lineto
  } ifelse
  linewidth setlinewidth stroke
} def

% stroke a surface x histogram: - surfacexhisto -
/surfacexhisto
{ firstpair
  { xleft yprev trpoint exch xextra sub exch moveto
  }
  { xprev yprev trpoint moveto
  } ifelse
  xcurr yprev trpoint lineto
  xcurr ycurr trpoint lineto
  lastpair
  { xleft ycurr trpoint exch xextra sub exch lineto 
  } if
  linewidth setlinewidth stroke
} def

% stroke a filled y histogram: - filledyhisto -
/filledyhisto
{
  linewidth setlinewidth
  xprev yleft trpoint exch currentlinewidth 2 div add exch yextra sub moveto
  xprev yprev trpoint exch currentlinewidth 2 div add exch lineto
  xcurr yprev trpoint exch currentlinewidth 2 div sub exch lineto
  xcurr yleft trpoint exch currentlinewidth 2 div sub exch yextra sub lineto 
  closepath fill
} def

% stroke a filled x histogram: - filledxhisto -
/filledxhisto
{
  linewidth setlinewidth
  xleft yprev trpoint currentlinewidth 2 div add exch xextra sub exch moveto
  xcurr yprev trpoint currentlinewidth 2 div add lineto
  xcurr ycurr trpoint currentlinewidth 2 div sub lineto
  xleft ycurr trpoint currentlinewidth 2 div sub exch xextra sub exch lineto 
  closepath fill
} def


% cross: show a small cross
/cross
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg symbolsize neg rmoveto
  symbolsize 2 mul symbolsize 2 mul rlineto
  0 symbolsize -2 mul rmoveto
  symbolsize -2 mul symbolsize 2 mul rlineto
  [] 0 setdash stroke
} def

% plus: show a small plus
/plus
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg 0 rmoveto
  symbolsize 2 mul 0 rlineto
  symbolsize neg symbolsize neg rmoveto
  0 symbolsize 2 mul rlineto
  [] 0 setdash stroke
} def

% square: show a small square
/square
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg symbolsize neg rmoveto
  symbolsize 2 mul 0 rlineto
  0 symbolsize 2 mul rlineto
  symbolsize -2 mul 0 rlineto
  closepath [] 0 setdash stroke
} def

% filledsquare: show a small filled square
/filledsquare
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg symbolsize neg rmoveto
  symbolsize 2 mul 0 rlineto
  0 symbolsize 2 mul rlineto
  symbolsize -2 mul 0 rlineto
  closepath gsave [] 0 setdash stroke grestore fill
} def

% diamond: show a small diamond
/diamond
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg 0 rmoveto
  symbolsize symbolsize neg rlineto
  symbolsize symbolsize rlineto
  symbolsize neg symbolsize rlineto
  closepath [] 0 setdash stroke
} def

% filleddiamond: show a small filled diamond
/filleddiamond
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg 0 rmoveto
  symbolsize symbolsize neg rlineto
  symbolsize symbolsize rlineto
  symbolsize neg symbolsize rlineto
  closepath gsave [] 0 setdash stroke grestore fill
} def

% circle: show a small circle
/circle
{ newpath
  xcurr ycurr trpoint symbolsize 0 360 arc [] 0 setdash stroke
} def

% filledcircle: show a small filled circle
/filledcircle
{ newpath
  xcurr ycurr trpoint symbolsize 0 360 arc gsave [] 0 setdash stroke grestore fill
} def

% triangle: show a small triangle
/triangle
{ newpath
  xcurr ycurr trpoint moveto
  0 symbolsize 1.5 mul rmoveto
  symbolsize neg symbolsize -2.5 mul rlineto
  symbolsize 2 mul 0 rlineto
  closepath [] 0 setdash stroke
} def

% filledtriangle: show a small filled triangle
/filledtriangle
{ newpath
  xcurr ycurr trpoint moveto
  0 symbolsize 1.5 mul rmoveto
  symbolsize neg symbolsize -2.5 mul rlineto
  symbolsize 2 mul 0 rlineto
  closepath gsave [] 0 setdash stroke grestore fill
} def


%plog: like log only with a base, and protected from failing if <= 0
% base x plog res
/plog { dup 0 le { pop pop 0 } { ln exch ln div } ifelse } def

% xtr: transform one x value logarithmically if xlog > 1
% <num> xtr <num>
/xtr
{ xlog 1 gt
  { xlog exch plog
  } if
} def

% ytr: transform one y value logarithmically if ylog > 1
% <num> ytr <num>
/ytr
{ ylog 1 gt
  { ylog exch plog
  } if
} def

% % trpoint: transform (x, y) in graph space into (x', y') in print space
% % x y trpoint x' y'
% /trpoint
% { exch xtr trxmin sub trxmax trxmin sub div xwidth mul xextra add
%   exch ytr trymin sub trymax trymin sub div ywidth mul yextra add
% } def


% trpoint: transform (x, y) in graph space into (x', y') in print space
% x y trpoint x' y'
/trpoint
{ exch xtr xdecr { trxmax exch sub } { trxmin sub } ifelse
  trxmax trxmin sub div xwidth mul xextra add

  exch ytr ydecr { trymax exch sub } { trymin sub } ifelse
  trymax trymin sub div ywidth mul yextra add
} def


% yonly: interpolate x values 1, 2, ... into data
% [ data ] yonly [ newdata ]
/yonly
{ dup /tmp exch def
  length [ exch 1 exch 1 exch
  { dup tmp exch 1 sub get
  } for
  ]
} def

% xonly: interpolate y values 1, 2, ... into data
% [ data ] yonly [ newdata ]
/xonly
{ dup /tmp exch def
  length [ exch 1 exch 1 exch
  { dup tmp exch 1 sub get exch
  } for
  ]
} def

% xandy: no interpolation of x or y values
% [ data ] xandy [ data ]
/xandy {} def

% swapxandy: no interpolation of x or y values
% [ data ] swapxandy [ data ]
/swapxandy
{ dup /tmp exch def
  length [ exch 2 exch 2 exch
  { dup tmp exch 1 sub get exch 2 sub tmp exch get
  } for
  ]
} def


% expstringwidth: calculate width of string containing optional exponent
% <string> expstringwidth <width>
/expstringwidth
{ (^) search
  { exch pop stringwidth pop exch stringwidth pop 0.7 mul add }
  { stringwidth pop }
  ifelse
} def

% expstringshow: show string containing optional exponent
% <string> expstringshow -
/expstringshow
{ (^) search
  { exch pop show 0 0.5 ft rmoveto
    gsave currentfont 0.7 scalefont setfont show grestore
  }
  { show
  }
  ifelse
} def

% concatenate two strings: <string> <string> strconcat <string>
/strconcat
{ 2 copy length exch length add string
  dup 0 4 index putinterval
  dup 3 index length 3 index putinterval
  3 1 roll pop pop
} def

% lgen: generate one label automatically
% num lgen num string
/lgen { dup 20 string cvs } def

% loglgen: generate one logarithmic label (with exponent)
% <base> <exponent> loglgen <string>
/loglgen
{ 20 string cvs exch 20 string cvs
  (^) strconcat exch strconcat
} def


% printxtick: print one x tick
% xpos printxtick -
/printxtick
{ newpath
  yleft trpoint moveto 0 yextra neg rmoveto
  0 xticklength neg rlineto [] 0 setdash stroke
} def

% printxlabel: print one x label
% (xlabel) xpos printxlabel -
/printxlabel
{ yleft trpoint moveto 0 yextra neg rmoveto
  0 xticklength neg rmoveto 0 0.9 ft neg rmoveto
  xlog 1 gt { 0 0.3 ft neg rmoveto } if
  dup expstringwidth -2 div 0 rmoveto expstringshow
} def

% printytick: print one y tick
% ypos printytick -
/printytick
{ newpath
  xleft exch trpoint moveto xextra neg 0 rmoveto
  yticklength neg 0 rlineto [] 0 setdash stroke
} def

% printylabel: print one y label
% (ylabel) ypos printylabel -
/printylabel
{ xleft exch trpoint moveto xextra neg 0 rmoveto
  yticklength neg 0 rmoveto -0.3 ft -0.3 ft rmoveto
  dup expstringwidth neg 0 rmoveto expstringshow
} def

% printrtick: print one r tick
% ypos printrtick -
/printrtick
{ newpath
  xright exch trpoint moveto xextra 0 rmoveto
  rticklength 0 rlineto [] 0 setdash stroke
} def

% printrlabel: print one r label
% (rlabel) ypos printrlabel -
/printrlabel
{ xright exch trpoint moveto xextra 0 rmoveto
  rticklength 0 rmoveto  0.3 ft -0.3 ft rmoveto
  expstringshow
} def

% printticks: print ticks and labels
% /tickproc /labelproc [ tickandlabeldata ] min printticks -
/printticks
{ /prev exch def
  { dup type dup dup /integertype eq exch /realtype eq or
    { pop dup /prev exch def 2 index cvx exec
    }
    { /stringtype eq
      { prev 2 index cvx exec
      }
      { pop
      } ifelse
    } ifelse
  } forall
  pop pop
} def


% printxaxistick: print one x axis tick
% xpos printxaxistick -
/printxaxistick
{ newpath
  yaxis trpoint moveto 0 xticklength -2 div rmoveto
  0 xticklength rlineto [] 0 setdash stroke
} def

% printxaxislabel: print one x axis label
% (xlabel) xpos printxaxislabel -
/printxaxislabel
{ yaxis trpoint moveto
  0 xticklength -2 div rmoveto 0 0.9 ft neg rmoveto
  xlog 1 gt { 0 0.3 ft neg rmoveto } if
  dup expstringwidth -2 div 0 rmoveto expstringshow
} def

% printyaxistick: print one y axis tick
% ypos printyaxistick -
/printyaxistick
{ newpath
  xaxis exch trpoint moveto
  yticklength -2 div 0 rmoveto
  yticklength 0 rlineto [] 0 setdash stroke
} def

% printyaxislabel: print one y axis label
% (ylabel) ypos printyaxislabel -
/printyaxislabel
{ xaxis exch trpoint moveto
  yticklength -2 div 0 rmoveto -0.3 ft -0.3 ft rmoveto
  dup expstringwidth neg 0 rmoveto expstringshow
} def


% <val> minmax -
% perform minv := min(minv, val); maxv := max(maxv, val)
% allowing for the possibility of minv, maxv, val being false (undefined)
/minmax
{ dup false eq
  { pop }
  { minv false eq
    { dup /minv exch def /maxv exch def }
    { dup minv lt
      { /minv exch def }
      { dup maxv gt
	{ /maxv exch def }
	{ pop }
	ifelse
      } ifelse
    } ifelse
  } ifelse
} def

% <ticks> ticksundef <ticks> <bool>
% returns true iff the ticks array is undefined (one false entry)
/ticksundef
{ dup length 1 eq
  { dup 0 get false eq
  }
  { false }
  ifelse
} def

% <number> integral <boolean>
% true if the number has an integral value
/integral { dup round eq } def

% ticksep ticks xory alldata minval maxval axis base ticksandlimits ticks min max base
% ticksandlimits: sort out value of x or y ticks and limits and log base
/ticksandlimits
{ /base exch def
  /minv false def
  /maxv false def

  % min and max of user-supplied minval, maxval, and axis
  minmax minmax minmax

  % min and max of data points
  { 0 get dup dup length 1 sub 3 index exch 2 exch
    { get minmax dup
    } for pop pop
  } forall
  pop dup

  % min and max of tick values
  { dup type /stringtype eq
    { pop } { minmax } ifelse
  } forall

  % fix minv and maxv if undefined (false) or equal
  minv false eq
  { /minv -1 def /maxv 1 def }
  { minv maxv eq
    { minv 0 lt
      { /minv 2 minv mul def /maxv 0 def
      }
      { minv 0 eq
	{ /minv -1 def /maxv 1 def
	}
	{ /minv 0 def /maxv 2 maxv mul def
	} ifelse
      } ifelse
    } if
  } ifelse

  % invent ticks if undefined
  ticksundef
  { pop /ticksep exch def

    % if base is reasonable and minv is positive, logarithmic ticks
    base 1 gt minv 0 gt and
    {
      % get integral log of minv and maxv
      /logminv base minv plog floor   cvi def
      /logmaxv base maxv plog ceiling cvi def

      % if minv close to base, make it 1; reset minv and maxv
      logminv 1 eq logmaxv 4 ge and { /logminv 0 def } if
      /minv base logminv exp def
      /maxv base logmaxv exp def

      % ticks := [ base**logminv, ... , base**logmaxv ]
      [ logminv 1 logmaxv
	{ dup base exch exp
	  exch base exch loglgen
	} for
      ]
    }
    { % non-logarithmic ticks
      {
        % fix tick separation if undefined (0) or too small
	/base 0 def
        /delta maxv minv sub def
        ticksep delta 30 div le
        { /ticksep 10 delta log 1 sub ceiling exp def
	  ticksep delta 2 div ge
	  { /ticksep ticksep 2 div def }
	  { ticksep delta 5 div lt
	    { /ticksep 2 ticksep mul def
	    } if
	  } ifelse
        } if

        % adjust minv and maxv to be multiples of ticksep
        /minv minv ticksep div floor   ticksep mul def
        /maxv maxv ticksep div ceiling ticksep mul def
        /delta maxv minv sub def

        % if minv or maxv near zero, move to zero and redo
        minv ticksep eq
        { /minv 0 def }
        { maxv ticksep neg eq { /maxv 0 def } { exit } ifelse
        } ifelse
      } loop

      % if minv, maxv, and ticksep are all integral, set "makeint" to true
      /makeint minv integral maxv integral ticksep integral and and def

      % ticks := [ minv, minv+ticksep, ... , maxv ]
      [ 0 1 delta ticksep div round
	{ ticksep mul minv add makeint { cvi } if lgen }
	for
      ]
    } ifelse
  }
  { exch pop
  } ifelse
  minv maxv base
} def

% xset: set up all data for x axis, including limits and ticks
% xticksep xticks 0 alldata xmin xmax xlog xextra xdecr xaxis xticklength xset -
/xset
{ /xticklength exch def
  /xaxis exch def
  /xdecr exch def
  /xextra exch def
  xaxis exch ticksandlimits
  /xlog exch def /xmax exch def /xmin exch def /xticks exch def
  /xleft xdecr { xmax } { xmin } ifelse def
  /xright xdecr { xmin } { xmax } ifelse def
  /xwidth xsize xextra 2 mul sub def
  /trxmin xmin xtr def /trxmax xmax xtr def
} def

% yset: set up all data for y axis, including limits and yticks
% yticksep yticks 0 alldata ymin ymax ylog yextra ydecr yaxis yticklength yset -
/yset
{ /yticklength exch def
  /yaxis exch def
  /ydecr exch def
  /yextra exch def
  yaxis exch ticksandlimits
  /ylog exch def /ymax exch def /ymin exch def /yticks exch def
  /yleft ydecr { ymax } { ymin } ifelse def
  /yright ydecr { ymin } { ymax } ifelse def
  /ywidth ysize yextra 2 mul sub def
  /trymin ymin ytr def /trymax ymax ytr def
} def

% rset: set up all data for y axis (again), but including limits and rticks
% rticksep rticks 0 alldata ymin ymax ylog yextra ydecr yaxis rticklength rset -
/rset
{ /rticklength exch def
  /yaxis exch def
  /ydecr exch def
  /yextra exch def
  yaxis exch ticksandlimits
  /ylog exch def /ymax exch def /ymin exch def /rticks exch def
  /yleft ydecr { ymax } { ymin } ifelse def
  /yright ydecr { ymin } { ymax } ifelse def
  /ywidth ysize yextra 2 mul sub def
  /trymin ymin ytr def /trymax ymax ytr def
} def

% norset: set up data for no rticks
% - norset -
/norset
{ /rticklength 0 def
  /rticks [] def
} def

% framestyle: print a frame around the graph
/framestyle
{ 0 0 moveto xsize 0 lineto xsize ysize lineto
  0 ysize lineto closepath stroke
  /printxtick /printxlabel xticks xleft printticks
  /printytick /printylabel yticks ymin printticks
  /printrtick /printrlabel rticks ymin printticks
} def

% nonestyle: print nothing around the graph
/nonestyle
{
} def

% axesstyle: print axes for the graph (unless axis values missing)
/axesstyle
{
  xaxis false eq yaxis false eq or
  { framestyle }
  { xaxis yaxis trpoint dup 0 exch moveto xsize exch lineto
    dup 0 moveto ysize lineto stroke
    /printxaxistick /printxaxislabel xticks xleft printticks
    /printyaxistick /printyaxislabel yticks ymin printticks
  } ifelse
} def

% rundata: run all data sets
/rundata
{ alldata
  { gsave
    dup dup dup dup
    4 get /dopaint exch def
    3 get /initrun exch def
    2 get /pairs exch def
    1 get /points exch def
    0 get /data exch def
    dopaint
    { data length 4 ge
      { initrun
	newpath
	data 0 get ymin trpoint yextra sub moveto
	0 2 data length 2 sub
	{ dup 1 add
	  data exch get /ycurr exch def
	  data exch get /xcurr exch def
	  xcurr ycurr trpoint lineto
	} for
	data dup length 2 sub get ymin trpoint yextra sub lineto
	closepath fill
      } if
    } if
    initrun
    data length 2 ge
    {
      /xcurr data 0 get def
      /ycurr data 1 get def
      points
      data length 4 ge
      { 2 2 data length 2 sub
	{ /xprev xcurr def
          /yprev ycurr def
	  dup dup 2 eq /firstpair exch def
	  data length 2 sub eq /lastpair exch def
	  dup 1 add
          data exch get /ycurr exch def
          data exch get /xcurr exch def
	  pairs
	  points
	} for
      } if
    } if
    grestore
  } forall
} def

end
%%EndResource

%%BeginResource: procset LoutTabPrependGraphic
% @PrependGraphic file /usr/share/lout/include/tabf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                  %
%  PostScript @SysPrependGraphic file for @Tab     %
%                                                  %
%  To assist in avoiding name clashes, the names   %
%  of all these symbols begin with "ltab".         %
%                                                  %
%  Jeffrey H. Kingston                             %
%  24 September 1991                               %
%  22 December 1992                                %
%                                                  %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% linewidth ltabhs -
% horizontal single line
/ltabhs
{  0 0 moveto xsize 0 lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabhsp -
% horizontal single line with projecting ends
/ltabhsp
{  0 0 moveto xsize 0 lineto
   setlinewidth 2 setlinecap stroke
} def

% linewidth ltabhd -
% horizontal double line
/ltabhd
{  dup dup
   0 0 moveto xsize 0 lineto
   0 exch 3 mul moveto xsize exch 3 mul lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabhdb -
% horizontal double line below mark
/ltabhdb
{  dup dup
   0 0 moveto xsize 0 lineto
   0 exch -3 mul moveto xsize exch -3 mul lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabhdnw -
% horizontal double line with northwest corner
/ltabhdnw
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   xsize exch 3 mul moveto
   -3 mul exch 3 mul lineto
   -3 mul 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabhdne -
% horizontal double line with northeast corner
/ltabhdne
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   0 exch 3 mul moveto
   3 mul xsize add exch 3 mul lineto
   3 mul xsize add 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabhdsw -
% horizontal double line with southwest corner
/ltabhdsw
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   xsize exch -3 mul moveto
   -3 mul exch -3 mul lineto
   -3 mul 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabhdse -
% horizontal double line with southeast corner
/ltabhdse
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   0 exch -3 mul moveto
   3 mul xsize add exch -3 mul lineto
   3 mul xsize add 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabvs -
% vertical single line
/ltabvs
{  0 0 moveto 0 ysize lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabvd -
% vertical double line
/ltabvd
{  dup dup
   0 0 moveto 0 ysize lineto
   -3 mul 0 moveto -3 mul ysize lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabvdr -
% vertical double line to right of mark
/ltabvdr
{  dup dup
   0 0 moveto 0 ysize lineto
   3 mul 0 moveto 3 mul ysize lineto
   setlinewidth 0 setlinecap stroke
} def
%%EndResource

%%BeginResource: procset LoutDiagPrependGraphic
% @PrependGraphic file /usr/share/lout/include/diagf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @Diag Jeffrey H. Kingston  %
%  Version 2.0 (includes CIRCUM label)                September 1996 %
%                                                                    %
%  To assist in avoiding name clashes, the names of all symbols      %
%  defined here begin with "ldiag".  However, this is not feasible   %
%  with user-defined labels and some labels used by users.           %
%                                                                    %
%  <point>      is two numbers, a point.                             %
%  <length>     is one number, a length                              %
%  <angle>      is one number, an angle in degrees                   %
%  <dashlength> is one number, the preferred length of a dash        %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

errordict begin
   /handleerror
   {
      {  /Times-Roman findfont 8 pt scalefont setfont
	 0 setgray 4 pt 4 pt moveto
	 $error /errorname get
	 dup ldiagdict exch known
	 { ldiagdict exch get }
	 { 100 string cvs } ifelse
	 show
	 (  Command: ) show
	 $error /command get 100 string cvs show
      } stopped {} if
      showpage stop
   } def
end

% begin diagram: <maxlabels> ldiagbegin -
% must be defined outside ldiagdict since it loads it
/ldiagbegin
{ xsize 0 0 ysize ldiagdict begin
  5 -1 roll /ldiagmaxlabels exch def
  (@Diag) ldiagpushtagdict
  /OOY ldiagpointdef /OOX ldiagpointdef 0 0 /OOO ldiagpointdef
} def

% end diagram: - ldiagend -
/ldiagend
{ ldiagpoptagdict end
} def

% concat strings: <string> <string> ldiagconcat <string>
% must be defined outside ldiagdict since used in ldiagpromotelabels
/ldiagconcat
{ 2 copy length exch length add string
  dup 0 4 index putinterval
  dup 3 index length 3 index putinterval
  3 1 roll pop pop
} def

% mconcat strings: <string> <string> ldiagmconcat <string>
% returns concatenation, separated by @ if first is non-empty
% must be defined outside ldiagdict since used in ldiagpromotelabels
/ldiagmconcat
{
  2 copy length exch length add 1 add string
  dup 0 4 index putinterval
  dup 3 index length (@) putinterval
  dup 3 index length 1 add 3 index putinterval
  3 1 roll pop pop
} def

% show string in format start ... end: <string> ldiagsends <string>
/ldiagsends
{
  dup length 20 string cvs (: ) ldiagconcat exch
  dup 0 20 getinterval ( ... ) ldiagconcat
  3 -1 roll exch ldiagconcat
  exch dup length 20 sub 20 getinterval ldiagconcat
} def

/ldiagdebugposy 432 def
/ldiagdebugposx 72 def

% <string> <int> ldiagdebugprint -
% must be defined outside ldiagdict since used in arbitrary places
% print <string> plus count or <int> stack entries, whichever is the smaller
/ldiagdebugprint
{
  exch
  gsave
  initgraphics
  ldiagdebugposy 72 lt
  { /ldiagdebugposx ldiagdebugposx 144 add store
    /ldiagdebugposy 432 store
  }
  {
    /ldiagdebugposy ldiagdebugposy 12 sub store
  } ifelse
  ldiagdebugposx ldiagdebugposy moveto
  /Times-Roman findfont 10 scalefont setfont
  0 setgray show
  count 1 sub 2 copy lt { pop } { exch pop } ifelse 1 sub
  0 exch 1 exch
  {
    /ldiagdebugposy ldiagdebugposy 12 sub store
    ldiagdebugposx 12 add ldiagdebugposy moveto
    index
    dup type (dicttype) eq
    {
      (begin dict) show
      {
        /ldiagdebugposy ldiagdebugposy 12 sub store
        ldiagdebugposx 12 add ldiagdebugposy moveto
	pop 100 string cvs show
      } forall
      /ldiagdebugposy ldiagdebugposy 12 sub store
      ldiagdebugposx 12 add ldiagdebugposy moveto
      (end dict) show
    }
    {
      100 string cvs show
    } ifelse
  } for
  grestore
} def

/ldiagdict 200 dict def
ldiagdict begin

% error messages
/dictfull (dictfull error:  too many labels?) def
/dictstackoverflow (dictstackoverflow error:  labels nested too deeply?) def
/execstackoverflow (execstackoverflow error:  figure nested too deeply?) def
/limitcheck (limitcheck error:  figure nested too deeply or too large?) def
/syntaxerror (syntaxerror error:  syntax error in text of figure?) def
/typecheck (typecheck error:  syntax error in text of figure?) def
/undefined (undefined error:  unknown or misspelt label?) def
/VMError (VMError error:  run out of memory?) def

% push pi onto stack:  - ldiagpi <num>
/ldiagpi 3.14159 def

% push e onto stack:  - ldiage <num>
/ldiage 2.71828 def

% arc directions
/clockwise     false def
/anticlockwise true  def

% test equality between two angles:  <angle> <angle> ldiagangleeq <bool>
/ldiagangleeq { ldiagfixangle exch ldiagfixangle eq } def

% test inequality between two angles:  <angle> <angle> ldiaganglene <bool>
/ldiaganglene { ldiagangleeq not } def

% maximum of two numbers:  <num> <num> ldiagmax <num>
/ldiagmax { 2 copy gt { pop } { exch pop } ifelse } def

% minimum of two numbers:  <num> <num> ldiagmin <num>
/ldiagmin { 2 copy lt { pop } { exch pop } ifelse } def

% add two points:  <point> <point> ldiagpadd <point>
/ldiagpadd
{
  % (Entering padd) 4 ldiagdebugprint
  exch 3 1 roll add 3 1 roll add exch
  % (Leaving padd) 2 ldiagdebugprint
} def

% subtract first point from second:  <point> <point> ldiagpsub <point>
/ldiagpsub { 3 2 roll sub 3 1 roll exch sub exch } def

% max two points:  <point> <point> ldiagpmax <point>
/ldiagpmax { exch 3 1 roll ldiagmax 3 1 roll ldiagmax exch } def

% min two points:  <point> <point> ldiagpmin <point>
/ldiagpmin { exch 3 1 roll ldiagmin 3 1 roll ldiagmin exch } def

% scalar multiplication: <point> <num> ldiagpmul <point>
/ldiagpmul { dup 3 1 roll mul 3 1 roll mul exch } def

% point at angle and distance:  <point> <length> <angle> ldiagatangle <point>
/ldiagatangle { 2 copy cos mul 3 1 roll sin mul ldiagpadd } def

% angle from one point to another:  <point> <point> ldiagangleto <angle>
/ldiagangleto { ldiagpsub 2 copy 0 eq exch 0 eq and {pop} {exch atan} ifelse } def

% distance between two points:  <point> <point> ldiagdistance <length>
/ldiagdistance { ldiagpsub dup mul exch dup mul add sqrt } def

% stroke a solid line:  <length> <dashlength> ldiagsolid -
/ldiagsolid
{  pop pop [] 0 setdash 1 setlinecap stroke
} def

% stroke a dashed line:   <length> <dashlength> ldiagdashed -
/ldiagdashed
{  2 copy div 2 le 1 index 0 le or
   {  exch pop 1 pt ldiagmax [ exch dup ] 0 setdash }
   {  dup [ exch 4 2 roll 2 copy div
      1 sub 2 div ceiling dup 4 1 roll
      1 add mul sub exch div ] 0 setdash
   } ifelse 0 setlinecap stroke
} def

% stroke a cdashed line:  <length> <dashlength> ldiagcdashed -
/ldiagcdashed
{  % (Entering ldiagcdashed) 2 ldiagdebugprint
   2 copy le 1 index 0 le or
   { exch pop 1 pt ldiagmax [ exch dup ] dup 0 get 2 div setdash }
   { dup [ 4 2 roll exch 2 copy exch div
     2 div ceiling div 1 index sub
     ] exch 2 div setdash
   } ifelse 0 setlinecap stroke
   % (Leaving ldiagcdashed) 0 ldiagdebugprint
} def

% stroke a dotted line:  <length> <dashlength> ldiagdotted -
/ldiagdotted
{  2 copy le 1 index 0 le or
   { exch pop 1 pt ldiagmax [ exch 0 exch ] 0 setdash }
   { 1 index exch div ceiling div
     [ 0 3 2 roll ] 0 setdash
   } ifelse 1 setlinecap stroke
} def

% stroke a noline line:  <length> <dashlength> ldiagnoline -
/ldiagnoline
{ pop pop
} def

/ldiagbox
{
   0     0         /SW  ldiagpointdef
   xsize 0         /SE  ldiagpointdef
   xsize ysize     /NE  ldiagpointdef
   0     ysize     /NW  ldiagpointdef
   SE 0.5 ldiagpmul /S   ldiagpointdef
   NW 0.5 ldiagpmul /W   ldiagpointdef
   W SE ldiagpadd   /E   ldiagpointdef
   S NW ldiagpadd   /N   ldiagpointdef
   NE 0.5 ldiagpmul /CTR ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ CTR NE ldiagpsub /ldiagboxcircum cvx ] ldiagcircumdef
   SW SE NE NW SW
} def

% shape and labels of the @CurveBox symbol
% <margin> ldiagcurvebox <shape>
/ldiagcurvebox
{  

   % (Entering ldiagcurvebox) 1 ldiagdebugprint
   ldiagdecodelength /cbmgn exch def

   xsize 0.5 mul	ysize 0.5 mul	/CTR ldiagpointdef
   xsize 0.5 mul	0		/S   ldiagpointdef
   xsize		ysize 0.5 mul	/E   ldiagpointdef
   xsize 0.5 mul	ysize		/N   ldiagpointdef
   0			ysize 0.5 mul	/W   ldiagpointdef

   cbmgn 0.293 mul		cbmgn 0.293 mul		  /SW  ldiagpointdef
   xsize cbmgn 0.293 mul sub	cbmgn 0.293 mul		  /SE  ldiagpointdef
   xsize cbmgn 0.293 mul sub	ysize cbmgn 0.293 mul sub /NE  ldiagpointdef
   cbmgn 0.293 mul		ysize cbmgn 0.293 mul sub /NW  ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ xsize ysize 0.5 ldiagpmul cbmgn /ldiagcurveboxcircum cvx ] ldiagcircumdef

   cbmgn		0
   xsize cbmgn sub	0
   [ xsize cbmgn sub	cbmgn		]
   xsize		cbmgn
   xsize		ysize cbmgn sub
   [ xsize cbmgn sub	ysize cbmgn sub	]
   xsize cbmgn sub	ysize
   cbmgn		ysize
   [ cbmgn		ysize cbmgn sub	]
   0			ysize cbmgn sub
   0			cbmgn
   [ cbmgn		cbmgn		]
   cbmgn		0

   % (Leaving ldiagcurvebox) 0 ldiagdebugprint
} def

% shadow of the @ShadowBox symbol
% its shape and labels are done, somewhat inaccurately, with ldiagbox
% <shadowmargin> ldiagshadow -
/ldiagshadow
{ 
  /lfshm exch def
  
  lfshm 0 moveto
  0 lfshm neg rlineto
  xsize 0 rlineto
  0 ysize rlineto
  lfshm neg 0 rlineto
  xsize 0 lineto
  closepath fill

} def

% shape and labels of the @Square symbol
/ldiagsquare
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   CTR xsize xsize ysize ysize ldiagpmax 0.5 ldiagpmul ldiagpadd /NE ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 135 ldiagatangle ldiagpadd /NW ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 225 ldiagatangle ldiagpadd /SW ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 315 ldiagatangle ldiagpadd /SE ldiagpointdef
   SW 0.5 ldiagpmul SE 0.5 ldiagpmul ldiagpadd /S ldiagpointdef
   NW 0.5 ldiagpmul NE 0.5 ldiagpmul ldiagpadd /N ldiagpointdef
   SW 0.5 ldiagpmul NW 0.5 ldiagpmul ldiagpadd /W ldiagpointdef
   SE 0.5 ldiagpmul NE 0.5 ldiagpmul ldiagpadd /E ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ CTR NE ldiagpsub /ldiagboxcircum cvx ] ldiagcircumdef
   SW SE NE NW SW
} def

% shape and labels of the @Diamond symbol
/ldiagdiamond
{
   xsize 0 0.5 ldiagpmul /S   ldiagpointdef
   0 ysize 0.5 ldiagpmul /W   ldiagpointdef
   S W         ldiagpadd /CTR ldiagpointdef
   CTR W       ldiagpadd /N   ldiagpointdef
   CTR S       ldiagpadd /E   ldiagpointdef
   E N ldiagpadd 0.5 ldiagpmul /NE ldiagpointdef
   N W ldiagpadd 0.5 ldiagpmul /NW ldiagpointdef
   S W ldiagpadd 0.5 ldiagpmul /SW ldiagpointdef
   S E ldiagpadd 0.5 ldiagpmul /SE ldiagpointdef

     0 dg        /S@ANGLE  ldiagangledef
    90 dg        /E@ANGLE  ldiagangledef
   180 dg        /N@ANGLE  ldiagangledef
   270 dg        /W@ANGLE  ldiagangledef
   S E ldiagangleto /SE@ANGLE ldiagangledef
   E N ldiagangleto /NE@ANGLE ldiagangledef
   N W ldiagangleto /NW@ANGLE ldiagangledef
   W S ldiagangleto /SW@ANGLE ldiagangledef

   [ xsize ysize 0.5 ldiagpmul /ldiagdiamondcircum cvx ] ldiagcircumdef
   S E N W S
} def

% shape and labels of the @Ellipse symbol
/ldiagellipse
{
   xsize 0 0.5 ldiagpmul /S   ldiagpointdef
   0 ysize 0.5 ldiagpmul /W   ldiagpointdef
   S W         ldiagpadd /CTR ldiagpointdef
   CTR W       ldiagpadd /N   ldiagpointdef
   CTR S       ldiagpadd /E   ldiagpointdef
   CTR xsize 0 0.3536 ldiagpmul ldiagpadd 0 ysize 0.3536 ldiagpmul ldiagpadd /NE ldiagpointdef
   0 ysize 0.3536 ldiagpmul CTR xsize 0 0.3536 ldiagpmul ldiagpadd ldiagpsub /SE ldiagpointdef
   xsize 0 0.3536 ldiagpmul CTR ldiagpsub 0 ysize 0.3536 ldiagpmul ldiagpadd /NW ldiagpointdef
   0 ysize 0.3536 ldiagpmul xsize 0 0.3536 ldiagpmul CTR ldiagpsub ldiagpsub /SW ldiagpointdef
   [ xsize ysize 0.5 ldiagpmul /ldiagellipsecircum cvx ] ldiagcircumdef

     0 dg /S@ANGLE  ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   270 dg /W@ANGLE  ldiagangledef

   S E ldiagangleto /SE@ANGLE ldiagangledef
   E N ldiagangleto /NE@ANGLE ldiagangledef
   N W ldiagangleto /NW@ANGLE ldiagangledef
   W S ldiagangleto /SW@ANGLE ldiagangledef

   S [ CTR ] E [ CTR ] N [ CTR ] W [ CTR ] S
} def

% shape and labels of the @Circle symbol
/ldiagcircle
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   CTR xsize 0 ysize 0 ldiagpmax 0.5 ldiagpmul ldiagpadd /E ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 45 ldiagatangle ldiagpadd /NE ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 90 ldiagatangle ldiagpadd /N ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 135 ldiagatangle ldiagpadd /NW ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 180 ldiagatangle ldiagpadd /W ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 225 ldiagatangle ldiagpadd /SW ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 270 ldiagatangle ldiagpadd /S ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 315 ldiagatangle ldiagpadd /SE ldiagpointdef
   [ S E ldiagpsub /ldiagellipsecircum cvx ] ldiagcircumdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   S [ CTR ] E [ CTR ] N [ CTR ] W [ CTR ] S
} def

% shape and labels of the @VLine and @VArrow symbols
/ldiagvline
{
   xmark ysize ldiagprevious /FROM ldiagpointdef
   xmark 0 ldiagprevious /TO ldiagpointdef
} def

% points of a polygon around base with given no of sides, vert init angle:
% <sides> <angle> ldiagpolygon <point> ... <point>
/ldiagpolygon
{  exch round cvi exch
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   90 sub CTR 2 copy ldiagmax 5 3 roll
   [ 4 copy pop /ldiagpolycircum cvx ] ldiagcircumdef
   exch dup 360 exch div exch
   1 1  3 2 roll
   {  4 string cvs (P) exch ldiagconcat
      3 copy exch pop (@ANGLE) ldiagconcat cvn exch 90 add exch ldiagangledef
      cvn 6 copy pop pop ldiagatangle 2 copy 10 2 roll
      3 2 roll ldiagpointdef
      dup 3 1 roll add exch
   }  for
   pop ldiagatangle
} def

% shape and labels of the @Isosceles triangle symbol
/ldiagisosceles
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   0     0                   /SW  ldiagpointdef
   xsize 0                   /SE  ldiagpointdef
   xsize 0.5 mul ysize       /N   ldiagpointdef
   xsize 0.5 mul 0           /S   ldiagpointdef
   SE 0.5 ldiagpmul N 0.5 ldiagpmul ldiagpadd /NE ldiagpointdef
   SW 0.5 ldiagpmul N 0.5 ldiagpmul ldiagpadd /NW ldiagpointdef

   [ xsize ysize /ldiagisoscelescircum cvx ] ldiagcircumdef

     0 dg              /SW@ANGLE ldiagangledef
     0 dg              /SE@ANGLE ldiagangledef
   180 dg              /N@ANGLE  ldiagangledef
     0 dg              /S@ANGLE  ldiagangledef
     SE N ldiagangleto /NE@ANGLE ldiagangledef
     N SW ldiagangleto /NW@ANGLE ldiagangledef

   SW SE N SW
} def

% next array element:  <array> <index> ldiaggetnext <array> <index> <any> true
%                                               or <array> <index> false
/ldiaggetnext
{  2 copy exch length ge
   { false }
   { 2 copy get exch 1 add exch true } ifelse
} def

% check whether thing is number:  <any> ldiagisnumbertype <any> <bool>
/ldiagisnumbertype
{  dup type dup
   /integertype eq exch /realtype eq or
} def

% check whether thing is an array:  <any> ldiagisarraytype <any> <bool>
/ldiagisarraytype { dup type /arraytype eq } def

% check whether thing is an array:  <any> ldiagisnametype <any> <bool>
/ldiagisnametype { dup type /nametype eq } def

% get next item:  <array> <index> ldiaggetnextitem <array> <index> 0
%                                              or <array> <index> <array> 1
%                                              or <array> <index> <point> 2
/ldiaggetnextitem
{   ldiaggetnext
    {	ldiagisarraytype
	{   1
	}
	{   ldiagisnumbertype
	    {	3 1 roll
		ldiaggetnext
		{   ldiagisnumbertype
		    {	4 3 roll exch  2
		    }
		    {	pop 3 2 roll pop  0
		    } ifelse
		}
		{   3 2 roll pop  0
		} ifelse
	    }
	    {	pop 0
	    } ifelse
	} ifelse
    }
    {	0
    } ifelse
} def

% approximate equality: num1 num2  approxeq  <boolean>
/approxeq
{ dup 0 eq
  { pop 0 eq
  }
  { dup 3 1 roll sub exch div abs 0.001 lt
  } ifelse
} def

% set arc path:  bool x1 y1  x2 y2  x0 y0  ldiagsetarc  <angle> <angle> <dist>
% the path goes from x1 y1 to x2 y2 about centre x0 y0,
% anticlockwise if bool is true else clockwise.
% The orientations of backwards pointing and forwards pointing
% arrowheads are returned in the two angles, and
% the length of the arc is returned in <dist>.
/ldiagsetarc
{
  % (Entering ldiagsetarc) 7 ldiagdebugprint
  20 dict begin
     matrix currentmatrix 8 1 roll
     2 copy translate 2 copy 8 2 roll
     4 2 roll ldiagpsub 6 2 roll ldiagpsub
     dup /y1 exch def dup mul /y1s exch def
     dup /x1 exch def dup mul /x1s exch def
     dup /y2 exch def dup mul /y2s exch def
     dup /x2 exch def dup mul /x2s exch def
     /dist1 0 0 x1 y1 ldiagdistance def
     /dist2 0 0 x2 y2 ldiagdistance def

     y1s y2s approxeq
     {	-1
     }
     {	y1s x2s mul y2s x1s mul sub y1s y2s sub div
     } ifelse
     /da exch def

     x1s x2s approxeq
     {	-1
     }
     {	x1s y2s mul x2s y1s mul sub x1s x2s sub div
     } ifelse
     /db exch def

     da 0 gt db 0 gt and
     {
	% (  case 1, ellipse) 0 ldiagdebugprint
	/LMax da sqrt db sqrt ldiagmax def
	/scalex da sqrt LMax div def
	/scaley db sqrt LMax div def
	scalex scaley scale
	0 0 LMax
	0 0 x1 scalex mul y1 scaley mul ldiagangleto
	0 0 x2 scalex mul y2 scaley mul ldiagangleto
	2 copy eq { 360 add } if
	2 copy 8 2 roll
	5 index { arc } { arcn } ifelse
	2 index 1 index
	{ 90 sub } { 90 add } ifelse
	dup sin scaley mul exch cos scalex mul atan
	2 index 2 index
	{ 90 add } { 90 sub } ifelse
	dup sin scaley mul exch cos scalex mul atan
	5 2 roll  % res1 res2 ang1 ang2 anticlockwise
	{ exch sub } { sub } ifelse
	dup 0 le { 360 add } if  ldiagpi mul LMax mul 180 div
     }
     {
	dist1 dist2 approxeq
	% x1 y1 dist1 (  x1 y1, d) 3 ldiagdebugprint pop pop pop
	% x2 y2 dist2 (  x2 y2, d) 3 ldiagdebugprint pop pop pop
	{
		% (  case 2, circle) 0 ldiagdebugprint
		0 0
		dist1
		0 0 x1 y1 ldiagangleto
		0 0 x2 y2 ldiagangleto
		2 copy eq { 360 add } if
		2 copy 8 2 roll
		5 index { arc } { arcn } ifelse
		2 index 1 index
		{ 90 sub } { 90 add } ifelse
		2 index 2 index
		{ 90 add } { 90 sub } ifelse
		5 2 roll % res1 res2 ang1 ang2 clockwise
		{ exch sub } { sub } ifelse
		dup 0 le { 360 add } if
		ldiagpi mul dist1 mul 180 div
	}
	{
		% (  case 3, line) 0 ldiagdebugprint
		x2 y2 lineto pop
		x2 y2 x1 y1 ldiagangleto
		x1 y1 x2 y2 ldiagangleto
		x1 y1 x2 y2 ldiagdistance
	} ifelse
     } ifelse
     4 -1 roll setmatrix
     end
  % (Leaving ldiagsetarc) 3 ldiagdebugprint
} def

% ldiagsetcurve: set up a Bezier curve from x0 y0 to x3 y3
% and return arrowhead angles and length of curve (actually 0)
% x0 y0 x1 y1 x2 y2 x3 y3 ldiagsetcurve <angle> <angle> <length>
/ldiagsetcurve
{ 8 copy curveto pop pop
  ldiagangleto
  5 1 roll
  4 2 roll ldiagangleto
  exch
  0
} def

% ldiagsetpath: convert a Diag path into a PostScript path
% [ shape ] ldiagsetpath 
/ldiagsetpath
{
  10 dict begin
    0 newpath
    /prevseen false def
    /curveseen false def
    { ldiaggetnextitem
      dup 0 eq { pop exit }
      { 1 eq
        { /curveseen true def
	  /curve exch def
	  curve length 0 eq { /curveseen false def } if
        }
        { /ycurr exch def
	  /xcurr exch def
	  prevseen
	  { curveseen
	    { curve length 4 eq
	      { xprev yprev
		curve 0 get curve 1 get
		curve 2 get curve 3 get
		xcurr ycurr
		ldiagsetcurve pop pop pop
	      }
	      { xprev yprev xcurr ycurr
	        curve length 1 ge { curve 0 get } { 0 } ifelse
	        curve length 2 ge { curve 1 get } { 0 } ifelse
	        curve length 3 ge { curve 2 get } { true } ifelse
	        7 1 roll
	        ldiagsetarc pop pop pop
	      } ifelse
	    }
	    { xcurr ycurr lineto
	    } ifelse
	  }
	  { xcurr ycurr moveto
	  } ifelse
	  /xprev xcurr def
	  /yprev ycurr def
	  /prevseen true def
	  /curveseen false def
        } ifelse
      } ifelse
    } loop pop pop
  end
} def

% ldiagpaintpath: paint a path of the given shape
% /paint [ shape ] ldiagpaintpath -
/ldiagpaintpath
{
  ldiagsetpath cvx exec
} def

% stroke a path of the given shape in the given linestyle and dash length.
% Return the origin and angle of the backward and forward arrow heads.
% dashlength /linestyle [shape] ldiagdopath  [<point> <angle>] [<point> <angle>] 
/ldiagdopath
{
  10 dict begin
    0
    /prevseen  false def
    /curveseen false def
    /backarrow []    def
    /fwdarrow  []    def
    {
	ldiaggetnextitem
	dup 0 eq { pop exit }
	{
	    1 eq
	    {	/curveseen true def
		/curve exch def
		curve length 0 eq { /prevseen false def } if
	    }
	    {	/ycurr exch def
		/xcurr exch def
		prevseen
		{   newpath xprev yprev moveto
		    curveseen
		    {	curve length 4 eq
			{   xprev yprev
			    curve 0 get curve 1 get
			    curve 2 get curve 3 get
			    xcurr ycurr ldiagsetcurve
			}
			{   xprev yprev xcurr ycurr
			    curve length 1 ge { curve 0 get } { 0 } ifelse
			    curve length 2 ge { curve 1 get } { 0 } ifelse
			    curve length 3 ge { curve 2 get } { true } ifelse
			    7 1 roll
			    ldiagsetarc
			} ifelse
		    }
		    {	xcurr ycurr lineto
			xcurr ycurr xprev yprev ldiagangleto dup 180 sub
			xprev yprev xcurr ycurr ldiagdistance
		    } ifelse
		    6 index 6 index cvx exec
		    [ xprev yprev 5 -1 roll ]
		    backarrow length 0 eq
		    { /backarrow exch def }
		    { pop } ifelse
		    [ xcurr ycurr 4 -1 roll ] /fwdarrow exch def
		} if
		/xprev xcurr def
		/yprev ycurr def
		/prevseen true def
		/curveseen false def
	    } ifelse
	} ifelse
    } loop
    pop pop pop pop
    backarrow length 0 eq { [ 0 0 0 ] } { backarrow } ifelse
    fwdarrow  length 0 eq { [ 0 0 0 ] } { fwdarrow  } ifelse
  end
} def


% stroke a path of the given shape in the given linestyle and dash length.
% dashlength [ /linestyle ] [shape] ldiagdosegpath  -
/ldiagdosegpath
{
  12 dict begin
    1 index /seg exch def
    1 index length /seglength exch def
    0 /segcount exch def
    0
    /prevseen  false def
    /curveseen false def
    /backarrow []    def
    /fwdarrow  []    def
    {
	ldiaggetnextitem
	dup 0 eq { pop exit }
	{
	    1 eq
	    {	/curveseen true def
		/curve exch def
		curve length 0 eq { /prevseen false def } if
	    }
	    {	/ycurr exch def
		/xcurr exch def
		prevseen
		{   newpath xprev yprev moveto
		    curveseen
		    {	curve length 4 eq
			{   xprev yprev
			    curve 0 get curve 1 get
			    curve 2 get curve 3 get
			    xcurr ycurr ldiagsetcurve
			}
			{   xprev yprev xcurr ycurr
			    curve length 1 ge { curve 0 get } { 0 } ifelse
			    curve length 2 ge { curve 1 get } { 0 } ifelse
			    curve length 3 ge { curve 2 get } { true } ifelse
			    7 1 roll
			    ldiagsetarc
			} ifelse
		    }
		    {	xcurr ycurr lineto
			xcurr ycurr xprev yprev ldiagangleto dup 180 sub
			xprev yprev xcurr ycurr ldiagdistance
		    } ifelse
		    6 index seg segcount seglength mod get cvx exec
		    /segcount segcount 1 add def
		    [ xprev yprev 5 -1 roll ]
		    backarrow length 0 eq
		    { /backarrow exch def }
		    { pop } ifelse
		    [ xcurr ycurr 4 -1 roll ] /fwdarrow exch def
		} if
		/xprev xcurr def
		/yprev ycurr def
		/prevseen true def
		/curveseen false def
	    } ifelse
	} ifelse
    } loop
    pop pop pop pop
  end
} def

% ldiagnodebegin: start of node parameters
% ldiagnodebegin -
/ldiagnodebegin
{ % (Entering ldiagnodebegin) 0 ldiagdebugprint
  ldiagmaxlabels dict begin 
} def

% ldiagnodeend: end of node parameters (so do the node)
% <outline> <dashlength> <style> <linewidth> <paint> ldiagnodeend -
/ldiagnodeend
{
  % (Entering ldiagnodeend) 0 ldiagdebugprint
  end % matches begin in ldiagnodebegin
  4 index gsave ldiagpaintpath grestore
  3 index ldiagsetpath clip newpath
  2 mul setlinewidth
  3 -1 roll ldiagdosegpath
  % (Leaving ldiagnodeend) 0 ldiagdebugprint
} def

% ldiaglinkbegin: start of link parameters
% <direct> ldiaglinkbegin -
/ldiaglinkbegin
{ ldiagmaxlabels dict begin 
  1 eq /direct exch def
} def

% ldiaglinkend: end of link parameters (so do the link)
% <outline> <dashlength> <style> <linewidth> ldiaglinkend -
/ldiaglinkend
{
  end % matches begin in ldiaglinkbegin
  setlinewidth
  3 -1 roll ldiagdosegpath
} def

% ldiagdoarrow: draw an arrow head of given form
% dashlength /lstyle /pstyle hfrac height width [ <point> <angle> ] ldiagdoarrow -
/ldiagdoarrow
{  matrix currentmatrix 8 1 roll
   dup 0 get 1 index 1 get translate
   2 get rotate
   [ 2 index neg 2 index 0 0
     3 index 3 index neg
     1 index 10 index mul 0
     7 index 7 index ]
   4 1 roll pop pop pop
   dup 3 1 roll
   gsave ldiagpaintpath grestore ldiagdopath pop pop
   setmatrix
} def

% arrow head styles
/ldiagopen     0.0 def
/ldiaghalfopen 0.5 def
/ldiagclosed   1.0 def

% stroke no arrows, forward, back, and both
/ldiagnoarrow { pop pop pop pop pop pop pop pop                        } def
/ldiagforward { 7 -1 roll ldiagdoarrow pop                              } def
/ldiagback    { 8 -2 roll pop ldiagdoarrow                              } def
/ldiagboth    { 8 -1 roll 7 copy ldiagdoarrow pop 7 -1 roll ldiagdoarrow } def

% ldiagprevious: return previous point on path
/ldiagprevious
{ ldiagisnumbertype
  { 2 copy }
  { ldiagisarraytype
    { 2 index 2 index }
    { 0 0 }
    ifelse
  } ifelse
} def

% Tag dictionary operators
%
% Diag's tag dictionaries are kept on the same stack as other dictionaries,
% since there is nowhere else to put them.  However, they are managed like
% a separate stack using the following operators:
%
%  <tag>  ldiagpushtagdict  -      Push a new, empty tag dictionary
%         ldiagtoptagdict   dict   Find the top tag dictionary
%         ldiagpoptagdict   -      Pop and destroy the top tag dictionary
%         ldiagpopuptagdict -      Pop top tag dict and promote its entries
% <array> ldiagpopsometagdict -    Like popuptagdict but only those promote
%                                  those labels listed in <array>
%         ldiagdebugtagdict -      Debug print of dictionary stack
%
% They are distinguished from other dictionaries by containing /ldiagtagdict,
% whose value is the <tag> which is used by ldiagpopuptagdict,
% and they are hopefully never the target of any non-tag definition because
% they are never the top dictionary, since push places the new dict second.

/ldiagpushtagdict
{ ldiagmaxlabels dict dup
  currentdict end exch begin begin
  exch /ldiagtagdict exch put
} def

/ldiagtoptagdict
{ /ldiagtagdict where not
  { (Diag internal error: no tag dictionary) show stop
  } if
} def

/ldiagpoptagdict
{
  % (Entering poptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
  mark
  { currentdict end
    dup /ldiagtagdict known
    { exit
    } if
  } loop
  pop
  counttomark
  { begin
  } repeat
  pop
  % (Leaving poptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% promote labels from top tag dictionary to second top tag dictionary
% each prefixed by <string>@ if <string> (value of /ldiagtagdict) is not empty
% - ldiagpopuptagdict -
/ldiagpopuptagdict
{
  ldiagtagdict
  % (Entering ldiagpopuptagdict) 1 ldiagdebugprint
  % ldiagdebugtagdict
  ldiagtoptagdict ldiagpoptagdict ldiagtoptagdict exch
  { exch dup length string cvs
    3 index exch ldiagmconcat
    cvn exch 2 index 3 1 roll put
  } forall
  pop pop
  % (Leaving ldiagpopuptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% similar to ldiagpopuptagdict but only those inner labels that are
% present in <array> will be promoted
% <array> ldiagpopsometagdict -
/ldiagpopsometagdict
{
  ldiagtagdict
  % (Entering ldiagpopsometagdict) 1 ldiagdebugprint
  % ldiagdebugtagdict
  ldiagtoptagdict
  ldiagpoptagdict
  ldiagtoptagdict
  4 -1 roll
  { dup 3 index exch
    get
    exch 4 index
    exch ldiagmconcat exch
    3 copy put
    pop pop
  } forall
  pop pop pop
  % (Leaving ldiagpopuptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% debug tag dictionary stack
/ldiagdebugtagdict
{ (Entering ldiagdebugtagdict) 0 ldiagdebugprint
  30 array dictstack
  { dup /ldiagtagdict known
    { dup /ldiagtagdict get 0 ldiagdebugprint
      { pop 100 string cvs (   ) exch ldiagconcat
	dup 0 ldiagdebugprint
	pop
      }
      forall
    }
    { pop (other) 0 ldiagdebugprint
    } ifelse
  } forall
  (Leaving ldiagdebugtagdict) 0 ldiagdebugprint
} def

% label a point in top tag dictionary:  <point> /name ldiagpointdef -
/ldiagpointdef
{
  % (Entering ldiagpointdef) 3 ldiagdebugprint
  [ 4 2 roll transform /itransform cvx ] cvx
  ldiagtoptagdict 3 1 roll put
  % (Leaving ldiagpointdef) 0 ldiagdebugprint
} def

% label an angle in top tag dictionary:  <angle> /name ldiagangledef -
/ldiagangledef
{
  % (Entering ldiagangledef) 2 ldiagdebugprint
  exch ldiagfixangle ldiagtoptagdict 3 1 roll put
  % (Leaving ldiagangledef) 0 ldiagdebugprint
} def

% add CIRCUM operator with this body:  <array> ldiagcircumdef -
/ldiagcircumdef
{   % (Entering ldiagcircumdef) 1 ldiagdebugprint
    /CIRCUM exch cvx
    ldiagtoptagdict 3 1 roll put
    % currentdict end
    % 3 1 roll
    % def
    % begin
    % (Leaving ldiagcircumdef) 0 ldiagdebugprint
} def

% show points (except CIRCUM and ANGLE): - ldiagshowpoints -
/ldiagshowpoints
{
  % (Entering ldiagshowpoints) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (CIRCUM) search % if CIRCUM in key
      { pop pop pop pop pop }
      { 
        (ANGLE) search % if ANGLE in key
        {
          pop pop pop pop pop
        }
        {
          (ldiagtagdict) search
          {
            pop pop pop pop pop
          }
          {
	    pop cvx exec
	    newpath 2.0 pt 0 360 arc 0 setgray fill pop
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowpoints) 0 ldiagdebugprint
} def


/ldiagshowtags
{
  % (Entering ldiagshowtags) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    % dup 0 ldiagdebugprint
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (CIRCUM) search % if CIRCUM in key
      { pop pop pop pop pop }
      { 
        (ANGLE) search % if ANGLE in key
        {
          pop pop pop pop pop
        }
        {
          (ldiagtagdict) search
          {
            pop pop pop pop pop
          }
          {
	    pop cvx exec 2 copy
	    gsave
	    newpath 2.0 pt 0 360 arc 0 setgray fill
            /Times-Roman findfont 8 pt scalefont setfont
            translate 40 rotate 0.2 cm 0.1 cm moveto 100 string cvs show
	    grestore
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowtags) 0 ldiagdebugprint
} def


% show angles: - ldiagshowangles -
/ldiagshowangles
{
  % (Entering ldiagshowangles) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    % dup 0 ldiagdebugprint
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (ldiagtagdict) search
      {
        pop pop pop pop pop
      }
      {
        (CIRCUM) search % if CIRCUM in key
        { pop pop pop pop pop }
        { 
          (@ANGLE) search % if ANGLE in key, draw the angle at the point
          {
            % (showing ANGLE) 5 ldiagdebugprint
            gsave exch pop exch pop cvx
            % (about to execute) 1 ldiagdebugprint
            exec translate rotate 0.8 0.8 scale pop
            newpath 0 0 2.0 pt 0 360 arc 0 setgray fill
            newpath 4 pt 0 moveto 9 pt 0 lineto
            9 pt 1.5 pt lineto 11 pt 0 lineto 9 pt -1.5 pt lineto
            9 pt 0 lineto [] 0 setdash 4 pt setlinewidth 0 setlinejoin
	    stroke grestore
            % (finished ANGLE) 5 ldiagdebugprint
          }
          {
            % else must be a point, we aren't showing those
            pop pop pop
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowangles) 0 ldiagdebugprint
} def

% fix an angle to 0 <= res < 360:  <angle> ldiagfixangle <angle>
/ldiagfixangle
{
  % (Entering ldiagfixangle) 1 ldiagdebugprint
  { dup 0 ge { exit } if
    360 add
  } loop
  { dup 360 lt { exit } if
    360 sub
  } loop
  % (Leaving ldiagfixangle) 1 ldiagdebugprint
} def

% find point on circumference of box:  alpha a b ldiagboxcircum x y
/ldiagboxcircum
{
  % (Entering ldiagboxcircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    0 0 a b ldiagangleto /theta exch def

    % if alpha <= theta, return (a, a*tan(alpha))
    alpha theta le
    { a  a alpha sin mul alpha cos div }
    {
      % else if alpha <= 180 - theta, return (b*cot(alpha), b)
      alpha 180 theta sub le
      { b alpha cos mul alpha sin div  b }
      {
        % else if alpha <= 180 + theta, return (-a, -a*tan(alpha))
        alpha 180 theta add le
        { a neg  a neg alpha sin mul alpha cos div }
        {
	  % else if alpha <= 360 - theta, return (-b*cot(alpha), -b)
	  alpha 360 theta sub le
          { b neg alpha cos mul alpha sin div  b neg }
	  {
	    % else 360 - theta <= alpha, return (a, a*tan(alpha))
	    a  a alpha sin mul alpha cos div
	  } ifelse
        } ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagboxcircum) 2 ldiagdebugprint
} def

% find quadratic roots (assume a != 0): a b c ldiagqroots x1 x2 2
%                                                     or    x2 1
%                                                     or       0
/ldiagqroots
{
  4 dict begin
    /c exch def
    /b exch def
    /a exch def
    /disc b b mul 4 a c mul mul sub def
    disc 0 lt
    { 0
    }
    { disc 0 eq
      { b neg 2 a mul div
	1
      }
      { b neg disc sqrt add 2 a mul div
        b neg disc sqrt sub 2 a mul div
	2
      }
      ifelse
    }
    ifelse
  end
} def

% work our which quadrant: <angle> ldiagquadrant <0-3>
/ldiagquadrant
{ dup 90 lt
  { pop 0
  }
  { dup 180 lt
    { pop 1
    }
    { 270 lt
      { 2
      }
      { 3
      } ifelse
    } ifelse
  } ifelse
} def

% find curvebox circum, assuming upper right quadrant: alpha a b xmk ldiagcb x y
/ldiagcb
{
  6 dict begin
    /xmk exch def
    /b exch def
    /a exch def
    /alpha exch def
    /theta1 0 0 a b xmk sub ldiagangleto def
    /theta2 0 0 a xmk sub b ldiagangleto def
    alpha theta1 le
    { % if alpha <= theta1, return (a, a*tan(alpha))
      a  a alpha sin mul alpha cos div
    }
    { alpha theta2 ge
      { % else if alpha > theta2, return (b*cot(alpha), b)
	b alpha cos mul alpha sin div  b
      }
      {
	% else, return the intersection of line and circle
	a xmk sub b xmk sub xmk  0 0 alpha ldiagcircleintersect
	dup 0 eq
	{ % should never happen, just return any reasonable point
	  pop
	  a b 0.5 ldiagpmul
	}
	{ 1 eq
	  { % should never happen, just return the point on top of stack
	  }
	  { % the usual case, two points on stack, return the larger
	    ldiagpmax
	  } ifelse
	} ifelse
      } ifelse
    } ifelse
  end
} def

% find point on circumference of curvebox: alpha a b xmk ldiagcurveboxcircum x y
/ldiagcurveboxcircum
{
  % (Entering ldiagcurveboxcircum) 4 ldiagdebugprint
  5 dict begin
    /xmk exch def
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def

    % work out which quadrant we are in, and reflect accordingly
    /quad alpha ldiagquadrant def
    quad 0 eq
    { alpha a b xmk ldiagcb
    }
    { quad 1 eq
      { 180 alpha sub a b xmk ldiagcb exch neg exch
      }
      { quad 2 eq
	{ alpha 180 sub a b xmk ldiagcb neg exch neg exch
	}
	{ 360 alpha sub a b xmk ldiagcb neg
	} ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagcurveboxcircum) 2 ldiagdebugprint
} def

% find point on circumference of diamond:  alpha a b ldiagdiamondcircum x y
/ldiagdiamondcircum
{
  % (Entering ldiagdiamondcircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    b alpha cos abs mul  a alpha sin abs mul  add  /denom exch def
    a b mul alpha cos mul denom div
    a b mul alpha sin mul denom div
  end
  % (Leaving ldiagdiamondcircum) 2 ldiagdebugprint
} def

% find point on circumference of ellipse:  alpha a b ldiagellipsecircum x y
/ldiagellipsecircum
{
  % (Entering ldiagellipsecircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    b alpha cos mul dup mul  a alpha sin mul dup mul  add sqrt /denom exch def
    a b mul alpha cos mul denom div
    a b mul alpha sin mul denom div
  end
  % (Leaving ldiagellipsecircum) 2 ldiagdebugprint
} def

% find point on circumference of isosceles:  alpha a b ldiagisoscelescircum x y
/ldiagisoscelescircum
{
  % (Entering ldiagisoscelescircum) 3 ldiagdebugprint
  7 dict begin
    /b exch def
    /a exch def
    /alpha exch ldiagfixangle def
    /theta1 90 def
    /theta2 a b 0.5 ldiagpmul 0 0 ldiagangleto def
    /theta3 a b 0.5 ldiagpmul a 0 ldiagangleto def
    alpha theta1 ge alpha theta2 le and
    { 0 0 a 2 div b
    }
    { alpha theta2 ge alpha theta3 le and
      { 0 0 a 0
      }
      { a 0 a 2 div b
      } ifelse
    } ifelse
    a 2 div b 2 div 2 copy 1 ft alpha ldiagatangle ldiaglineintersect
    a 2 div b 2 div 4 2 roll ldiagpsub
  end
  % (Leaving ldiagisoscelescircum) 2 ldiagdebugprint
} def

% find point of intersection of two lines each defined by two points
% x1 y1 x2 y2  x3 y3 x4 y4  ldiaglineintersect x y
/ldiaglineintersect
{
  % (Entering ldiaglineintersect) 8 ldiagdebugprint
  13 dict begin
    /y4 exch def
    /x4 exch def
    /y3 exch def
    /x3 exch def
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    x2 x1 sub /x21 exch def
    x4 x3 sub /x43 exch def
    y2 y1 sub /y21 exch def
    y4 y3 sub /y43 exch def
    y21 x43 mul y43 x21 mul sub /det exch def
  
    % calculate x 
    y21 x43 mul x1 mul
    y43 x21 mul x3 mul sub
    y3 y1 sub x21 mul x43 mul add
    det div

    % calculate y
    x21 y43 mul y1 mul
    x43 y21 mul y3 mul sub
    x3 x1 sub y21 mul y43 mul add
    det neg div

  end
  % (Leaving ldiaglineintersect) 2 ldiagdebugprint
} def

% find point on circumference of polygon
% alpha radius num theta ldiagpolycircum x y
/ldiagpolycircum
{
  % (Entering ldiagpolycircum) 4 ldiagdebugprint
  13 dict begin
    /theta exch def
    /num exch def
    /radius exch def
    /alpha exch def

    % calculate delta, the angle from theta to alpha
    alpha theta sub ldiagfixangle

    % calculate the angle which is the multiple of 360/num closest to delta
    360 num div div truncate 360 num div mul theta add /anglea exch def

    % calculate the next multiple of 360/num after anglea
    anglea 360 num div add /angleb exch def

    % intersect the line through these two points with the alpha line
    anglea cos anglea sin  angleb cos angleb sin
    0 0  alpha cos 2 mul alpha sin 2 mul
    ldiaglineintersect radius ldiagpmul

  end
  % (Leaving ldiagpolycircum) 2 ldiagdebugprint
} def

% find point of intersection of a line and a circle
% x0 y0 r  x1 y1 theta  ldiagcircleintersect xa ya xb yb 2
%                                        or       xb yb 1
%                                        or             0
/ldiagcircleintersect
{
  % (Entering ldiagcircleintersect) 6 ldiagdebugprint
  15 dict begin
    /theta exch def
    /y1    exch def
    /x1    exch def
    /r     exch def
    /y0    exch def
    /x0    exch def

    % if sin(theta) = 0 then line is horizontal and y must be y1
    theta sin abs 0.00001 lt
    { 
      /a 1 def
      /b -2 x0 mul def
      /c x0 dup mul y1 y0 sub dup mul add r dup mul sub def
      a b c ldiagqroots dup
      0 eq
      { pop
	0
      }
      { 1 eq
	{ y1 1
	}
	{ y1 exch y1 2
	} ifelse
      } ifelse
    }
    {
      /ct theta cos theta sin div def
      /a ct ct mul 1 add def
      /b ct x1 x0 sub mul y1 add y0 sub 2 mul def
      /c x1 x0 sub dup mul y1 y0 sub dup mul add r dup mul sub def
      a b c ldiagqroots dup
      0 eq
      { pop
	0
      }
      { 1 eq
	{ y1 add /yb exch def
	  yb y1 sub ct mul x1 add /xb exch def
	  xb yb 1
	}
	{ y1 add /ya exch def
	  ya y1 sub ct mul x1 add /xa exch def
	  y1 add /yb exch def
	  yb y1 sub ct mul x1 add /xb exch def
	  xa ya xb yb 2
	} ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagcircleintersect) 1 ldiagdebugprint
} def

% find line which is the perpendicular bisector of two points, defined
% by two points
% x1 y1 x2 y2 ldiaglinebetween x3 y3 x4 y4
/ldiaglinebetween
{ % (Entering ldiaglinebetween) 4 ldiagdebugprint
  /y2 exch def /x2 exch def
  /y1 exch def /x1 exch def

  % let x3, y3 be the point halfway between the two points
  x1 y1 x2 y2 ldiagpadd 0.5 ldiagpmul
  /y3 exch def /x3 exch def

  % find a point perpendicular to x3, y3
  x3 y3 50 x1 y1 x2 y2 ldiagangleto 90 dg add ldiagatangle

  % plus x3 y3 gives the two points
  x3 y3

  % (Leaving ldiaglinebetween) 4 ldiagdebugprint
} def

% find <proc>@<string>:  <proc> <string> ldiagfindlabel <any> true
%                                                      <proc> <string> false
/ldiagfindlabel
{
  % (Entering ldiagfindlabel) 2 ldiagdebugprint
  exch dup length 1 ne
  { exch false
    % (Leaving ldiagfindabel (length not 1)) 3 ldiagdebugprint
  }
  { dup 0 get type /nametype ne
    { exch false
      % (Leaving ldiagfindabel (not a name)) 3 ldiagdebugprint
    }
    { dup 0 get dup length string cvs (@) ldiagconcat
      2 index ldiagconcat dup where
      { exch get exch pop exch pop cvx exec true
	% (Leaving ldiagfindlabel with success) 100 ldiagdebugprint
      }
      {
	pop exch false
	% (Leaving ldiagfindabel (concat not sensible)) 3 ldiagdebugprint
      } ifelse
    } ifelse
  } ifelse
} bind def

% execute <proc>@<string> or else default:  <proc> <string> ldiagdolabel <various>
/ldiagdolabel
{
  % (Entering ldiagdolabel) 2 ldiagdebugprint
  ldiagfindlabel not
  {
    dup (CIRCUM) eq
    { pop pop pop 0 0
    }
    {
      dup (ANGLE) eq
      { pop pop 0
      }
      { pop cvx exec
      } ifelse
    } ifelse
  } if
  % (Leaving ldiagdolabel) 2 ldiagdebugprint
} bind def

% execute a proc depending on whether number is negative, zero, or positive
% procneg proczero procpos number ldiagsigncase <anything>
/ldiagsigncase
{
  % (Entering ldiagsigncase) 4 ldiagdebugprint
  dup 0 lt
  { pop pop pop exec
  }
  { 0 gt
    { exch pop exch pop exec
    }
    { pop exch pop exec
    } ifelse
  } ifelse
  % (Leaving ldiagsigncase) 0 ldiagdebugprint
} bind def

% execute proci if angle is in ith quadrant
% proc45 proc270 proc180 proc90 proc0 proc315 proc225 proc135 angle ldiagquadcase <anything>
/ldiagquadcase
{
  % (Entering ldiagquadcase) 9 ldiagdebugprint
  round ldiagfixangle cvi dup 90 mod 0 eq
  { 90 idiv 4 add } { 90 idiv } ifelse
  8 exch roll pop pop pop pop pop pop pop exec
  % (Leaving ldiagquadcase) 0 ldiagdebugprint
} bind def

% decode Lout length into PostScript length
% <string> ldiagdecodelength <number>
/ldiagdecodelength
{
  % (Entering ldiagdecodelength) 1 ldiagdebugprint
  (f) search
  { exch pop exch pop cvr ft
  }
  { (c) search
    { exch pop exch pop cvr cm
    }
    { (p) search
      { exch pop exch pop cvr pt
      }
      { (m) search
	{ exch pop exch pop cvr em
	}
	{ (s) search
	  { exch pop exch pop cvr sp
	  }
	  { (v) search
	    { exch pop exch pop cvr vs
	    }
	    { (i) search
	      { exch pop exch pop cvr in
	      }
	      { pop 0
	      } ifelse
	    } ifelse
	  } ifelse
	} ifelse
      } ifelse
    } ifelse
  } ifelse
  % (Leaving ldiagdecodelength) 1 ldiagdebugprint
} def

% implement aabout function
% logical form:  <circum> <extra> <centre> aabout <point>
% actual form:   { <labelorpoint> } cvlit <length> [ <point> ] cvx aabout <point>
/ldiagaabout
{
  /centre exch def
  /extra exch def
  /circum exch def

  /ZXCTR [ centre ] cvx def
  /ZFCTR [ circum (CTR) ldiagdolabel ] cvx def
  /ZAREF ZFCTR ZXCTR ldiagangleto def
  /ZAMIN 0 dg def
  /ZPMIN [ circum (CTR) ldiagdolabel ZAREF ZAMIN sub
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMIN sub ldiagatangle
	 ldiagpadd ] cvx def

  /ZAMAX 90 dg def
  /ZPMAX [ circum (CTR) ldiagdolabel ZAREF ZAMAX sub
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMAX sub ldiagatangle
	 ldiagpadd ] cvx def

  1 1 20
  { /xval exch def
    /ZAMID ZAMIN ZAMAX add 0.5 mul def
    /ZPMID [ circum (CTR) ldiagdolabel ZAREF ZAMID sub
	   circum (CIRCUM) ldiagdolabel ldiagpadd
	   0 0 extra ZAREF ZAMID sub ldiagatangle
	   ldiagpadd ] cvx def
    ZPMID ZXCTR ldiagdistance ZFCTR ZXCTR ldiagdistance gt
    {
      /ZAMAX [ ZAMID ] cvx def
      /ZPMAX [ ZPMID ] cvx def
    }
    {
      /ZAMIN [ ZAMID ] cvx def
      /ZPMIN [ ZPMID ] cvx def
    } ifelse
  } for
  ZPMID
} def

% implement cabout function
% logical form:  <circum> <extra> <centre> cabout <point>
% actual form:   { <labelorpoint> } cvlit <length> [ <point> ] cvx cabout <point>
/ldiagcabout
{
  /centre exch def
  /extra exch def
  /circum exch def

  /ZXCTR [ centre ] cvx def
  /ZFCTR [ circum (CTR) ldiagdolabel ] cvx def
  /ZAREF ZFCTR ZXCTR ldiagangleto def
  /ZAMIN 0 dg def
  /ZPMIN [ circum (CTR) ldiagdolabel ZAREF ZAMIN add
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMIN add ldiagatangle
	 ldiagpadd ] cvx def

  /ZAMAX 90 dg def
  /ZPMAX [ circum (CTR) ldiagdolabel ZAREF ZAMAX add
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMAX add ldiagatangle
	 ldiagpadd ] cvx def

  1 1 20
  { /xval exch def
    /ZAMID ZAMIN ZAMAX add 0.5 mul def
    /ZPMID [ circum (CTR) ldiagdolabel ZAREF ZAMID add
	   circum (CIRCUM) ldiagdolabel ldiagpadd
	   0 0 extra ZAREF ZAMID add ldiagatangle
	   ldiagpadd ] cvx def
    ZPMID ZXCTR ldiagdistance ZFCTR ZXCTR ldiagdistance gt
    {
      /ZAMAX [ ZAMID ] cvx def
      /ZPMAX [ ZPMID ] cvx def
    }
    {
      /ZAMIN [ ZAMID ] cvx def
      /ZPMIN [ ZPMID ] cvx def
    } ifelse
  } for
  ZPMID
} def

% fromarrowlength toarrowlength { from } { to } xindent zindent ldiaglinepath -
/ldiaglinepath
{
  % (entering ldiaglinepath) 0 ldiagdebugprint
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagangleto
  /FROM@ANGLE ldiagangledef 
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  FROM@ANGLE /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg sub to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TO@ANGLE 180 dg sub ldiagatangle ldiagpadd /TO ldiagpointdef

  FROM 0.5 ldiagpmul TO 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  FROM@ANGLE /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  0 0 ZINDENT FROM@ANGLE ldiagatangle TO ldiagpsub /LTO ldiagpointdef
  FROM@ANGLE /LTO@ANGLE ldiagangledef

  direct { FROM TO } { FROM LFROM LMID LTO TO } ifelse

  % (leaving ldiaglinepath) 0 ldiagdebugprint
} def

% fromarrowlength toarrowlength { from } { to } xindent zindent pathgap ldiagdoublelinepath -
/ldiagdoublelinepath
{
  % (entering ldiagdoublelinepath) 0 ldiagdebugprint
  /pathgap exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagangleto
  /FROM@ANGLE ldiagangledef 
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  FROM@ANGLE /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg sub to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TO@ANGLE 180 dg sub ldiagatangle ldiagpadd /TO ldiagpointdef

  FROM 0.5 ldiagpmul TO 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  FROM@ANGLE /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  0 0 ZINDENT FROM@ANGLE ldiagatangle TO ldiagpsub /LTO ldiagpointdef
  FROM@ANGLE /LTO@ANGLE ldiagangledef

  direct {
    FROM pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    TO   pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    []
    FROM pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    TO   pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
  }
  {
    FROM  pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LFROM pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LMID  pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LTO   pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    TO    pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    []
    FROM  pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LFROM pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LMID  pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LTO   pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    TO    pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
  } ifelse

  % (leaving ldiagdoublelinepath) 0 ldiagdebugprint
} def

% fromarrowlen toarrowlen { from } { to } xindent zindent bias ldiagacurvepath -
/ldiagacurvepath
{
  % (entering ldiagacurvepath) 0 ldiagdebugprint
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  %/B1 bias 0.02 ft ldiagmax def
  %/B2 from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagdistance 0.5 mul def
  %/BIAS B1 B2 ldiagmin def
  /BIAS bias 0.02 ft ldiagmax def
  /XMID [ from (CTR) ldiagdolabel 0.5 ldiagpmul
	  to   (CTR) ldiagdolabel 0.5 ldiagpmul ldiagpadd ] cvx def
  /XTOP [ XMID 0 0 BIAS from (CTR) ldiagdolabel to (CTR) ldiagdolabel
	  ldiagangleto 90 dg sub ldiagatangle ldiagpadd ] cvx def
  /CTR [ from (CTR) ldiagdolabel XTOP ldiaglinebetween
	 to   (CTR) ldiagdolabel XTOP ldiaglinebetween
	 ldiaglineintersect ] cvx def

  from fromarrowlength [ CTR ] cvx ldiagaabout /FROM ldiagpointdef
  from (CTR) ldiagdolabel FROM ldiagdistance 0 gt
  { from (CTR) ldiagdolabel FROM ldiagangleto
  }
  { CTR FROM ldiagangleto 90 dg add
  } ifelse /FROM@ANGLE ldiagangledef

  to toarrowlength [ CTR ] cvx ldiagcabout /TO ldiagpointdef
  TO to (CTR) ldiagdolabel ldiagdistance 0 gt
  { TO to (CTR) ldiagdolabel ldiagangleto
  }
  { CTR TO ldiagangleto 90 dg add
  } ifelse /TO@ANGLE ldiagangledef

  /RADIUS CTR FROM ldiagdistance def
  CTR 0 0 RADIUS CTR FROM ldiagangleto 360 dg CTR TO ldiagangleto
  add CTR FROM ldiagangleto sub cvi 360 mod 0.5 mul add
  ldiagatangle ldiagpadd /LMID ldiagpointdef
  CTR LMID ldiagangleto 90 dg add /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  CTR 0 0 RADIUS CTR FROM 0 0 XINDENT FROM@ANGLE ldiagatangle
  ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LFROM ldiagpointdef
  CTR LFROM ldiagangleto 90 dg add /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  CTR 0 0 RADIUS CTR TO 0 0 ZINDENT TO@ANGLE 180 dg add
  ldiagatangle ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LTO ldiagpointdef
  CTR LTO ldiagangleto 90 dg add /LTO@ANGLE ldiagangledef

  direct
  { FROM [CTR] TO }
  { FROM [CTR] LFROM [CTR] LMID [CTR] LTO [CTR] TO }
  ifelse

  % (leaving ldiagacurvepath) 0 ldiagdebugprint
} def

% fromarrowlen toarrowlen { from } { to } xindent zindent bias ldiagccurvepath -
/ldiagccurvepath
{
  % (entering ldiagccurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  %/B1 bias 0.02 ft ldiagmax def
  %/B2 from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagdistance 0.5 mul def
  %/BIAS B1 B2 ldiagmin def
  /BIAS bias 0.02 ft ldiagmax def
  /XMID [ from (CTR) ldiagdolabel 0.5 ldiagpmul
	to (CTR) ldiagdolabel 0.5 ldiagpmul ldiagpadd ] cvx def
  /XTOP [ XMID 0 0 BIAS from (CTR) ldiagdolabel to (CTR) ldiagdolabel
	ldiagangleto 90 dg add ldiagatangle ldiagpadd ] cvx def
  /CTR [ from (CTR) ldiagdolabel XTOP ldiaglinebetween
         to (CTR) ldiagdolabel XTOP ldiaglinebetween ldiaglineintersect ] cvx def

  from fromarrowlength [ CTR ] cvx ldiagcabout /FROM ldiagpointdef
  from (CTR) ldiagdolabel FROM ldiagdistance 0 gt
  { from (CTR) ldiagdolabel FROM ldiagangleto }
  { CTR FROM ldiagangleto 90 dg sub }
  ifelse /FROM@ANGLE ldiagangledef

  to toarrowlength [ CTR ] cvx ldiagaabout /TO ldiagpointdef
  TO to (CTR) ldiagdolabel ldiagdistance 0 gt
  { TO to (CTR) ldiagdolabel ldiagangleto }
  { CTR TO ldiagangleto 90 dg sub }
  ifelse /TO@ANGLE ldiagangledef

  /RADIUS [ CTR FROM ldiagdistance ] cvx def
  CTR 0 0 RADIUS CTR TO ldiagangleto 360 dg CTR FROM ldiagangleto add
  CTR TO ldiagangleto sub cvi 360 cvi mod 2 div add ldiagatangle
  ldiagpadd /LMID ldiagpointdef
  CTR LMID ldiagangleto 90 dg sub /LMID@ANGLE ldiagangledef

  /XINDENT [ xindent FROM LMID ldiagdistance ldiagmin ] cvx def
  CTR 0 0 RADIUS CTR FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd
  ldiagangleto ldiagatangle ldiagpadd /LFROM ldiagpointdef
  CTR LFROM ldiagangleto 90 dg sub /LFROM@ANGLE ldiagangledef

  /ZINDENT [ zindent TO LMID ldiagdistance ldiagmin ] cvx def
  CTR 0 0 RADIUS CTR TO 0 0 ZINDENT TO@ANGLE 180 dg add ldiagatangle
  ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LTO ldiagpointdef
  CTR LTO ldiagangleto 90 dg sub /LTO@ANGLE ldiagangledef

  direct
  { FROM [CTR clockwise] TO }
  { FROM [CTR clockwise] LFROM [CTR clockwise]
  LMID [CTR clockwise] LTO [CTR clockwise] TO }
  ifelse
  % (leaving ldiagccurvepath) 0 ldiagdebugprint
} def


% farr tarr { from } { to } xindent zindent [frompt] [topt] ldiagbezierpath -
/ldiagbezierpath
{
  % (entering ldiagbezierpath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  cvx /topt exch def
  cvx /frompt exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel frompt ldiagangleto /FROM@ANGLE ldiagangledef
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel
  ldiagpadd 0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  topt to (CTR) ldiagdolabel ldiagangleto /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg add to (CIRCUM) ldiagdolabel
  ldiagpadd 0 0 toarrowlength TO@ANGLE 180 dg add ldiagatangle ldiagpadd
  /TO ldiagpointdef

  FROM 0 0 xindent FROM@ANGLE ldiagatangle ldiagpadd
  /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  TO 0 0 zindent TO@ANGLE 180 dg add ldiagatangle ldiagpadd
  /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  FROM TO ldiagpadd frompt ldiagpadd topt ldiagpadd 0.25 ldiagpmul
  /LMID ldiagpointdef

  FROM [frompt topt] TO

  % (leaving ldiagbezierpath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent ldiagvhlinepath -
/ldiagvhlinepath
{
  % (entering ldiagvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /XINDENT [ xindent FDIST ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST ldiagmin ] cvx def
  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  CTR /LMID ldiagpointdef
  0 0 1 ft FANG 180 dg add ldiagatangle
  0 0 1 ft TANG 180 dg add ldiagatangle
  ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM LMID LTO TO

  % (leaving ldiagvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent radius ldiagvhcurvepath -
/ldiagvhcurvepath
{
  % (entering ldiagvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /RADIUS [ radius FDIST TDIST ldiagmin ldiagmin ] cvx def
  /XINDENT [ xindent FDIST RADIUS sub ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST RADIUS sub ldiagmin ] cvx def

  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  /FCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd ] cvx def
  /TCTR [ CTR 0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  /XCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd
              0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  XCTR 0 0 RADIUS XCTR CTR ldiagangleto ldiagatangle ldiagpadd
  /LMID ldiagpointdef
  FCTR TCTR ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM FCTR
  {[XCTR clockwise]} {} {} {} {} {[XCTR]} {[XCTR clockwise]} {[XCTR]}
  FCTR TCTR ldiagangleto ldiagquadcase
  TCTR LTO TO

  % (leaving ldiagvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent ldiaghvlinepath -
/ldiaghvlinepath
{
  % (entering ldiaghvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ to (CTR) ldiagdolabel pop from (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /XINDENT [ xindent FDIST ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST ldiagmin ] cvx def

  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  CTR /LMID ldiagpointdef
  0 0 1 ft FANG 180 dg add ldiagatangle
  0 0 1 ft TANG 180 dg add ldiagatangle ldiagangleto
  /LMID@ANGLE ldiagangledef

  FROM LFROM LMID LTO TO

  % (leaving ldiaghvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent radius ldiaghvcurvepath -
/ldiaghvcurvepath
{
  % (entering ldiaghvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ to (CTR) ldiagdolabel pop from (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /RADIUS [ radius FDIST TDIST ldiagmin ldiagmin ] cvx def
  /XINDENT [ xindent FDIST RADIUS sub ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST RADIUS sub ldiagmin ] cvx def
  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  /FCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd ] cvx def
  /TCTR [ CTR 0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  /XCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd
	      0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  XCTR 0 0 RADIUS XCTR CTR ldiagangleto ldiagatangle ldiagpadd
  /LMID ldiagpointdef
  FCTR TCTR ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM FCTR
  {[XCTR]} {} {} {} {} {[XCTR clockwise]} {[XCTR]} {[XCTR clockwise]}
  FCTR TCTR ldiagangleto ldiagquadcase
  TCTR LTO TO

  % (leaving ldiaghvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiaglvrlinepath -
/ldiaglvrlinepath
{
  % (entering ldiaglvrlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 180 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 180 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  180 dg /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel 180 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 180 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  0 dg /TO@ANGLE ldiagangledef

  /XLEFT [ FROM pop TO pop ldiagmin bias sub ] cvx def
  XLEFT FROM exch pop /P1 ldiagpointdef
  XLEFT TO exch pop /P2 ldiagpointdef
  /VERT [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 180 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 0 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef

  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef

  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  XINDENT 0 FROM ldiagpsub /LFROM ldiagpointdef
  180 dg /LFROM@ANGLE ldiagangledef
  ZINDENT 0 TO ldiagpsub /LTO ldiagpointdef
  0 dg /LTO@ANGLE ldiagangledef

  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiaglvrlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias radius ldiaglvrcurvepath -
/ldiaglvrcurvepath
{
  % (entering ldiaglvrcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 180 dg from (CIRCUM) ldiagdolabel ldiagpadd 0 0
  fromarrowlength 180 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  180 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 180 dg to (CIRCUM) ldiagdolabel ldiagpadd 0 0
  toarrowlength 180 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  0 dg /TO@ANGLE ldiagangledef
  /XLEFT [ FROM pop TO pop ldiagmin bias sub ] cvx def
  /XP1 [ XLEFT FROM exch pop ] cvx def
  /XP2 [ XLEFT TO exch pop ] cvx def
  /VERT [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  XINDENT 0 FROM ldiagpsub /LFROM ldiagpointdef
  180 dg /LFROM@ANGLE ldiagangledef
  ZINDENT 0 TO ldiagpsub /LTO ldiagpointdef
  0 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {  } { [XP1CTR] P1 [XP1CTR] } {  } { [XP1CTR clockwise] P1 [XP1CTR clockwise] }
  {  } {  } {  } {  } VERT round ldiagquadcase
  XP1POST LMID XP2PRE
  {  } { [XP2CTR] P2 [XP2CTR] } {  } { [XP2CTR clockwise] P2 [XP2CTR clockwise] }
  {  } {  } {  } {  } VERT round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiaglvrcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiagrvllinepath -
/ldiagrvllinepath
{
  % (entering ldiagrvllinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 0 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 0 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  0 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 0 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 0 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  180 dg /TO@ANGLE ldiagangledef
  /XRIGHT [ FROM pop TO pop ldiagmax bias add ] cvx def
  XRIGHT FROM exch pop /P1 ldiagpointdef
  XRIGHT TO exch pop /P2 ldiagpointdef
  /VERT [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 0 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 180 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM XINDENT 0 ldiagpadd /LFROM ldiagpointdef
  0 dg /LFROM@ANGLE ldiagangledef
  TO ZINDENT 0 ldiagpadd /LTO ldiagpointdef
  180 dg /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiagrvllinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent bias radius ldiagrvlcurvepath -
/ldiagrvlcurvepath
{
  % (entering ldiagrvlcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 0 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 0 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  0 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 0 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 0 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  180 dg /TO@ANGLE ldiagangledef
  /XRIGHT [ FROM pop TO pop ldiagmax bias add ] cvx def
  /XP1 [ XRIGHT FROM exch pop ] cvx def
  /XP2 [ XRIGHT TO exch pop ] cvx def
  /VERT [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM XINDENT 0 ldiagpadd /LFROM ldiagpointdef
  0 dg /LFROM@ANGLE ldiagangledef
  TO ZINDENT 0 ldiagpadd /LTO ldiagpointdef
  180 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 0.5 mul ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {} {[XP1CTR clockwise] P1 [XP1CTR clockwise]} {} {[XP1CTR] P1 [XP1CTR]}
  {} {} {} {} VERT round ldiagquadcase
  XP1POST LMID XP2PRE
  {} {[XP2CTR clockwise] P2 [XP2CTR clockwise]} {} {[XP2CTR] P2 [XP2CTR]}
  {} {} {} {} VERT round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiagrvlcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent hfrac hbias ldiaghvhlinepath -
/ldiaghvhlinepath % still to do
{
  % (entering ldiaghvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 0 dg } { 180 dg } { 180 dg } { 0 dg }
  { 0 dg } { 0 dg } { 180 dg } { 180 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg add ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM pop TO pop sub abs hfrac mul hbias add ] cvx def
  FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  P1 pop TO exch pop /P2 ldiagpointdef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  P1 P2 ldiagangleto /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiaghvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent hfrac hbias radius ldiaghvhcurvepath -
/ldiaghvhcurvepath % still to do
{
  % (entering ldiaghvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 0 dg } { 180 dg } { 180 dg } { 0 dg }
  { 0 dg } { 0 dg } { 180 dg } { 180 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg add ] cvx def

  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef

  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM pop TO pop sub abs hfrac mul hbias add ] cvx def
  /XP1 [ FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2 [ XP1 pop TO exch pop ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  /VERT [ XP1 XP2 ldiagangleto round ] cvx def
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS TODIRN ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ 0 0 RADIUS VERT ldiagatangle XP2POST ldiagpsub ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  VERT FRDIRN sub 90 eq
  { /P1GO [ anticlockwise ] cvx def /P2GO [ clockwise ] cvx def }
  { /P1GO [ clockwise ] cvx def /P2GO [ anticlockwise ] cvx def }
  ifelse
  FROM LFROM
  XP1PRE [XP1CTR P1GO] P1 [XP1CTR P1GO] XP1POST
  LMID
  XP2PRE [XP2CTR P2GO] P2 [XP2CTR P2GO] XP2POST
  LTO TO

  % (leaving ldiaghvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent hfrac hbias ldiagvhvlinepath -
/ldiagvhvlinepath % still to do
{
  % (entering ldiagvhvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 90 dg } { 270 dg } { 270 dg } { 0 dg }
  { 90 dg } { 270 dg } { 270 dg } { 90 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg sub ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM exch pop TO exch pop sub abs hfrac mul hbias ft add ] cvx def
  FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  TO pop P1 exch pop /P2 ldiagpointdef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  P1 P2 ldiagangleto /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiagvhvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent hfrac hbias radius ldiagvhvcurvepath -
/ldiagvhvcurvepath % still to do
{
  % (entering ldiagvhvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 90 dg } { 270 dg } { 270 dg } { 0 dg }
  { 90 dg } { 270 dg } { 270 dg } { 90 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg sub ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM exch pop TO exch pop sub abs hfrac mul hbias add ] cvx def
  /XP1 [ FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2 [ TO pop XP1 exch pop ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  /VERT [ XP1 XP2 ldiagangleto round ] cvx def
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS TODIRN ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ 0 0 RADIUS VERT ldiagatangle XP2POST ldiagpsub ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FRDIRN VERT sub 90 eq
  { /P1GO [ clockwise ] cvx def /P2GO [ anticlockwise ] cvx def }
  { /P1GO [ anticlockwise ] cvx def /P2GO [ clockwise ] cvx def }
  ifelse
  FROM LFROM
  XP1PRE [XP1CTR P1GO] P1 [XP1CTR P1GO] XP1POST
  LMID
  XP2PRE [XP2CTR P2GO] P2 [XP2CTR P2GO] XP2POST
  LTO TO


  % (leaving ldiagvhvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias ldiagdwraplinepath -
/ldiagdwraplinepath
{
  % (entering ldiagdwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop
  lt { 180 dg } { 0 dg } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd 0 0
  fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  DIRN 180 dg eq { 225 dg } { -45 dg } ifelse /P1@ANGLE ldiagangledef
  TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd
  /P4 ldiagpointdef
  DIRN 180 dg eq { 135 dg } { 45 dg } ifelse /P4@ANGLE ldiagangledef
  /YC [ from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmin bias 0 ldiagmax sub ] cvx def
  P1 pop YC /P2 ldiagpointdef
  P4@ANGLE 180 dg sub /P2@ANGLE ldiagangledef
  P4 pop YC /P3 ldiagpointdef
  P1@ANGLE 180 dg sub /P3@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  /ZINDENT [ zindent TO P4 ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  P2 0.5 ldiagpmul P3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  FROM P1 P2 P3 P4 TO

  % (leaving ldiagdwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias radius
% ldiagdwrapcurvepath -
/ldiagdwrapcurvepath
{
  % (entering ldiagdwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  /CLOCK [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { anticlockwise } { clockwise } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  /XP1 [ FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd ] cvx def
  /XP4 [ TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd ] cvx def
  /YC [ from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmin bias 0 ldiagmax sub ] cvx def
  /XP2 [ XP1 pop YC ] cvx def
  /XP3 [ XP4 pop YC ] cvx def
  /RP1 [ radius XP1 FROM ldiagdistance XP1 XP2 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RP1 XP1 FROM ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RP1 XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1CTR P1 ldiagangleto DIRN add 90 dg sub /P1@ANGLE ldiagangledef
  /RP2 [ radius XP1 XP2 ldiagdistance 2 div XP2 XP3 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP2PRE [ XP2 0 0 RP2 XP2 XP1 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2POST [ XP2 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RP2 XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2CTR P2 ldiagangleto DIRN add 90 dg sub /P2@ANGLE ldiagangledef
  /RP3 [ radius XP2 XP3 ldiagdistance 2 div XP3 XP4 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP3PRE [ XP3 0 0 RP3 XP3 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3POST [ XP3 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3CTR [ XP3PRE 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP3CTR 0 0 RP3 XP3CTR XP3 ldiagangleto ldiagatangle ldiagpadd /P3 ldiagpointdef
  XP3CTR P3 ldiagangleto DIRN add 90 dg sub /P3@ANGLE ldiagangledef
  /RP4 [ radius XP4 XP3 ldiagdistance 2 div XP4 TO ldiagdistance
  ldiagmin ldiagmin ] cvx def
  /XP4PRE [ XP4 0 0 RP4 XP4 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4POST [ XP4 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4CTR [ XP4PRE 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP4CTR 0 0 RP4 XP4CTR XP4 ldiagangleto ldiagatangle ldiagpadd /P4 ldiagpointdef
  XP4CTR P4 ldiagangleto DIRN add 90 dg sub /P4@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1PRE ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  XP2 0.5 ldiagpmul XP3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  /ZINDENT [ zindent TO XP4POST ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  FROM LFROM
  XP1PRE [XP1CTR CLOCK] XP1POST
  XP2PRE [XP2CTR CLOCK] XP2POST
  LMID
  XP3PRE [XP3CTR CLOCK] XP3POST
  XP4PRE [XP4CTR CLOCK] XP4POST
  LTO TO

  % (leaving ldiagdwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias ldiaguwraplinepath -
/ldiaguwraplinepath
{
  % (entering ldiaguwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  DIRN 180 dg eq { 135 dg } { 45 dg } ifelse /P1@ANGLE ldiagangledef
  TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd
  /P4 ldiagpointdef
  DIRN 180 dg eq { 225 dg } { -45 dg } ifelse /P4@ANGLE ldiagangledef
  /YC [ from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmax bias 0 ldiagmax add ] cvx def
  P1 pop YC /P2 ldiagpointdef
  P4@ANGLE 180 dg sub /P2@ANGLE ldiagangledef
  P4 pop YC /P3 ldiagpointdef
  P1@ANGLE 180 dg sub /P3@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  /ZINDENT [ zindent TO P4 ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  P2 0.5 ldiagpmul P3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  FROM P1 P2 P3 P4 TO

  % (leaving ldiaguwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias radius
% ldiaguwrapcurvepath -
/ldiaguwrapcurvepath
{
  % (entering ldiaguwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  /CLOCK [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { clockwise } { anticlockwise } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  /XP1 [ FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd ] cvx def
  /XP4 [ TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd ] cvx def
  /YC [ from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmax bias 0 ldiagmax add ] cvx def
  /XP2 [ XP1 pop YC ] cvx def
  /XP3 [ XP4 pop YC ] cvx def
  /RP1 [ radius XP1 FROM ldiagdistance XP1 XP2 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RP1 XP1 FROM ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RP1 XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1CTR P1 ldiagangleto DIRN add 90 dg add /P1@ANGLE ldiagangledef
  /RP2 [ radius XP1 XP2 ldiagdistance 2 div XP2 XP3 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP2PRE [ XP2 0 0 RP2 XP2 XP1 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2POST [ XP2 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RP2 XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2CTR P2 ldiagangleto DIRN add 90 dg add /P2@ANGLE ldiagangledef
  /RP3 [ radius XP2 XP3 ldiagdistance 2 div XP3 XP4 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP3PRE [ XP3 0 0 RP3 XP3 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3POST [ XP3 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3CTR [ XP3PRE 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP3CTR 0 0 RP3 XP3CTR XP3 ldiagangleto ldiagatangle ldiagpadd /P3 ldiagpointdef
  XP3CTR P3 ldiagangleto DIRN add 90 dg add /P3@ANGLE ldiagangledef
  /RP4 [ radius XP4 XP3 ldiagdistance 2 div XP4 TO ldiagdistance
  ldiagmin ldiagmin ] cvx def
  /XP4PRE [ XP4 0 0 RP4 XP4 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4POST [ XP4 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4CTR [ XP4PRE 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP4CTR 0 0 RP4 XP4CTR XP4 ldiagangleto ldiagatangle ldiagpadd /P4 ldiagpointdef
  XP4CTR P4 ldiagangleto DIRN add 90 dg add /P4@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1PRE ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  XP2 0.5 ldiagpmul XP3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  /ZINDENT [ zindent TO XP4POST ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  FROM LFROM
  XP1PRE [XP1CTR CLOCK] XP1POST
  XP2PRE [XP2CTR CLOCK] XP2POST
  LMID
  XP3PRE [XP3CTR CLOCK] XP3POST
  XP4PRE [XP4CTR CLOCK] XP4POST
  LTO TO

  % (leaving ldiaguwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% shape and labels of the @SolidArrowHead symbol
% - ldiagsolidarrowhead -
/ldiagsolidarrowhead
{
  0 0 xsize ysize 0.5 mul 0 ysize
} def

% shape and labels of the @OpenArrowHead symbol
% <pathwidth> ldiagopenarrowhead -
/ldiagopenarrowhead
{
  /pathwidth exch def
  /PSW [ 0 0 ] cvx def
  /PNW [ 0 ysize ] cvx def
  /PE  [ xsize ysize 0.5 mul ] cvx def
  /REL [ 0 0 pathwidth PE PNW ldiagangleto 90 add ldiagatangle ] cvx def
  /PNA [ 0 ysize 0.5 mul pathwidth 0.5 mul add ] cvx def
  /PSA [ 0 ysize 0.5 mul pathwidth 0.5 mul sub ] cvx def
  /PNI [ PNA PNA xsize 0 ldiagpadd PNW REL ldiagpadd
	 PE REL ldiagpadd ldiaglineintersect ] cvx def
  /PSI [ 0 pathwidth PNI ldiagpsub ] cvx def

  PSW PE PNW PNI PNA PSA PSI PSW
} def

% shape and labels of the @HalfOpenArrowHead symbol
% <pathwidth> ldiaghalfopenarrowhead -
/ldiaghalfopenarrowhead
{
  /pathwidth exch def
  0 0
  xsize ysize 0.5 mul
  0 ysize
  xsize 0.3 mul ysize 0.5 mul pathwidth 0.5 mul add
  0             ysize 0.5 mul pathwidth 0.5 mul add
  0             ysize 0.5 mul pathwidth 0.5 mul sub
  xsize 0.3 mul ysize 0.5 mul pathwidth 0.5 mul sub
  0 0
} def

% shape and labels of the @SolidCurvedArrowHead symbol
% - ldiagsolidcurvedarrowhead -
/ldiagsolidcurvedarrowhead
{
  0 0
  [0 0 xsize ysize 0.5 mul ldiaglinebetween
   xsize 0 xsize ysize ldiaglineintersect clockwise]
  xsize ysize 0.5 mul
  [xsize ysize 0.5 mul 0 ysize ldiaglinebetween
   xsize 0 xsize ysize ldiaglineintersect clockwise]
  0 ysize
} def

% shape and labels of the @OpenCurvedArrowHead symbol
% <pathwidth> ldiagopencurvedarrowhead -
/ldiagopencurvedarrowhead
{
  /pathwidth exch def
  /LR [ 0 0 xsize ysize 0.5 mul ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /UR [ xsize ysize 0.5 mul 0 ysize ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /PW2 [ pathwidth 0.5 mul ] cvx def
  /UMID [
      0 ysize 0.5 mul PW2 add
      xsize ysize 0.5 mul PW2 add
      0 ysize 0 0 1 ft UR 0 ysize ldiagangleto 90 add ldiagatangle
      ldiagpadd 0 ysize ldiaglineintersect
      ] cvx def
  /LMID [ 0 pathwidth UMID ldiagpsub ] cvx def
  0 0
  [LR clockwise]
  xsize ysize 0.5 mul
  [UR clockwise]
  0 ysize
  UMID
  0 ysize 0.5 mul PW2 add
  0 ysize 0.5 mul PW2 sub
  LMID
  0 0
} def

% shape and labels of the @HalfOpenCurvedArrowHead symbol
% <pathwidth> ldiaghalfopencurvedarrowhead -
/ldiaghalfopencurvedarrowhead
{
  /pathwidth exch def
  /LR [ 0 0 xsize ysize 0.5 mul ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /UR [ xsize ysize 0.5 mul 0 ysize ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /BR [ 0 0 LR 0 ysize UR ldiaglineintersect ] cvx def
  /BRAD [ 0 0 BR ldiagdistance ] cvx def
  /PW2 [ pathwidth 0.5 mul ] cvx def
  /XDIST [ BRAD dup mul PW2 dup mul sub sqrt ] cvx def
  /UMID [ BR XDIST PW2 ldiagpadd ] cvx def
  /LMID [ BR XDIST 0 PW2 sub ldiagpadd ] cvx def
  0 0
  [LR clockwise]
  xsize ysize 0.5 mul
  [UR clockwise]
  0 ysize
  [BR clockwise]
  UMID
  0 ysize 0.5 mul PW2 add
  0 ysize 0.5 mul PW2 sub
  LMID
  [BR clockwise]
  0 0
} def

end
%%EndResource

%%BeginResource: procset LoutBasicSetup
% @PrependGraphic file /usr/share/lout/include/bsf.lpg

% width height linethickness louteuro -
% draw a Euro symbol of this width and height with this line thickness
/louteuro {
  20 dict begin
    /eurothick exch def
    /euroheight exch def
    /eurowidth exch def
    /eurostrokewidth euroheight 0.8 mul def
    /eurostep eurothick 60 cos mul 60 sin div def
    /eurotheta 40 def

    % llx lly width thickness louteurobox -
    % draw angled box starting at (llx, lly) with given width and thickness
    /louteurobox
    {
      /euroboxthick exch def
      /euroboxwidth exch def
      newpath moveto euroboxwidth 0 rlineto
      eurostep euroboxthick rlineto
      euroboxwidth neg 0 rlineto closepath fill
    } def

    % lower cross stroke
    0 euroheight 2 div eurothick 1.5 mul sub
    eurostrokewidth eurothick louteurobox

    % upper cross stroke
    0 euroheight 2 div eurothick 0.5 mul add
    eurostrokewidth eurostep 2 mul add eurothick louteurobox

    % circular part
    /eurohctr eurowidth euroheight 2 div eurotheta cos mul sub def
    /eurovctr euroheight 2 div def
    newpath
    eurohctr eurovctr eurovctr eurotheta 350 eurotheta sub arc
    eurohctr eurovctr eurovctr eurothick sub 365 eurotheta sub eurotheta arcn
    closepath fill
  end
} def

% path for @FullWidthRule symbol
/LoutRule
{ 0 0 moveto xsize 0 lineto
} def

% path for @Box symbol
/LoutBox
{ 0 0 moveto xsize 0 lineto
  xsize ysize lineto 0 ysize lineto
  closepath
} def

% path for @CurveBox symbol
/LoutCurveBox
{ xmark 0 moveto
  xsize xmark sub xmark xmark 270 360 arc
  xsize xmark sub ysize xmark sub xmark 0 90 arc
  xmark ysize xmark sub xmark 90 180 arc
  xmark xmark xmark 180 270 arc
  closepath
} def

% path for @ShadowBox symbol
/LoutShadowBox
{ xmark 2 mul 0 moveto xsize 0 lineto
  xsize ysize xmark 2 mul sub lineto
  xsize xmark sub ysize xmark 2 mul sub lineto
  xsize xmark sub xmark lineto
  xmark 2 mul xmark lineto
  closepath
} def

% set up dictionary containing margin note data: parity LoutMargSet -
/LoutMargSet
{ /LoutMargDict 12 dict def
  LoutMargDict begin
    /parity exch def
    /matr matrix currentmatrix def
    /rightx xsize def
    /lefty ysize def   % highest allowable point for top of next left note
    /righty ysize def  % highest allowable point for top of next right note
    /max { 2 copy gt { pop } { exch pop } ifelse } def
    /min { 2 copy lt { pop } { exch pop } ifelse } def
  end
} def

%translate coordinate system for marginal notes:  type LoutMargShift -
% where type 0 is left margin, 1 is right margin, 2 is outer, 3 is inner
/LoutMargShift
{ LoutMargDict begin

    % y coordinate of top of note, in margin coords, before vertical adjust
    0 ysize transform matr itransform exch pop

    % decide whether left or right margin based on type and parity
    exch [ 0 1 parity 1 parity sub ] exch get 0 eq
    {
      % left margin: adjust top of note downwards if overlaps previous note
      lefty min

      % bottom of note is new lefty position and also translate position
      ysize sub dup /lefty exch def

      % want right edge of note at coordinate zero
      xsize neg exch
    }
    {
      % right margin: adjust top of note downwards if overlaps previous note
      righty min

      % bottom of note is new righty position and also translate position
      ysize sub dup /righty exch def

      % want left edge of note at coordinate rightx
      rightx exch
    } ifelse

    % stack now contains coord of bottom left corner in margin coordinates
    matr setmatrix translate
  end
} def

% create LoutPageDict with left, right, foot, top for @Place symbol users
/LoutPageSet
{
  /LoutPageDict 5 dict def
  LoutPageDict begin
    /matr matrix currentmatrix def
    /left 0 def
    /right xsize def
    /foot 0 def
    /top ysize def
  end

} def

%%EndResource

%%EndProlog

%%BeginSetup
%%BeginResource: encoding vec2
/vec2 [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/quotesinglbase /quotedblbase /ellipsis /OE /oe /quotedblleft /quotedblright /fi
/fl /endash /emdash /bullet /dagger /daggerdbl /florin /fraction
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
%%EndResource

/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
%%EndSetup

%%Page: ? 1
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Times-Italic
%%+ font Symbol
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
%%IncludeResource: font Symbol
/fnt2 { /Symbol LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup

gsave
0 0 translate
240 fnt1 0.0 0.0 0.0 setrgbcolor 11113 4989 0 4989 240 288 60 LoutGraphic
gsave

200 ldiagbegin
grestore
11113 4989 0 4989 240 288 60 0 0 LoutGr2
grestore

gsave xsize ysize lgraphdict begin /ysize exch def /xsize exch def
/alldata [  ] def
0 [  ] 0 alldata 0 14 0
1.3 cm false false 0.5 ft xset
0 [  ] 1 alldata -1 3 0
0.7 cm false false 0.5 ft yset
norset
rundata nonestyle
grestore
1815 641 0 641 240 288 60 0 -641 LoutGr2
7 3 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1671 497 835 249 240 288 60 72 72 LoutGr2
(N1) ldiagpushtagdict
grestore
1671 497 835 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2 320 189(\()m 240 fnt3
404 197(t)m 240 fnt2 486 189(,)m 593(1)s 699(\))s
849(=)s 1062(\()s 240 fnt3 1146 197(t)m 240 fnt2
1228 189(,)m 1335(0)s 1461(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1179 641 0 641 240 288 60 0 -641 LoutGr2
3 2 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1035 497 517 249 240 288 60 72 72 LoutGr2
(N2) ldiagpushtagdict
grestore
1035 497 517 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m
240 fnt2 320 189(\()m 240 fnt3 404 197(t)m 240 fnt2
486 189(,)m 593(1)s 699(0)s 825(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1159 640 0 640 240 288 60 0 -640 LoutGr2
11 2 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1015 496 507 248 240 288 60 72 72 LoutGr2
(N3) ldiagpushtagdict
grestore
1015 496 507 248 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 197(V)m 240 fnt2 320 189(\()m 240 fnt3 404 197(t)m
240 fnt2 486 189(,)m 593(1)s 699(1)s 805(\))s
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1305 641 0 641 240 288 60 0 -641 LoutGr2
1 1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1161 497 580 249 240 288 60 72 72 LoutGr2
(N4) ldiagpushtagdict
grestore
1161 497 580 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2 320 189(\()m 240 fnt3
404 197(t)m 240 fnt2 486 189(,)m 593(1)s 699(0)s
825(0)s 951(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1285 641 0 641 240 288 60 0 -641 LoutGr2
5 1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1141 497 570 249 240 288 60 72 72 LoutGr2
(N5) ldiagpushtagdict
grestore
1141 497 570 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2
320 189(\()m 240 fnt3 404 197(t)m 240 fnt2 486 189(,)m
593(1)s 699(0)s 825(1)s 931(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1285 641 0 641 240 288 60 0 -641 LoutGr2
9 1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1141 497 570 249 240 288 60 72 72 LoutGr2
(N6) ldiagpushtagdict
grestore
1141 497 570 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 197(V)m 240 fnt2 320 189(\()m 240 fnt3 404 197(t)m
240 fnt2 486 189(,)m 593(1)s 699(1)s 805(0)s
931(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1265 640 0 640 240 288 60 0 -640 LoutGr2
13 1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1121 496 560 248 240 288 60 72 72 LoutGr2
(N7) ldiagpushtagdict
grestore
1121 496 560 248 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2 320 189(\()m
240 fnt3 404 197(t)m 240 fnt2 486 189(,)m 593(1)s
699(1)s 805(1)s 911(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1431 641 0 641 240 288 60 0 -641 LoutGr2
0 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1287 497 643 249 240 288 60 72 72 LoutGr2
(N8) ldiagpushtagdict
grestore
1287 497 643 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m
240 fnt2 320 189(\()m 240 fnt3 404 197(t)m 240 fnt2
486 189(,)m 593(1)s 699(0)s 825(0)s 951(0)s
1077(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1411 641 0 641 240 288 60 0 -641 LoutGr2
2 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1267 497 633 249 240 288 60 72 72 LoutGr2
(N9) ldiagpushtagdict
grestore
1267 497 633 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2 320 189(\()m
240 fnt3 404 197(t)m 240 fnt2 486 189(,)m 593(1)s
699(0)s 825(0)s 951(1)s 1057(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1411 641 0 641 240 288 60 0 -641 LoutGr2
4 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1267 497 633 249 240 288 60 72 72 LoutGr2
(N10) ldiagpushtagdict
grestore
1267 497 633 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 197(V)m 240 fnt2 320 189(\()m 240 fnt3 404 197(t)m
240 fnt2 486 189(,)m 593(1)s 699(0)s 825(1)s
931(0)s 1057(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1391 641 0 641 240 288 60 0 -641 LoutGr2
6 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1247 497 623 249 240 288 60 72 72 LoutGr2
(N11) ldiagpushtagdict
grestore
1247 497 623 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2
320 189(\()m 240 fnt3 404 197(t)m 240 fnt2 486 189(,)m
593(1)s 699(0)s 825(1)s 931(1)s 1037(\))s
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1411 641 0 641 240 288 60 0 -641 LoutGr2
8 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1267 497 633 249 240 288 60 72 72 LoutGr2
(N12) ldiagpushtagdict
grestore
1267 497 633 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2 320 189(\()m 240 fnt3
404 197(t)m 240 fnt2 486 189(,)m 593(1)s 699(1)s
805(0)s 931(0)s 1057(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1391 641 0 641 240 288 60 0 -641 LoutGr2
10 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1247 497 623 249 240 288 60 72 72 LoutGr2
(N13) ldiagpushtagdict
grestore
1247 497 623 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m
240 fnt2 320 189(\()m 240 fnt3 404 197(t)m 240 fnt2
486 189(,)m 593(1)s 699(1)s 805(0)s 931(1)s
1037(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1391 641 0 641 240 288 60 0 -641 LoutGr2
12 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1247 497 623 249 240 288 60 72 72 LoutGr2
(N14) ldiagpushtagdict
grestore
1247 497 623 249 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2 320 189(\()m
240 fnt3 404 197(t)m 240 fnt2 486 189(,)m 593(1)s
699(1)s 805(1)s 911(0)s 1037(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1371 640 0 640 240 288 60 0 -640 LoutGr2
14 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1227 496 613 248 240 288 60 72 72 LoutGr2
(N15) ldiagpushtagdict
grestore
1227 496 613 248 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 197(V)m 240 fnt2 320 189(\()m 240 fnt3 404 197(t)m
240 fnt2 486 189(,)m 593(1)s 699(1)s 805(1)s
911(1)s 1017(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1469 644 0 644 240 288 60 0 -644 LoutGr2
0 -1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1325 500 662 250 240 288 60 72 72 LoutGr2
(R0) ldiagpushtagdict
grestore
1325 500 662 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k 240 fnt2
517 189(\()m 240 fnt3 601 197(t)m 683(|)s 240 fnt2
737 189(0)m 863(0)s 989(0)s 1115(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1449 644 0 644 240 288 60 0 -644 LoutGr2
2 -1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1305 500 652 250 240 288 60 72 72 LoutGr2
(R1) ldiagpushtagdict
grestore
1305 500 652 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k
240 fnt2 517 189(\()m 240 fnt3 601 197(t)m 683(|)s
240 fnt2 737 189(0)m 863(0)s 989(1)s 1095(\))s
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1449 644 0 644 240 288 60 0 -644 LoutGr2
4 -1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1305 500 652 250 240 288 60 72 72 LoutGr2
(R2) ldiagpushtagdict
grestore
1305 500 652 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k 240 fnt2 517 189(\()m 240 fnt3
601 197(t)m 683(|)s 240 fnt2 737 189(0)m 863(1)s
969(0)s 1095(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1429 644 0 644 240 288 60 0 -644 LoutGr2
6 -1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1285 500 642 250 240 288 60 72 72 LoutGr2
(R3) ldiagpushtagdict
grestore
1285 500 642 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k 240 fnt2
517 189(\()m 240 fnt3 601 197(t)m 683(|)s 240 fnt2
737 189(0)m 863(1)s 969(1)s 1075(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1449 644 0 644 240 288 60 0 -644 LoutGr2
8 -1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1305 500 652 250 240 288 60 72 72 LoutGr2
(R4) ldiagpushtagdict
grestore
1305 500 652 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k
240 fnt2 517 189(\()m 240 fnt3 601 197(t)m 683(|)s
240 fnt2 737 189(1)m 843(0)s 969(0)s 1095(\))s
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1429 644 0 644 240 288 60 0 -644 LoutGr2
10 -1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1285 500 642 250 240 288 60 72 72 LoutGr2
(R5) ldiagpushtagdict
grestore
1285 500 642 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k 240 fnt2 517 189(\()m 240 fnt3
601 197(t)m 683(|)s 240 fnt2 737 189(1)m 843(0)s
969(1)s 1075(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1429 644 0 644 240 288 60 0 -644 LoutGr2
12 -1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1285 500 642 250 240 288 60 72 72 LoutGr2
(R6) ldiagpushtagdict
grestore
1285 500 642 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k 240 fnt2
517 189(\()m 240 fnt3 601 197(t)m 683(|)s 240 fnt2
737 189(1)m 843(1)s 949(0)s 1075(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1409 644 0 644 240 288 60 0 -644 LoutGr2
14 -1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1265 500 632 250 240 288 60 72 72 LoutGr2
(R7) ldiagpushtagdict
grestore
1265 500 632 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k
240 fnt2 517 189(\()m 240 fnt3 601 197(t)m 683(|)s
240 fnt2 737 189(1)m 843(1)s 949(1)s 1055(\))s
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
end

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N1 } { N2 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
296 347 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
296 347 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
296 347 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(A)m 167 fnt2 183 48(1)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
296 347 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
296 347 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
296 347 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3
48 140(A)m 167 fnt2 183 48(1)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N1 } { N3 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
302 343 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
302 343 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
302 343 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(B)m
167 fnt2 189 48(1)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
302 343 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
302 343 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
302 343 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(B)m 167 fnt2
189 48(1)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N2 } { N4 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
383 350 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
383 350 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
383 350 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(A)m 167 fnt2 183 51(1)m
256(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
383 350 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
383 350 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
383 350 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(A)m 167 fnt2 183 51(1)m
256(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N2 } { N5 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
389 346 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
389 346 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
389 346 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(B)m 167 fnt2 189 51(1)m
262(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
389 346 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
389 346 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
389 346 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(B)m 167 fnt2 189 51(1)m
262(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N3 } { N6 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
369 347 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
369 347 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
369 347 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(A)m 167 fnt2 183 48(1)m
256(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
369 347 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
369 347 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
369 347 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(A)m 167 fnt2 183 48(1)m
256(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N3 } { N7 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
375 343 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
375 343 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
375 343 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(B)m 167 fnt2 189 48(1)m
262(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
375 343 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
375 343 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
375 343 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(B)m 167 fnt2 189 48(1)m
262(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N4 } { N8 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
470 350 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
470 350 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
470 350 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(A)m 167 fnt2 183 51(1)m
256(0)s 343(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
470 350 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
470 350 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
470 350 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(A)m 167 fnt2
183 51(1)m 256(0)s 343(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N4 } { N9 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
476 346 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
476 346 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
476 346 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(B)m
167 fnt2 189 51(1)m 262(0)s 349(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
476 346 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
476 346 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
476 346 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3
48 143(B)m 167 fnt2 189 51(1)m 262(0)s 349(0)s
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N5 } { N10 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
456 350 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
456 350 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
456 350 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(A)m 167 fnt2 183 51(1)m 256(0)s
343(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
456 350 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
456 350 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
456 350 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(A)m 167 fnt2 183 51(1)m
256(0)s 343(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N5 } { N11 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
462 346 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
462 346 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
462 346 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(B)m 167 fnt2
189 51(1)m 262(0)s 349(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
462 346 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
462 346 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
462 346 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(B)m
167 fnt2 189 51(1)m 262(0)s 349(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N6 } { N12 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
456 350 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
456 350 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
456 350 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3
48 143(A)m 167 fnt2 183 51(1)m 256(1)s 329(0)s
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
456 350 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
456 350 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
456 350 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(A)m 167 fnt2 183 51(1)m 256(1)s
329(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N6 } { N13 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
462 346 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
462 346 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
462 346 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(B)m 167 fnt2 189 51(1)m
262(1)s 335(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
462 346 48 195 240 288 60 -48 -195 LoutGr2
(LABEL) ldiagpushtagdict
grestore
462 346 48 195 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
462 346 48 195 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 143(B)m 167 fnt2
189 51(1)m 262(1)s 335(0)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N7 } { N14 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
442 347 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
442 347 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
442 347 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(A)m
167 fnt2 183 48(1)m 256(1)s 329(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
442 347 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
442 347 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
442 347 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3
48 140(A)m 167 fnt2 183 48(1)m 256(1)s 329(1)s
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N7 } { N15 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
448 343 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
448 343 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
448 343 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(B)m 167 fnt2 189 48(1)m 262(1)s
335(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
448 343 48 192 240 288 60 -48 -192 LoutGr2
(LABEL) ldiagpushtagdict
grestore
448 343 48 192 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
448 343 48 192 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 140(B)m 167 fnt2 189 48(1)m
262(1)s 335(1)s ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N8 } { R0 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3
48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N9 } { R1 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N10 } { R2 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N11 } { R3 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3
48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N12 } { R4 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N13 } { R5 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3
48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N14 } { R6 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
11113 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ N15 } { R7 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
11113 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
11113 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
ldiagend

grestore

pgsave restore
showpage

%%Trailer
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Italic
%%+ font Symbol
%%DocumentSuppliedResources: procset LoutStartUp
%%+  procset LoutGraphPrependGraphic
%%+  procset LoutTabPrependGraphic
%%+  procset LoutDiagPrependGraphic
%%+  procset LoutBasicSetup
%%+ encoding vec2
%%Pages: 1
%%EOF

%%EndDocument
 @endspecial 523 2346 a
 currentpoint currentpoint translate 1 0.62312 div 1 0.62312 div scale
neg exch neg exch translate
 523 2346 a 175 x Fl(Fig.)14 b(1.)23
b Fn(Computation)i(of)f(an)g(en)n(tire)g(output)f(tree)g(of)i(8)f(w)n
(ords)h(with)f Fg(h)d Fn(=)g(3.)k(In)e(the)g(full)i(cipher,)523
2612 y Fg(h)d Fn(=)f(16)26 b(and)f(the)h(complete)g(output)f(is)h
(built)f(from)i(2)2110 2580 y Fo(32)2201 2612 y Fn(suc)n(h)e(trees.)648
2892 y Fr(The)36 b(notation)g(w)n(e)h(use)f(to)h(sp)r(ecify)g(this)g
(function)g(precisely)f(is)g(somewhat)g(di\013er-)523
2992 y(en)n(t)d(from)g(that)g(giv)n(en)f(in)h([5],)g(but)g(is)g(con)n
(v)n(enien)n(t)f(for)g(our)h(purp)r(oses;)f(w)n(e)g(treat)h
Fi(z)j Fr(as)c(a)523 3091 y(parameter,)j(rather)h(than)g(as)g(a)g(w)n
(ord)g(of)g(state.)h(The)f(cipher)h(is)f(parameterised)f(on)h
Fi(n)523 3191 y Fr(and)h Fi(h)p Fr(,)h(where)e Fi(n)i
Fr(is)f(divisible)g(b)n(y)h(4)f(and)g Fi(n)i Fj(\025)g
Fi(h)p Fr(;)e(LEVIA)-7 b(THAN)38 b(sets)g Fi(n)h Fr(=)g(32)d(and)523
3291 y Fi(h)29 b Fr(=)g(16.)i Fj(j)g Fr(denotes)g(catenation)g(of)g
(bit)h(strings,)p 2126 3245 48 4 v 30 w Fi(x)g Fr(bit)n(wise)f
(complemen)n(tation)g(of)g Fi(x)p Fr(,)h Fj(\010)523
3406 y Fr(the)c(X)n(OR)g(op)r(eration)e(\(addition)i(in)g
Fi(Z)1771 3376 y Fp(n)1765 3427 y Fq(2)1844 3406 y Fr(or)f
Fi(Z)2009 3363 y Fp(n=)p Fq(4)2003 3428 y(2)2149 3406
y Fr(as)g(appropriate\),)f(and)i(+)f(addition)h(in)523
3506 y(the)h(group)e Fi(Z)960 3518 y Fq(2)993 3502 y
Ff(n)1037 3506 y Fr(,)i(treating)e(the)i(\014rst)f(bit)h(of)f(the)g
(bitstring)g(as)g(the)h(most)f(signi\014can)n(t)f(and)523
3606 y(padding)34 b(bitstrings)f(shorter)g(than)h Fi(n)f
Fr(bits)i(with)f(zero)r(es)f(on)g(the)i(left.)f(W)-7
b(e)34 b(sp)r(ecify)h(the)523 3705 y(forest)27 b(structure)g
(illustrated)g(in)h(Figure)f(1)g(recursiv)n(ely:)1036
3871 y(Lev)c(:)g Fj(f)p Fr(0)p Fi(;)14 b Fr(1)p Fj(g)1443
3836 y Fp(n)p Fq(+)p Fp(h)1599 3871 y Fj(7!)24 b(f)p
Fr(0)p Fi(;)14 b Fr(1)p Fj(g)1911 3836 y Fp(n)1284 3995
y Fr(Lev)o(\()p Fi(t)p Fj(j)p Fi(z)t Fr(\))33 b(=)f Fi(C)6
b Fr(\()p Fi(V)19 b Fr(\()p Fi(t;)14 b Fr(1)p Fj(j)p
Fi(z)t Fr(\)\))166 b(\()p Fj(j)p Fi(t)p Fj(j)23 b Fr(=)g
Fi(n;)14 b Fj(j)p Fi(z)t Fj(j)22 b Fr(=)h Fi(h)p Fr(\))1336
4120 y Fi(V)c Fr(\()p Fi(t;)14 b Fr(1\))33 b(=)f(\()p
Fi(t;)14 b Fr(0\))1271 4244 y Fi(V)19 b Fr(\()p Fi(t;)14
b(z)t Fj(j)p Fr(0\))32 b(=)g Fi(A)1768 4256 y Fp(z)1806
4244 y Fr(\()p Fi(V)19 b Fr(\()p Fi(t;)14 b(z)t Fr(\)\))1271
4369 y Fi(V)19 b Fr(\()p Fi(t;)14 b(z)t Fj(j)p Fr(1\))32
b(=)g Fi(B)1769 4381 y Fp(z)1807 4369 y Fr(\()p Fi(V)19
b Fr(\()p Fi(t;)14 b(z)t Fr(\)\))648 4534 y(The)25 b(in)n(ternal)g
(state)g(that)h(functions)g Fi(A)p Fr(,)g Fi(B)t Fr(,)g(and)f
Fi(C)32 b Fr(op)r(erate)25 b(on)g(\(and)h(the)g(functions)523
4634 y Fi(D)r Fr(,)32 b Fi(F)12 b Fr(,)33 b Fi(G)f Fr(used)g(to)g
(de\014ne)h(them\))g(is)f(a)f(2-tuple)h(of)g(bitstrings)g(\()p
Fi(x;)14 b(y)s Fr(\);)33 b(w)n(e)f(treat)f(this)i(as)523
4733 y(distinct)27 b(from)f(the)g(catenated)g(bitstring)g
Fi(x)p Fj(j)p Fi(y)s Fr(.)h(The)f(functions)g Fi(L)p
Fr(,)g Fi(R)q Fr(,)g(and)g Fi(S)31 b Fr(op)r(erate)25
b(on)523 4833 y(b)n(ytes)34 b(within)g(a)g(w)n(ord:)e
Fi(L)i Fr(and)f Fi(R)i Fr(are)e(rotates,)g(while)h Fi(S)k
Fr(pro)n(vides)33 b(nonlinearit)n(y)f(with)523 4933 y(the)37
b(k)n(ey-dep)r(enden)n(t)g(p)r(erm)n(utations)f Fi(S)1804
4945 y Fq(0)p Fp(:::)o Fq(3)1970 4933 y Fr(whic)n(h)h(map)g
Fj(f)p Fr(0)p Fi(;)14 b Fr(1)p Fj(g)2616 4903 y Fp(n=)p
Fq(4)2763 4933 y Fr(on)n(to)36 b(itself.)h(These)p eop
%%Page: 3 3
3 2 bop 1756 241 a Fn(Bias)27 b(in)f(the)f(LEVIA)-6 b(THAN)23
b(Stream)j(Cipher)238 b(3)523 457 y Fr(p)r(erm)n(utations)33
b(are)g(generated)f(b)n(y)i(the)g(k)n(ey)f(sc)n(hedule,)g(whic)n(h)h(w)
n(e)f(omit.)h(Note)g(that)g Fi(F)523 556 y Fr(and)29
b Fi(G)h Fr(op)r(erate)f(on)g(eac)n(h)g(w)n(ord)f(of)i(the)g(tuple)g
(indep)r(enden)n(tly;)g(mixing)f(is)h(pro)n(vided)e(b)n(y)523
656 y Fi(D)r Fr(.)1050 919 y Fi(C)6 b Fr(\()p Fi(x;)14
b(y)s Fr(\))24 b(=)f Fi(x)c Fj(\010)f Fi(y)1207 1043
y(A)1269 1055 y Fp(z)1331 1043 y Fr(=)23 b Fi(F)30 b
Fj(\016)18 b Fi(D)1631 1055 y Fp(z)1207 1168 y Fi(B)1270
1180 y Fp(z)1331 1168 y Fr(=)23 b Fi(G)c Fj(\016)f Fi(D)1632
1180 y Fp(z)1008 1292 y Fi(D)1077 1304 y Fp(z)1115 1292
y Fr(\()p Fi(x;)c(y)s Fr(\))24 b(=)f(\(2)p Fi(x)c Fr(+)f
Fi(y)j Fr(+)d(2)p Fi(z)t(;)c(x)j Fr(+)h Fi(y)j Fr(+)d
Fi(z)t Fr(\))1050 1417 y Fi(F)12 b Fr(\()p Fi(x;)i(y)s
Fr(\))24 b(=)f(\()p Fi(L)p Fr(\()p Fi(S)5 b Fr(\()p Fi(L)p
Fr(\()p Fi(S)g Fr(\()p Fi(x)p Fr(\)\)\)\))p Fi(;)14 b(S)5
b Fr(\()p Fi(R)q Fr(\()p Fi(S)g Fr(\()p Fi(R)q Fr(\()p
Fi(y)s Fr(\)\)\)\)\))1050 1541 y Fi(G)p Fr(\()p Fi(x;)14
b(y)s Fr(\))24 b(=)f(\()p Fi(S)5 b Fr(\()p Fi(R)q Fr(\()p
Fi(S)g Fr(\()p Fi(R)q Fr(\()p 1819 1496 48 4 v Fi(x)q
Fr(\)\)\)\))p Fi(;)14 b(L)p Fr(\()p Fi(S)5 b Fr(\()p
Fi(L)p Fr(\()p Fi(S)g Fr(\()p Fi(y)s Fr(\)\)\)\)\))779
1666 y Fi(L)p Fr(\()p Fi(x)915 1678 y Fq(3)952 1666 y
Fj(j)p Fi(x)1022 1678 y Fq(2)1060 1666 y Fj(j)p Fi(x)1130
1678 y Fq(1)1168 1666 y Fj(j)p Fi(x)1238 1678 y Fq(0)1276
1666 y Fr(\))23 b(=)g Fi(x)1466 1678 y Fq(2)1504 1666
y Fj(j)p Fi(x)1574 1678 y Fq(1)1611 1666 y Fj(j)p Fi(x)1681
1678 y Fq(0)1719 1666 y Fj(j)p Fi(x)1789 1678 y Fq(3)1993
1666 y Fr(\()p Fj(j)p Fi(x)2095 1678 y Fq(3)2133 1666
y Fj(j)g Fr(=)g Fj(j)p Fi(x)2337 1678 y Fq(2)2374 1666
y Fj(j)h Fr(=)e Fj(j)p Fi(x)2578 1678 y Fq(1)2616 1666
y Fj(j)h Fr(=)g Fj(j)p Fi(x)2820 1678 y Fq(0)2857 1666
y Fj(j)h Fr(=)e Fi(n=)p Fr(4\))772 1790 y Fi(R)q Fr(\()p
Fi(x)915 1802 y Fq(3)952 1790 y Fj(j)p Fi(x)1022 1802
y Fq(2)1060 1790 y Fj(j)p Fi(x)1130 1802 y Fq(1)1168
1790 y Fj(j)p Fi(x)1238 1802 y Fq(0)1276 1790 y Fr(\))h(=)g
Fi(x)1466 1802 y Fq(0)1504 1790 y Fj(j)p Fi(x)1574 1802
y Fq(3)1611 1790 y Fj(j)p Fi(x)1681 1802 y Fq(2)1719
1790 y Fj(j)p Fi(x)1789 1802 y Fq(1)780 1915 y Fi(S)5
b Fr(\()p Fi(x)915 1927 y Fq(3)952 1915 y Fj(j)p Fi(x)1022
1927 y Fq(2)1060 1915 y Fj(j)p Fi(x)1130 1927 y Fq(1)1168
1915 y Fj(j)p Fi(x)1238 1927 y Fq(0)1276 1915 y Fr(\))23
b(=)g Fi(x)1466 1927 y Fq(3)1522 1915 y Fj(\010)18 b
Fi(S)1656 1927 y Fq(3)1693 1915 y Fr(\()p Fi(x)1772 1927
y Fq(0)1810 1915 y Fr(\))p Fj(j)p Fi(x)1912 1927 y Fq(2)1969
1915 y Fj(\010)g Fi(S)2103 1927 y Fq(2)2140 1915 y Fr(\()p
Fi(x)2219 1927 y Fq(0)2257 1915 y Fr(\))p Fj(j)p Fi(x)2359
1927 y Fq(1)2415 1915 y Fj(\010)g Fi(S)2549 1927 y Fq(1)2586
1915 y Fr(\()p Fi(x)2665 1927 y Fq(0)2703 1915 y Fr(\))p
Fj(j)p Fi(S)2809 1927 y Fq(0)2847 1915 y Fr(\()p Fi(x)2926
1927 y Fq(0)2964 1915 y Fr(\))648 2078 y([5])i(giv)n(es)g(a)h
(functionally)g(di\013eren)n(t)g(de\014nition)h(of)f
Fi(D)i Fr(\()p Fi(D)2431 2090 y Fp(z)2470 2078 y Fr(\()p
Fi(x;)14 b(y)s Fr(\))23 b(=)g(\(2)p Fi(x)6 b Fr(+)g Fi(y)i
Fr(+)e Fi(z)t(;)14 b(x)6 b Fr(+)g Fi(y)i Fr(+)523 2178
y Fi(z)t Fr(\)\);)28 b(the)f(one)h(giv)n(en)e(here)h(is)h(that)f(in)n
(tended)h(b)n(y)g(the)f(authors)g([4])g(and)g(used)h(to)f(generate)523
2277 y(the)h(test)g(v)n(ectors,)e(though)h(the)h(di\013erence)g(is)f
(not)h(relev)-5 b(an)n(t)27 b(for)g(our)g(analysis.)648
2377 y(W)-7 b(e)38 b(presen)n(t)g(t)n(w)n(o)f(biases)h(in)g(the)h
(LEVIA)-7 b(THAN)39 b(k)n(eystream)e(that)h(distinguish)h(it)523
2477 y(from)32 b(a)h(random)e(bit)j(string.)e(W)-7 b(e)33
b(kno)n(w)f(of)h(no)f(other)g(attac)n(ks)g(against)f(LEVIA)-7
b(THAN)523 2576 y(more)27 b(e\016cien)n(t)h(than)f(brute)h(force.)523
2826 y Fk(2)112 b(PRF-PRF)37 b(A)m(ttac)m(k)523 3010
y Fr(Both)c(attac)n(ks)e(fo)r(cus)i(on)g(consecutiv)n(e)f(pairs)f(of)i
(outputs)g(generated)f(b)n(y)h(LevP)n(air)m(\()p Fi(i)p
Fr(\))f(=)523 3109 y(\(Lev\()p Fi(i)p Fj(j)p Fr(0\))p
Fi(;)14 b Fr(Lev)o(\()p Fi(i)p Fj(j)p Fr(1\)\).)31 b(Clearly)-7
b(,)29 b(LevP)n(air)g(generates)g(the)i(same)f(2)2648
3079 y Fq(50)2718 3109 y Fr(-b)n(yte)g(k)n(eystream)f(as)523
3209 y(Lev,)c(so)g(a)g(distinguisher)f(for)h(one)g(is)g(a)g
(distinguisher)g(for)g(the)g(other.)g(Suc)n(h)g(pairs)g(are)f(in-)523
3309 y(teresting)f(b)r(ecause)h(they)g(are)f(the)h(most)g(closely)f
(related)g(outputs)h(in)h(the)f(tree)f(structure;)523
3408 y([5])k(refers)f(to)h(attac)n(ks)f(using)h(suc)n(h)g(pairs)f(as)h
(\\up-and-do)n(wn)e(attac)n(ks".)h(W)-7 b(e)28 b(can)e(expand)523
3508 y(the)i(form)n(ula)f(for)g(LevP)n(air)e(as)i(follo)n(ws:)847
3671 y(LevP)n(air)n(\()p Fi(t)p Fj(j)p Fi(z)t Fr(\))c(=)g(\(Lev)o(\()p
Fi(t)p Fj(j)p Fi(z)t Fj(j)p Fr(0\))p Fi(;)14 b Fr(Lev)o(\()p
Fi(t)p Fj(j)p Fi(z)t Fj(j)p Fr(1\)\))1314 3796 y(=)23
b(\()p Fi(C)6 b Fr(\()p Fi(V)19 b Fr(\()p Fi(t;)14 b
Fr(1)p Fj(j)p Fi(z)t Fj(j)p Fr(0\)\))p Fi(;)g(C)6 b Fr(\()p
Fi(V)19 b Fr(\()p Fi(t;)14 b Fr(1)p Fj(j)p Fi(z)t Fj(j)p
Fr(1\)\)\))1314 3920 y(=)23 b(\()p Fi(C)6 b Fr(\()p Fi(F)12
b Fr(\()p Fi(D)1697 3935 y Fq(1)p Fe(j)p Fp(z)1788 3920
y Fr(\()p Fi(V)20 b Fr(\()p Fi(t;)14 b Fr(1)p Fj(j)p
Fi(z)t Fr(\)\)\)\))p Fi(;)g(C)6 b Fr(\()p Fi(G)p Fr(\()p
Fi(D)2523 3935 y Fq(1)p Fe(j)p Fp(z)2615 3920 y Fr(\()p
Fi(V)19 b Fr(\()p Fi(t;)14 b Fr(1)p Fj(j)p Fi(z)t Fr(\)\)\)\)\))648
4083 y(F)-7 b(rom)33 b(this)h(w)n(e)f(de\014ne)h(functions)g(LevAb)r(o)
n(v)n(e)f(whic)n(h)h(generates)e(the)i(last)g(common)523
4183 y(ancestor)29 b(of)i(suc)n(h)g(an)f(output)i(pair)e(as)g
(illustrated)h(in)g(Figure)f(2,)h(and)f(P)n(airCom)f(whic)n(h)523
4283 y(generates)d(the)i(output)g(pair)f(from)g(the)h(ancestor:)1073
4446 y(LevAb)r(o)n(v)n(e)o(\()p Fi(t)p Fj(j)p Fi(z)t
Fr(\))23 b(=)g Fi(D)1774 4461 y Fq(1)p Fe(j)p Fp(z)1865
4446 y Fr(\()p Fi(V)c Fr(\()p Fi(t;)14 b Fr(1)p Fj(j)p
Fi(z)t Fr(\)\))165 b(\()p Fj(j)p Fi(z)t Fj(j)23 b Fr(=)g
Fi(h)18 b Fj(\000)g Fr(1\))1079 4570 y(P)n(airCom)n(\()p
Fi(x;)c(y)s Fr(\))24 b(=)f(\()p Fi(C)6 b Fr(\()p Fi(F)12
b Fr(\()p Fi(x;)i(y)s Fr(\)\))p Fi(;)g(C)6 b Fr(\()p
Fi(G)p Fr(\()p Fi(x;)14 b(y)s Fr(\)\)\))523 4733 y(from)36
b(whic)n(h)g(w)n(e)g(can)g(see)g(LevP)n(air)g(=)h(P)n(airCom)22
b Fj(\016)i Fr(LevAb)r(o)n(v)n(e)35 b(as)h(stated.)g(W)-7
b(e)37 b(mo)r(del)523 4833 y(LevAb)r(o)n(v)n(e)j(as)g(a)g(random)g
(function)i(throughout,)e(and)h(fo)r(cus)f(on)h(the)g(prop)r(erties)f
(of)523 4933 y(P)n(airCom.)p eop
%%Page: 4 4
4 3 bop 523 241 a Fn(4)237 b(P)n(aul)27 b(Cro)n(wley)f(and)g(Stefan)g
(Luc)n(ks)1077 1791 y
 currentpoint currentpoint translate 0.75256 0.75256 scale neg exch
neg exch translate
 1077 1791 a @beginspecial 0 @llx
0 @lly 283 @urx 226 @ury 2830 @rwi @setspecial
%%BeginDocument: abc.epsi
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Basser Lout Version 3.25 (December 2001)
%%CreationDate: Wed Mar 13 08:34:11 2002
%%DocumentData: Binary
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: Plain 283 226 0 white ()
%%PageOrder: Ascend
%%LanguageLevel: 2
%%Pages: (atend)
%%BoundingBox: 0 0 283 226
%%EndComments

%%BeginProlog
%%BeginResource: procset LoutStartUp
/save_cp { currentpoint /cp_y exch def /cp_x exch def } def
/restore_cp { cp_x cp_y moveto } def
/outline { gsave 1 1 1 setrgbcolor dup show save_cp
  grestore true charpath stroke restore_cp } bind def
/m  { 3 1 roll moveto show } bind def
/mo { 3 1 roll moveto outline } bind def
/s  { exch currentpoint exch pop moveto show } bind def
/so { exch currentpoint exch pop moveto outline } bind def
/k  { exch neg 0 rmoveto show } bind def
/ko { exch neg 0 rmoveto outline } bind def
/r  { exch 0 rmoveto show } bind def
/ro { exch 0 rmoveto outline } bind def
/c  { gsave 3 1 roll rmoveto show grestore } bind def
/co { gsave 3 1 roll rmoveto outline grestore } bind def
/ul { gsave setlinewidth dup 3 1 roll
      moveto lineto stroke grestore } bind def
/in { 1440 mul } def
/cm { 567 mul } def
/pt { 20 mul } def
/em { 120 mul } def
/sp { louts mul } def
/vs { loutv mul } def
/ft { loutf mul } def
/dg {           } def

/LoutGraphic {
  /louts exch def
  /loutv exch def
  /loutf exch def
  /ymark exch def
  /xmark exch def
  /ysize exch def
  /xsize exch def
} def

/LoutGr2 { gsave translate LoutGraphic gsave } def

/LoutFont
{ findfont exch scalefont setfont
} bind def

/LoutRecode {
  { findfont dup length dict begin
    {1 index /FID ne {def} {pop pop} ifelse} forall
    /Encoding exch def
    currentdict end definefont pop
  }
  stopped pop
} bind def

/LoutStartEPSF { % prepare for EPSF inclusion
  userdict begin
    /PreEPSF_state save def
    /dict_stack countdictstack def
    /ops_count count 1 sub def
    /showpage {} def
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    /languagelevel where
    { pop languagelevel
      1 ne
      { false setstrokeadjust false setoverprint
      } if
    } if
} bind def

/LoutEPSFCleanUp { % clean up after EPSF inclusion
    count ops_count sub { pop } repeat
    countdictstack dict_stack sub { end } repeat
    PreEPSF_state restore
  end % userdict
} bind def
%%EndResource

%%BeginResource: procset LoutGraphPrependGraphic
% @PrependGraphic file /usr/share/lout/include/graphf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @Graph (Version 1.0)       %
%                                                                    %
%  Version 1.0 by Jeffrey H. Kingston, December 1993.                %
%  swapxandy added September 2001 by JHK.                            %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

errordict begin
   /handleerror
   {
      {  /Times-Roman findfont 8 pt scalefont setfont
	 0 setgray 4 pt 4 pt moveto
	 $error /errorname get
	 dup lgraphdict exch known
	 { lgraphdict exch get }
	 { 30 string cvs } ifelse
	 show
	 (  Command: ) show
	 $error /command get 30 string cvs show
      } stopped {} if
      showpage stop
   } def
end

/lgraphdict 200 dict def
lgraphdict begin

% error messages
/dictfull (dictfull error) def
/dictstackoverflow (dictstackoverflow error) def
/execstackoverflow (execstackoverflow error:  expression too complex?) def
/limitcheck (limitcheck error:  graph too complex or too large?) def
/syntaxerror (syntaxerror error:  syntax error in text of graph?) def
/typecheck (typecheck error:  syntax error in text of graph?) def
/undefined (undefined error:  unknown or misspelt symbol?) def
/rangecheck (rangecheck error:  undefined expression (e.g. divide by zero)?) def
/VMError (VMError error:  run out of memory?) def

% random number between x and y inclusive: x y dorand num
/dorand { 1 index sub 1 add rand exch mod add } def

% log to given base: base num dolog num
/dolog { ln exch ln div } def

% maximum of two numbers:  <num> <num> max <num>
/max { 2 copy gt { pop } { exch pop } ifelse } def

% add two points:  <point> <point> padd <point>
/padd { exch 3 1 roll add 3 1 roll add exch } def

% subtract first point from second:  <point> <point> psub <point>
/psub { 3 2 roll sub 3 1 roll exch sub exch } def

% distance between two points:  <point> <point> distance <length>
/distance { psub dup mul exch dup mul add sqrt } def

% point at angle and distance:  <point> <length> <angle> atangle <point>
/atangle { 2 copy cos mul 3 1 roll sin mul padd } def

% angle from one point to another:  <point> <point> angle <angle>
/angle { psub 2 copy 0 eq exch 0 eq and {pop} {exch atan} ifelse } def


% set up for line
% - linesetup <length> <dashlength>
/linesetup
{ newpath
  xcurr ycurr trpoint xprev yprev trpoint
  4 copy moveto lineto distance dashlength
} def

% set up for icon-avoiding line
% - ilinesetup <length> <dashlength>
/ilinesetup
{ newpath
  xprev yprev trpoint xcurr ycurr trpoint 4 copy
  4 copy angle symbolsize 1.5 mul exch 4 2 roll pop pop atangle
  6 2 roll 4 2 roll
  4 copy angle symbolsize 1.5 mul exch 4 2 roll pop pop atangle 
  4 copy moveto lineto distance dashlength
} def


% stroke a solid line:  <length> <dashlength> solid -
/solid
{ pop pop [] 0 setdash linewidth setlinewidth stroke
} def
  
% stroke a dashed line:   <length> <dashlength> dashed -
/dashed
{  2 copy 2 mul le 1 index 0 le or
   {  exch pop 1 pt max [ exch dup ] 0 setdash }
   {  dup [ exch 4 2 roll 2 copy div
      1 sub 2 div ceiling dup 4 1 roll
      1 add mul sub exch div ] 0 setdash
   } ifelse linewidth setlinewidth stroke
} def

% stroke a cdashed line:  <length> <dashlength> cdashed -
/cdashed
{  2 copy le 1 index 0 le or
   { exch pop 1 pt max [ exch dup ] dup 0 get 2 div setdash }
   { dup [ 4 2 roll exch 2 copy exch div
     2 div ceiling div 1 index sub
     ] exch 2 div setdash
   } ifelse linewidth setlinewidth stroke
} def

% stroke a dotted line:  <length> <dashlength> dotted -
/dotted
{  2 copy le 1 index 0 le or
   { exch pop 1 pt max [ exch 0 exch ] 0 setdash }
   { 1 index exch div ceiling div 0.99999 mul
     [ 0 3 2 roll ] 0 setdash
   } ifelse gsave 1 setlinecap linewidth setlinewidth stroke grestore newpath
} def

% stroke a noline line:  <length> <dashlength> noline -
/noline
{ pop pop
} def

% stroke a y histogram: - yhisto -
/yhisto
{ xprev yleft trpoint yextra sub moveto
  xprev yprev trpoint lineto
  xcurr yprev trpoint lineto
  xcurr yleft trpoint yextra sub lineto 
  linewidth setlinewidth stroke
} def

% stroke an x histogram: - xhisto -
/xhisto
{ xleft yprev trpoint exch xextra sub exch moveto
  xcurr yprev trpoint lineto
  xcurr ycurr trpoint lineto
  xleft ycurr trpoint exch xextra sub exch lineto 
  linewidth setlinewidth stroke
} def

% stroke a surface y histogram: - surfaceyhisto -
/surfaceyhisto
{ firstpair
  { xprev yleft trpoint yextra sub moveto
    xprev yprev trpoint lineto
  }
  { xprev yprev trpoint moveto
  } ifelse
  xcurr yprev trpoint lineto
  lastpair
  { xcurr yleft trpoint yextra sub lineto 
  }
  { xcurr ycurr trpoint lineto
  } ifelse
  linewidth setlinewidth stroke
} def

% stroke a surface x histogram: - surfacexhisto -
/surfacexhisto
{ firstpair
  { xleft yprev trpoint exch xextra sub exch moveto
  }
  { xprev yprev trpoint moveto
  } ifelse
  xcurr yprev trpoint lineto
  xcurr ycurr trpoint lineto
  lastpair
  { xleft ycurr trpoint exch xextra sub exch lineto 
  } if
  linewidth setlinewidth stroke
} def

% stroke a filled y histogram: - filledyhisto -
/filledyhisto
{
  linewidth setlinewidth
  xprev yleft trpoint exch currentlinewidth 2 div add exch yextra sub moveto
  xprev yprev trpoint exch currentlinewidth 2 div add exch lineto
  xcurr yprev trpoint exch currentlinewidth 2 div sub exch lineto
  xcurr yleft trpoint exch currentlinewidth 2 div sub exch yextra sub lineto 
  closepath fill
} def

% stroke a filled x histogram: - filledxhisto -
/filledxhisto
{
  linewidth setlinewidth
  xleft yprev trpoint currentlinewidth 2 div add exch xextra sub exch moveto
  xcurr yprev trpoint currentlinewidth 2 div add lineto
  xcurr ycurr trpoint currentlinewidth 2 div sub lineto
  xleft ycurr trpoint currentlinewidth 2 div sub exch xextra sub exch lineto 
  closepath fill
} def


% cross: show a small cross
/cross
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg symbolsize neg rmoveto
  symbolsize 2 mul symbolsize 2 mul rlineto
  0 symbolsize -2 mul rmoveto
  symbolsize -2 mul symbolsize 2 mul rlineto
  [] 0 setdash stroke
} def

% plus: show a small plus
/plus
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg 0 rmoveto
  symbolsize 2 mul 0 rlineto
  symbolsize neg symbolsize neg rmoveto
  0 symbolsize 2 mul rlineto
  [] 0 setdash stroke
} def

% square: show a small square
/square
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg symbolsize neg rmoveto
  symbolsize 2 mul 0 rlineto
  0 symbolsize 2 mul rlineto
  symbolsize -2 mul 0 rlineto
  closepath [] 0 setdash stroke
} def

% filledsquare: show a small filled square
/filledsquare
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg symbolsize neg rmoveto
  symbolsize 2 mul 0 rlineto
  0 symbolsize 2 mul rlineto
  symbolsize -2 mul 0 rlineto
  closepath gsave [] 0 setdash stroke grestore fill
} def

% diamond: show a small diamond
/diamond
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg 0 rmoveto
  symbolsize symbolsize neg rlineto
  symbolsize symbolsize rlineto
  symbolsize neg symbolsize rlineto
  closepath [] 0 setdash stroke
} def

% filleddiamond: show a small filled diamond
/filleddiamond
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg 0 rmoveto
  symbolsize symbolsize neg rlineto
  symbolsize symbolsize rlineto
  symbolsize neg symbolsize rlineto
  closepath gsave [] 0 setdash stroke grestore fill
} def

% circle: show a small circle
/circle
{ newpath
  xcurr ycurr trpoint symbolsize 0 360 arc [] 0 setdash stroke
} def

% filledcircle: show a small filled circle
/filledcircle
{ newpath
  xcurr ycurr trpoint symbolsize 0 360 arc gsave [] 0 setdash stroke grestore fill
} def

% triangle: show a small triangle
/triangle
{ newpath
  xcurr ycurr trpoint moveto
  0 symbolsize 1.5 mul rmoveto
  symbolsize neg symbolsize -2.5 mul rlineto
  symbolsize 2 mul 0 rlineto
  closepath [] 0 setdash stroke
} def

% filledtriangle: show a small filled triangle
/filledtriangle
{ newpath
  xcurr ycurr trpoint moveto
  0 symbolsize 1.5 mul rmoveto
  symbolsize neg symbolsize -2.5 mul rlineto
  symbolsize 2 mul 0 rlineto
  closepath gsave [] 0 setdash stroke grestore fill
} def


%plog: like log only with a base, and protected from failing if <= 0
% base x plog res
/plog { dup 0 le { pop pop 0 } { ln exch ln div } ifelse } def

% xtr: transform one x value logarithmically if xlog > 1
% <num> xtr <num>
/xtr
{ xlog 1 gt
  { xlog exch plog
  } if
} def

% ytr: transform one y value logarithmically if ylog > 1
% <num> ytr <num>
/ytr
{ ylog 1 gt
  { ylog exch plog
  } if
} def

% % trpoint: transform (x, y) in graph space into (x', y') in print space
% % x y trpoint x' y'
% /trpoint
% { exch xtr trxmin sub trxmax trxmin sub div xwidth mul xextra add
%   exch ytr trymin sub trymax trymin sub div ywidth mul yextra add
% } def


% trpoint: transform (x, y) in graph space into (x', y') in print space
% x y trpoint x' y'
/trpoint
{ exch xtr xdecr { trxmax exch sub } { trxmin sub } ifelse
  trxmax trxmin sub div xwidth mul xextra add

  exch ytr ydecr { trymax exch sub } { trymin sub } ifelse
  trymax trymin sub div ywidth mul yextra add
} def


% yonly: interpolate x values 1, 2, ... into data
% [ data ] yonly [ newdata ]
/yonly
{ dup /tmp exch def
  length [ exch 1 exch 1 exch
  { dup tmp exch 1 sub get
  } for
  ]
} def

% xonly: interpolate y values 1, 2, ... into data
% [ data ] yonly [ newdata ]
/xonly
{ dup /tmp exch def
  length [ exch 1 exch 1 exch
  { dup tmp exch 1 sub get exch
  } for
  ]
} def

% xandy: no interpolation of x or y values
% [ data ] xandy [ data ]
/xandy {} def

% swapxandy: no interpolation of x or y values
% [ data ] swapxandy [ data ]
/swapxandy
{ dup /tmp exch def
  length [ exch 2 exch 2 exch
  { dup tmp exch 1 sub get exch 2 sub tmp exch get
  } for
  ]
} def


% expstringwidth: calculate width of string containing optional exponent
% <string> expstringwidth <width>
/expstringwidth
{ (^) search
  { exch pop stringwidth pop exch stringwidth pop 0.7 mul add }
  { stringwidth pop }
  ifelse
} def

% expstringshow: show string containing optional exponent
% <string> expstringshow -
/expstringshow
{ (^) search
  { exch pop show 0 0.5 ft rmoveto
    gsave currentfont 0.7 scalefont setfont show grestore
  }
  { show
  }
  ifelse
} def

% concatenate two strings: <string> <string> strconcat <string>
/strconcat
{ 2 copy length exch length add string
  dup 0 4 index putinterval
  dup 3 index length 3 index putinterval
  3 1 roll pop pop
} def

% lgen: generate one label automatically
% num lgen num string
/lgen { dup 20 string cvs } def

% loglgen: generate one logarithmic label (with exponent)
% <base> <exponent> loglgen <string>
/loglgen
{ 20 string cvs exch 20 string cvs
  (^) strconcat exch strconcat
} def


% printxtick: print one x tick
% xpos printxtick -
/printxtick
{ newpath
  yleft trpoint moveto 0 yextra neg rmoveto
  0 xticklength neg rlineto [] 0 setdash stroke
} def

% printxlabel: print one x label
% (xlabel) xpos printxlabel -
/printxlabel
{ yleft trpoint moveto 0 yextra neg rmoveto
  0 xticklength neg rmoveto 0 0.9 ft neg rmoveto
  xlog 1 gt { 0 0.3 ft neg rmoveto } if
  dup expstringwidth -2 div 0 rmoveto expstringshow
} def

% printytick: print one y tick
% ypos printytick -
/printytick
{ newpath
  xleft exch trpoint moveto xextra neg 0 rmoveto
  yticklength neg 0 rlineto [] 0 setdash stroke
} def

% printylabel: print one y label
% (ylabel) ypos printylabel -
/printylabel
{ xleft exch trpoint moveto xextra neg 0 rmoveto
  yticklength neg 0 rmoveto -0.3 ft -0.3 ft rmoveto
  dup expstringwidth neg 0 rmoveto expstringshow
} def

% printrtick: print one r tick
% ypos printrtick -
/printrtick
{ newpath
  xright exch trpoint moveto xextra 0 rmoveto
  rticklength 0 rlineto [] 0 setdash stroke
} def

% printrlabel: print one r label
% (rlabel) ypos printrlabel -
/printrlabel
{ xright exch trpoint moveto xextra 0 rmoveto
  rticklength 0 rmoveto  0.3 ft -0.3 ft rmoveto
  expstringshow
} def

% printticks: print ticks and labels
% /tickproc /labelproc [ tickandlabeldata ] min printticks -
/printticks
{ /prev exch def
  { dup type dup dup /integertype eq exch /realtype eq or
    { pop dup /prev exch def 2 index cvx exec
    }
    { /stringtype eq
      { prev 2 index cvx exec
      }
      { pop
      } ifelse
    } ifelse
  } forall
  pop pop
} def


% printxaxistick: print one x axis tick
% xpos printxaxistick -
/printxaxistick
{ newpath
  yaxis trpoint moveto 0 xticklength -2 div rmoveto
  0 xticklength rlineto [] 0 setdash stroke
} def

% printxaxislabel: print one x axis label
% (xlabel) xpos printxaxislabel -
/printxaxislabel
{ yaxis trpoint moveto
  0 xticklength -2 div rmoveto 0 0.9 ft neg rmoveto
  xlog 1 gt { 0 0.3 ft neg rmoveto } if
  dup expstringwidth -2 div 0 rmoveto expstringshow
} def

% printyaxistick: print one y axis tick
% ypos printyaxistick -
/printyaxistick
{ newpath
  xaxis exch trpoint moveto
  yticklength -2 div 0 rmoveto
  yticklength 0 rlineto [] 0 setdash stroke
} def

% printyaxislabel: print one y axis label
% (ylabel) ypos printyaxislabel -
/printyaxislabel
{ xaxis exch trpoint moveto
  yticklength -2 div 0 rmoveto -0.3 ft -0.3 ft rmoveto
  dup expstringwidth neg 0 rmoveto expstringshow
} def


% <val> minmax -
% perform minv := min(minv, val); maxv := max(maxv, val)
% allowing for the possibility of minv, maxv, val being false (undefined)
/minmax
{ dup false eq
  { pop }
  { minv false eq
    { dup /minv exch def /maxv exch def }
    { dup minv lt
      { /minv exch def }
      { dup maxv gt
	{ /maxv exch def }
	{ pop }
	ifelse
      } ifelse
    } ifelse
  } ifelse
} def

% <ticks> ticksundef <ticks> <bool>
% returns true iff the ticks array is undefined (one false entry)
/ticksundef
{ dup length 1 eq
  { dup 0 get false eq
  }
  { false }
  ifelse
} def

% <number> integral <boolean>
% true if the number has an integral value
/integral { dup round eq } def

% ticksep ticks xory alldata minval maxval axis base ticksandlimits ticks min max base
% ticksandlimits: sort out value of x or y ticks and limits and log base
/ticksandlimits
{ /base exch def
  /minv false def
  /maxv false def

  % min and max of user-supplied minval, maxval, and axis
  minmax minmax minmax

  % min and max of data points
  { 0 get dup dup length 1 sub 3 index exch 2 exch
    { get minmax dup
    } for pop pop
  } forall
  pop dup

  % min and max of tick values
  { dup type /stringtype eq
    { pop } { minmax } ifelse
  } forall

  % fix minv and maxv if undefined (false) or equal
  minv false eq
  { /minv -1 def /maxv 1 def }
  { minv maxv eq
    { minv 0 lt
      { /minv 2 minv mul def /maxv 0 def
      }
      { minv 0 eq
	{ /minv -1 def /maxv 1 def
	}
	{ /minv 0 def /maxv 2 maxv mul def
	} ifelse
      } ifelse
    } if
  } ifelse

  % invent ticks if undefined
  ticksundef
  { pop /ticksep exch def

    % if base is reasonable and minv is positive, logarithmic ticks
    base 1 gt minv 0 gt and
    {
      % get integral log of minv and maxv
      /logminv base minv plog floor   cvi def
      /logmaxv base maxv plog ceiling cvi def

      % if minv close to base, make it 1; reset minv and maxv
      logminv 1 eq logmaxv 4 ge and { /logminv 0 def } if
      /minv base logminv exp def
      /maxv base logmaxv exp def

      % ticks := [ base**logminv, ... , base**logmaxv ]
      [ logminv 1 logmaxv
	{ dup base exch exp
	  exch base exch loglgen
	} for
      ]
    }
    { % non-logarithmic ticks
      {
        % fix tick separation if undefined (0) or too small
	/base 0 def
        /delta maxv minv sub def
        ticksep delta 30 div le
        { /ticksep 10 delta log 1 sub ceiling exp def
	  ticksep delta 2 div ge
	  { /ticksep ticksep 2 div def }
	  { ticksep delta 5 div lt
	    { /ticksep 2 ticksep mul def
	    } if
	  } ifelse
        } if

        % adjust minv and maxv to be multiples of ticksep
        /minv minv ticksep div floor   ticksep mul def
        /maxv maxv ticksep div ceiling ticksep mul def
        /delta maxv minv sub def

        % if minv or maxv near zero, move to zero and redo
        minv ticksep eq
        { /minv 0 def }
        { maxv ticksep neg eq { /maxv 0 def } { exit } ifelse
        } ifelse
      } loop

      % if minv, maxv, and ticksep are all integral, set "makeint" to true
      /makeint minv integral maxv integral ticksep integral and and def

      % ticks := [ minv, minv+ticksep, ... , maxv ]
      [ 0 1 delta ticksep div round
	{ ticksep mul minv add makeint { cvi } if lgen }
	for
      ]
    } ifelse
  }
  { exch pop
  } ifelse
  minv maxv base
} def

% xset: set up all data for x axis, including limits and ticks
% xticksep xticks 0 alldata xmin xmax xlog xextra xdecr xaxis xticklength xset -
/xset
{ /xticklength exch def
  /xaxis exch def
  /xdecr exch def
  /xextra exch def
  xaxis exch ticksandlimits
  /xlog exch def /xmax exch def /xmin exch def /xticks exch def
  /xleft xdecr { xmax } { xmin } ifelse def
  /xright xdecr { xmin } { xmax } ifelse def
  /xwidth xsize xextra 2 mul sub def
  /trxmin xmin xtr def /trxmax xmax xtr def
} def

% yset: set up all data for y axis, including limits and yticks
% yticksep yticks 0 alldata ymin ymax ylog yextra ydecr yaxis yticklength yset -
/yset
{ /yticklength exch def
  /yaxis exch def
  /ydecr exch def
  /yextra exch def
  yaxis exch ticksandlimits
  /ylog exch def /ymax exch def /ymin exch def /yticks exch def
  /yleft ydecr { ymax } { ymin } ifelse def
  /yright ydecr { ymin } { ymax } ifelse def
  /ywidth ysize yextra 2 mul sub def
  /trymin ymin ytr def /trymax ymax ytr def
} def

% rset: set up all data for y axis (again), but including limits and rticks
% rticksep rticks 0 alldata ymin ymax ylog yextra ydecr yaxis rticklength rset -
/rset
{ /rticklength exch def
  /yaxis exch def
  /ydecr exch def
  /yextra exch def
  yaxis exch ticksandlimits
  /ylog exch def /ymax exch def /ymin exch def /rticks exch def
  /yleft ydecr { ymax } { ymin } ifelse def
  /yright ydecr { ymin } { ymax } ifelse def
  /ywidth ysize yextra 2 mul sub def
  /trymin ymin ytr def /trymax ymax ytr def
} def

% norset: set up data for no rticks
% - norset -
/norset
{ /rticklength 0 def
  /rticks [] def
} def

% framestyle: print a frame around the graph
/framestyle
{ 0 0 moveto xsize 0 lineto xsize ysize lineto
  0 ysize lineto closepath stroke
  /printxtick /printxlabel xticks xleft printticks
  /printytick /printylabel yticks ymin printticks
  /printrtick /printrlabel rticks ymin printticks
} def

% nonestyle: print nothing around the graph
/nonestyle
{
} def

% axesstyle: print axes for the graph (unless axis values missing)
/axesstyle
{
  xaxis false eq yaxis false eq or
  { framestyle }
  { xaxis yaxis trpoint dup 0 exch moveto xsize exch lineto
    dup 0 moveto ysize lineto stroke
    /printxaxistick /printxaxislabel xticks xleft printticks
    /printyaxistick /printyaxislabel yticks ymin printticks
  } ifelse
} def

% rundata: run all data sets
/rundata
{ alldata
  { gsave
    dup dup dup dup
    4 get /dopaint exch def
    3 get /initrun exch def
    2 get /pairs exch def
    1 get /points exch def
    0 get /data exch def
    dopaint
    { data length 4 ge
      { initrun
	newpath
	data 0 get ymin trpoint yextra sub moveto
	0 2 data length 2 sub
	{ dup 1 add
	  data exch get /ycurr exch def
	  data exch get /xcurr exch def
	  xcurr ycurr trpoint lineto
	} for
	data dup length 2 sub get ymin trpoint yextra sub lineto
	closepath fill
      } if
    } if
    initrun
    data length 2 ge
    {
      /xcurr data 0 get def
      /ycurr data 1 get def
      points
      data length 4 ge
      { 2 2 data length 2 sub
	{ /xprev xcurr def
          /yprev ycurr def
	  dup dup 2 eq /firstpair exch def
	  data length 2 sub eq /lastpair exch def
	  dup 1 add
          data exch get /ycurr exch def
          data exch get /xcurr exch def
	  pairs
	  points
	} for
      } if
    } if
    grestore
  } forall
} def

end
%%EndResource

%%BeginResource: procset LoutTabPrependGraphic
% @PrependGraphic file /usr/share/lout/include/tabf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                  %
%  PostScript @SysPrependGraphic file for @Tab     %
%                                                  %
%  To assist in avoiding name clashes, the names   %
%  of all these symbols begin with "ltab".         %
%                                                  %
%  Jeffrey H. Kingston                             %
%  24 September 1991                               %
%  22 December 1992                                %
%                                                  %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% linewidth ltabhs -
% horizontal single line
/ltabhs
{  0 0 moveto xsize 0 lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabhsp -
% horizontal single line with projecting ends
/ltabhsp
{  0 0 moveto xsize 0 lineto
   setlinewidth 2 setlinecap stroke
} def

% linewidth ltabhd -
% horizontal double line
/ltabhd
{  dup dup
   0 0 moveto xsize 0 lineto
   0 exch 3 mul moveto xsize exch 3 mul lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabhdb -
% horizontal double line below mark
/ltabhdb
{  dup dup
   0 0 moveto xsize 0 lineto
   0 exch -3 mul moveto xsize exch -3 mul lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabhdnw -
% horizontal double line with northwest corner
/ltabhdnw
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   xsize exch 3 mul moveto
   -3 mul exch 3 mul lineto
   -3 mul 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabhdne -
% horizontal double line with northeast corner
/ltabhdne
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   0 exch 3 mul moveto
   3 mul xsize add exch 3 mul lineto
   3 mul xsize add 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabhdsw -
% horizontal double line with southwest corner
/ltabhdsw
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   xsize exch -3 mul moveto
   -3 mul exch -3 mul lineto
   -3 mul 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabhdse -
% horizontal double line with southeast corner
/ltabhdse
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   0 exch -3 mul moveto
   3 mul xsize add exch -3 mul lineto
   3 mul xsize add 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabvs -
% vertical single line
/ltabvs
{  0 0 moveto 0 ysize lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabvd -
% vertical double line
/ltabvd
{  dup dup
   0 0 moveto 0 ysize lineto
   -3 mul 0 moveto -3 mul ysize lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabvdr -
% vertical double line to right of mark
/ltabvdr
{  dup dup
   0 0 moveto 0 ysize lineto
   3 mul 0 moveto 3 mul ysize lineto
   setlinewidth 0 setlinecap stroke
} def
%%EndResource

%%BeginResource: procset LoutDiagPrependGraphic
% @PrependGraphic file /usr/share/lout/include/diagf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @Diag Jeffrey H. Kingston  %
%  Version 2.0 (includes CIRCUM label)                September 1996 %
%                                                                    %
%  To assist in avoiding name clashes, the names of all symbols      %
%  defined here begin with "ldiag".  However, this is not feasible   %
%  with user-defined labels and some labels used by users.           %
%                                                                    %
%  <point>      is two numbers, a point.                             %
%  <length>     is one number, a length                              %
%  <angle>      is one number, an angle in degrees                   %
%  <dashlength> is one number, the preferred length of a dash        %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

errordict begin
   /handleerror
   {
      {  /Times-Roman findfont 8 pt scalefont setfont
	 0 setgray 4 pt 4 pt moveto
	 $error /errorname get
	 dup ldiagdict exch known
	 { ldiagdict exch get }
	 { 100 string cvs } ifelse
	 show
	 (  Command: ) show
	 $error /command get 100 string cvs show
      } stopped {} if
      showpage stop
   } def
end

% begin diagram: <maxlabels> ldiagbegin -
% must be defined outside ldiagdict since it loads it
/ldiagbegin
{ xsize 0 0 ysize ldiagdict begin
  5 -1 roll /ldiagmaxlabels exch def
  (@Diag) ldiagpushtagdict
  /OOY ldiagpointdef /OOX ldiagpointdef 0 0 /OOO ldiagpointdef
} def

% end diagram: - ldiagend -
/ldiagend
{ ldiagpoptagdict end
} def

% concat strings: <string> <string> ldiagconcat <string>
% must be defined outside ldiagdict since used in ldiagpromotelabels
/ldiagconcat
{ 2 copy length exch length add string
  dup 0 4 index putinterval
  dup 3 index length 3 index putinterval
  3 1 roll pop pop
} def

% mconcat strings: <string> <string> ldiagmconcat <string>
% returns concatenation, separated by @ if first is non-empty
% must be defined outside ldiagdict since used in ldiagpromotelabels
/ldiagmconcat
{
  2 copy length exch length add 1 add string
  dup 0 4 index putinterval
  dup 3 index length (@) putinterval
  dup 3 index length 1 add 3 index putinterval
  3 1 roll pop pop
} def

% show string in format start ... end: <string> ldiagsends <string>
/ldiagsends
{
  dup length 20 string cvs (: ) ldiagconcat exch
  dup 0 20 getinterval ( ... ) ldiagconcat
  3 -1 roll exch ldiagconcat
  exch dup length 20 sub 20 getinterval ldiagconcat
} def

/ldiagdebugposy 432 def
/ldiagdebugposx 72 def

% <string> <int> ldiagdebugprint -
% must be defined outside ldiagdict since used in arbitrary places
% print <string> plus count or <int> stack entries, whichever is the smaller
/ldiagdebugprint
{
  exch
  gsave
  initgraphics
  ldiagdebugposy 72 lt
  { /ldiagdebugposx ldiagdebugposx 144 add store
    /ldiagdebugposy 432 store
  }
  {
    /ldiagdebugposy ldiagdebugposy 12 sub store
  } ifelse
  ldiagdebugposx ldiagdebugposy moveto
  /Times-Roman findfont 10 scalefont setfont
  0 setgray show
  count 1 sub 2 copy lt { pop } { exch pop } ifelse 1 sub
  0 exch 1 exch
  {
    /ldiagdebugposy ldiagdebugposy 12 sub store
    ldiagdebugposx 12 add ldiagdebugposy moveto
    index
    dup type (dicttype) eq
    {
      (begin dict) show
      {
        /ldiagdebugposy ldiagdebugposy 12 sub store
        ldiagdebugposx 12 add ldiagdebugposy moveto
	pop 100 string cvs show
      } forall
      /ldiagdebugposy ldiagdebugposy 12 sub store
      ldiagdebugposx 12 add ldiagdebugposy moveto
      (end dict) show
    }
    {
      100 string cvs show
    } ifelse
  } for
  grestore
} def

/ldiagdict 200 dict def
ldiagdict begin

% error messages
/dictfull (dictfull error:  too many labels?) def
/dictstackoverflow (dictstackoverflow error:  labels nested too deeply?) def
/execstackoverflow (execstackoverflow error:  figure nested too deeply?) def
/limitcheck (limitcheck error:  figure nested too deeply or too large?) def
/syntaxerror (syntaxerror error:  syntax error in text of figure?) def
/typecheck (typecheck error:  syntax error in text of figure?) def
/undefined (undefined error:  unknown or misspelt label?) def
/VMError (VMError error:  run out of memory?) def

% push pi onto stack:  - ldiagpi <num>
/ldiagpi 3.14159 def

% push e onto stack:  - ldiage <num>
/ldiage 2.71828 def

% arc directions
/clockwise     false def
/anticlockwise true  def

% test equality between two angles:  <angle> <angle> ldiagangleeq <bool>
/ldiagangleeq { ldiagfixangle exch ldiagfixangle eq } def

% test inequality between two angles:  <angle> <angle> ldiaganglene <bool>
/ldiaganglene { ldiagangleeq not } def

% maximum of two numbers:  <num> <num> ldiagmax <num>
/ldiagmax { 2 copy gt { pop } { exch pop } ifelse } def

% minimum of two numbers:  <num> <num> ldiagmin <num>
/ldiagmin { 2 copy lt { pop } { exch pop } ifelse } def

% add two points:  <point> <point> ldiagpadd <point>
/ldiagpadd
{
  % (Entering padd) 4 ldiagdebugprint
  exch 3 1 roll add 3 1 roll add exch
  % (Leaving padd) 2 ldiagdebugprint
} def

% subtract first point from second:  <point> <point> ldiagpsub <point>
/ldiagpsub { 3 2 roll sub 3 1 roll exch sub exch } def

% max two points:  <point> <point> ldiagpmax <point>
/ldiagpmax { exch 3 1 roll ldiagmax 3 1 roll ldiagmax exch } def

% min two points:  <point> <point> ldiagpmin <point>
/ldiagpmin { exch 3 1 roll ldiagmin 3 1 roll ldiagmin exch } def

% scalar multiplication: <point> <num> ldiagpmul <point>
/ldiagpmul { dup 3 1 roll mul 3 1 roll mul exch } def

% point at angle and distance:  <point> <length> <angle> ldiagatangle <point>
/ldiagatangle { 2 copy cos mul 3 1 roll sin mul ldiagpadd } def

% angle from one point to another:  <point> <point> ldiagangleto <angle>
/ldiagangleto { ldiagpsub 2 copy 0 eq exch 0 eq and {pop} {exch atan} ifelse } def

% distance between two points:  <point> <point> ldiagdistance <length>
/ldiagdistance { ldiagpsub dup mul exch dup mul add sqrt } def

% stroke a solid line:  <length> <dashlength> ldiagsolid -
/ldiagsolid
{  pop pop [] 0 setdash 1 setlinecap stroke
} def

% stroke a dashed line:   <length> <dashlength> ldiagdashed -
/ldiagdashed
{  2 copy div 2 le 1 index 0 le or
   {  exch pop 1 pt ldiagmax [ exch dup ] 0 setdash }
   {  dup [ exch 4 2 roll 2 copy div
      1 sub 2 div ceiling dup 4 1 roll
      1 add mul sub exch div ] 0 setdash
   } ifelse 0 setlinecap stroke
} def

% stroke a cdashed line:  <length> <dashlength> ldiagcdashed -
/ldiagcdashed
{  % (Entering ldiagcdashed) 2 ldiagdebugprint
   2 copy le 1 index 0 le or
   { exch pop 1 pt ldiagmax [ exch dup ] dup 0 get 2 div setdash }
   { dup [ 4 2 roll exch 2 copy exch div
     2 div ceiling div 1 index sub
     ] exch 2 div setdash
   } ifelse 0 setlinecap stroke
   % (Leaving ldiagcdashed) 0 ldiagdebugprint
} def

% stroke a dotted line:  <length> <dashlength> ldiagdotted -
/ldiagdotted
{  2 copy le 1 index 0 le or
   { exch pop 1 pt ldiagmax [ exch 0 exch ] 0 setdash }
   { 1 index exch div ceiling div
     [ 0 3 2 roll ] 0 setdash
   } ifelse 1 setlinecap stroke
} def

% stroke a noline line:  <length> <dashlength> ldiagnoline -
/ldiagnoline
{ pop pop
} def

/ldiagbox
{
   0     0         /SW  ldiagpointdef
   xsize 0         /SE  ldiagpointdef
   xsize ysize     /NE  ldiagpointdef
   0     ysize     /NW  ldiagpointdef
   SE 0.5 ldiagpmul /S   ldiagpointdef
   NW 0.5 ldiagpmul /W   ldiagpointdef
   W SE ldiagpadd   /E   ldiagpointdef
   S NW ldiagpadd   /N   ldiagpointdef
   NE 0.5 ldiagpmul /CTR ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ CTR NE ldiagpsub /ldiagboxcircum cvx ] ldiagcircumdef
   SW SE NE NW SW
} def

% shape and labels of the @CurveBox symbol
% <margin> ldiagcurvebox <shape>
/ldiagcurvebox
{  

   % (Entering ldiagcurvebox) 1 ldiagdebugprint
   ldiagdecodelength /cbmgn exch def

   xsize 0.5 mul	ysize 0.5 mul	/CTR ldiagpointdef
   xsize 0.5 mul	0		/S   ldiagpointdef
   xsize		ysize 0.5 mul	/E   ldiagpointdef
   xsize 0.5 mul	ysize		/N   ldiagpointdef
   0			ysize 0.5 mul	/W   ldiagpointdef

   cbmgn 0.293 mul		cbmgn 0.293 mul		  /SW  ldiagpointdef
   xsize cbmgn 0.293 mul sub	cbmgn 0.293 mul		  /SE  ldiagpointdef
   xsize cbmgn 0.293 mul sub	ysize cbmgn 0.293 mul sub /NE  ldiagpointdef
   cbmgn 0.293 mul		ysize cbmgn 0.293 mul sub /NW  ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ xsize ysize 0.5 ldiagpmul cbmgn /ldiagcurveboxcircum cvx ] ldiagcircumdef

   cbmgn		0
   xsize cbmgn sub	0
   [ xsize cbmgn sub	cbmgn		]
   xsize		cbmgn
   xsize		ysize cbmgn sub
   [ xsize cbmgn sub	ysize cbmgn sub	]
   xsize cbmgn sub	ysize
   cbmgn		ysize
   [ cbmgn		ysize cbmgn sub	]
   0			ysize cbmgn sub
   0			cbmgn
   [ cbmgn		cbmgn		]
   cbmgn		0

   % (Leaving ldiagcurvebox) 0 ldiagdebugprint
} def

% shadow of the @ShadowBox symbol
% its shape and labels are done, somewhat inaccurately, with ldiagbox
% <shadowmargin> ldiagshadow -
/ldiagshadow
{ 
  /lfshm exch def
  
  lfshm 0 moveto
  0 lfshm neg rlineto
  xsize 0 rlineto
  0 ysize rlineto
  lfshm neg 0 rlineto
  xsize 0 lineto
  closepath fill

} def

% shape and labels of the @Square symbol
/ldiagsquare
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   CTR xsize xsize ysize ysize ldiagpmax 0.5 ldiagpmul ldiagpadd /NE ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 135 ldiagatangle ldiagpadd /NW ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 225 ldiagatangle ldiagpadd /SW ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 315 ldiagatangle ldiagpadd /SE ldiagpointdef
   SW 0.5 ldiagpmul SE 0.5 ldiagpmul ldiagpadd /S ldiagpointdef
   NW 0.5 ldiagpmul NE 0.5 ldiagpmul ldiagpadd /N ldiagpointdef
   SW 0.5 ldiagpmul NW 0.5 ldiagpmul ldiagpadd /W ldiagpointdef
   SE 0.5 ldiagpmul NE 0.5 ldiagpmul ldiagpadd /E ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ CTR NE ldiagpsub /ldiagboxcircum cvx ] ldiagcircumdef
   SW SE NE NW SW
} def

% shape and labels of the @Diamond symbol
/ldiagdiamond
{
   xsize 0 0.5 ldiagpmul /S   ldiagpointdef
   0 ysize 0.5 ldiagpmul /W   ldiagpointdef
   S W         ldiagpadd /CTR ldiagpointdef
   CTR W       ldiagpadd /N   ldiagpointdef
   CTR S       ldiagpadd /E   ldiagpointdef
   E N ldiagpadd 0.5 ldiagpmul /NE ldiagpointdef
   N W ldiagpadd 0.5 ldiagpmul /NW ldiagpointdef
   S W ldiagpadd 0.5 ldiagpmul /SW ldiagpointdef
   S E ldiagpadd 0.5 ldiagpmul /SE ldiagpointdef

     0 dg        /S@ANGLE  ldiagangledef
    90 dg        /E@ANGLE  ldiagangledef
   180 dg        /N@ANGLE  ldiagangledef
   270 dg        /W@ANGLE  ldiagangledef
   S E ldiagangleto /SE@ANGLE ldiagangledef
   E N ldiagangleto /NE@ANGLE ldiagangledef
   N W ldiagangleto /NW@ANGLE ldiagangledef
   W S ldiagangleto /SW@ANGLE ldiagangledef

   [ xsize ysize 0.5 ldiagpmul /ldiagdiamondcircum cvx ] ldiagcircumdef
   S E N W S
} def

% shape and labels of the @Ellipse symbol
/ldiagellipse
{
   xsize 0 0.5 ldiagpmul /S   ldiagpointdef
   0 ysize 0.5 ldiagpmul /W   ldiagpointdef
   S W         ldiagpadd /CTR ldiagpointdef
   CTR W       ldiagpadd /N   ldiagpointdef
   CTR S       ldiagpadd /E   ldiagpointdef
   CTR xsize 0 0.3536 ldiagpmul ldiagpadd 0 ysize 0.3536 ldiagpmul ldiagpadd /NE ldiagpointdef
   0 ysize 0.3536 ldiagpmul CTR xsize 0 0.3536 ldiagpmul ldiagpadd ldiagpsub /SE ldiagpointdef
   xsize 0 0.3536 ldiagpmul CTR ldiagpsub 0 ysize 0.3536 ldiagpmul ldiagpadd /NW ldiagpointdef
   0 ysize 0.3536 ldiagpmul xsize 0 0.3536 ldiagpmul CTR ldiagpsub ldiagpsub /SW ldiagpointdef
   [ xsize ysize 0.5 ldiagpmul /ldiagellipsecircum cvx ] ldiagcircumdef

     0 dg /S@ANGLE  ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   270 dg /W@ANGLE  ldiagangledef

   S E ldiagangleto /SE@ANGLE ldiagangledef
   E N ldiagangleto /NE@ANGLE ldiagangledef
   N W ldiagangleto /NW@ANGLE ldiagangledef
   W S ldiagangleto /SW@ANGLE ldiagangledef

   S [ CTR ] E [ CTR ] N [ CTR ] W [ CTR ] S
} def

% shape and labels of the @Circle symbol
/ldiagcircle
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   CTR xsize 0 ysize 0 ldiagpmax 0.5 ldiagpmul ldiagpadd /E ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 45 ldiagatangle ldiagpadd /NE ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 90 ldiagatangle ldiagpadd /N ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 135 ldiagatangle ldiagpadd /NW ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 180 ldiagatangle ldiagpadd /W ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 225 ldiagatangle ldiagpadd /SW ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 270 ldiagatangle ldiagpadd /S ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 315 ldiagatangle ldiagpadd /SE ldiagpointdef
   [ S E ldiagpsub /ldiagellipsecircum cvx ] ldiagcircumdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   S [ CTR ] E [ CTR ] N [ CTR ] W [ CTR ] S
} def

% shape and labels of the @VLine and @VArrow symbols
/ldiagvline
{
   xmark ysize ldiagprevious /FROM ldiagpointdef
   xmark 0 ldiagprevious /TO ldiagpointdef
} def

% points of a polygon around base with given no of sides, vert init angle:
% <sides> <angle> ldiagpolygon <point> ... <point>
/ldiagpolygon
{  exch round cvi exch
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   90 sub CTR 2 copy ldiagmax 5 3 roll
   [ 4 copy pop /ldiagpolycircum cvx ] ldiagcircumdef
   exch dup 360 exch div exch
   1 1  3 2 roll
   {  4 string cvs (P) exch ldiagconcat
      3 copy exch pop (@ANGLE) ldiagconcat cvn exch 90 add exch ldiagangledef
      cvn 6 copy pop pop ldiagatangle 2 copy 10 2 roll
      3 2 roll ldiagpointdef
      dup 3 1 roll add exch
   }  for
   pop ldiagatangle
} def

% shape and labels of the @Isosceles triangle symbol
/ldiagisosceles
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   0     0                   /SW  ldiagpointdef
   xsize 0                   /SE  ldiagpointdef
   xsize 0.5 mul ysize       /N   ldiagpointdef
   xsize 0.5 mul 0           /S   ldiagpointdef
   SE 0.5 ldiagpmul N 0.5 ldiagpmul ldiagpadd /NE ldiagpointdef
   SW 0.5 ldiagpmul N 0.5 ldiagpmul ldiagpadd /NW ldiagpointdef

   [ xsize ysize /ldiagisoscelescircum cvx ] ldiagcircumdef

     0 dg              /SW@ANGLE ldiagangledef
     0 dg              /SE@ANGLE ldiagangledef
   180 dg              /N@ANGLE  ldiagangledef
     0 dg              /S@ANGLE  ldiagangledef
     SE N ldiagangleto /NE@ANGLE ldiagangledef
     N SW ldiagangleto /NW@ANGLE ldiagangledef

   SW SE N SW
} def

% next array element:  <array> <index> ldiaggetnext <array> <index> <any> true
%                                               or <array> <index> false
/ldiaggetnext
{  2 copy exch length ge
   { false }
   { 2 copy get exch 1 add exch true } ifelse
} def

% check whether thing is number:  <any> ldiagisnumbertype <any> <bool>
/ldiagisnumbertype
{  dup type dup
   /integertype eq exch /realtype eq or
} def

% check whether thing is an array:  <any> ldiagisarraytype <any> <bool>
/ldiagisarraytype { dup type /arraytype eq } def

% check whether thing is an array:  <any> ldiagisnametype <any> <bool>
/ldiagisnametype { dup type /nametype eq } def

% get next item:  <array> <index> ldiaggetnextitem <array> <index> 0
%                                              or <array> <index> <array> 1
%                                              or <array> <index> <point> 2
/ldiaggetnextitem
{   ldiaggetnext
    {	ldiagisarraytype
	{   1
	}
	{   ldiagisnumbertype
	    {	3 1 roll
		ldiaggetnext
		{   ldiagisnumbertype
		    {	4 3 roll exch  2
		    }
		    {	pop 3 2 roll pop  0
		    } ifelse
		}
		{   3 2 roll pop  0
		} ifelse
	    }
	    {	pop 0
	    } ifelse
	} ifelse
    }
    {	0
    } ifelse
} def

% approximate equality: num1 num2  approxeq  <boolean>
/approxeq
{ dup 0 eq
  { pop 0 eq
  }
  { dup 3 1 roll sub exch div abs 0.001 lt
  } ifelse
} def

% set arc path:  bool x1 y1  x2 y2  x0 y0  ldiagsetarc  <angle> <angle> <dist>
% the path goes from x1 y1 to x2 y2 about centre x0 y0,
% anticlockwise if bool is true else clockwise.
% The orientations of backwards pointing and forwards pointing
% arrowheads are returned in the two angles, and
% the length of the arc is returned in <dist>.
/ldiagsetarc
{
  % (Entering ldiagsetarc) 7 ldiagdebugprint
  20 dict begin
     matrix currentmatrix 8 1 roll
     2 copy translate 2 copy 8 2 roll
     4 2 roll ldiagpsub 6 2 roll ldiagpsub
     dup /y1 exch def dup mul /y1s exch def
     dup /x1 exch def dup mul /x1s exch def
     dup /y2 exch def dup mul /y2s exch def
     dup /x2 exch def dup mul /x2s exch def
     /dist1 0 0 x1 y1 ldiagdistance def
     /dist2 0 0 x2 y2 ldiagdistance def

     y1s y2s approxeq
     {	-1
     }
     {	y1s x2s mul y2s x1s mul sub y1s y2s sub div
     } ifelse
     /da exch def

     x1s x2s approxeq
     {	-1
     }
     {	x1s y2s mul x2s y1s mul sub x1s x2s sub div
     } ifelse
     /db exch def

     da 0 gt db 0 gt and
     {
	% (  case 1, ellipse) 0 ldiagdebugprint
	/LMax da sqrt db sqrt ldiagmax def
	/scalex da sqrt LMax div def
	/scaley db sqrt LMax div def
	scalex scaley scale
	0 0 LMax
	0 0 x1 scalex mul y1 scaley mul ldiagangleto
	0 0 x2 scalex mul y2 scaley mul ldiagangleto
	2 copy eq { 360 add } if
	2 copy 8 2 roll
	5 index { arc } { arcn } ifelse
	2 index 1 index
	{ 90 sub } { 90 add } ifelse
	dup sin scaley mul exch cos scalex mul atan
	2 index 2 index
	{ 90 add } { 90 sub } ifelse
	dup sin scaley mul exch cos scalex mul atan
	5 2 roll  % res1 res2 ang1 ang2 anticlockwise
	{ exch sub } { sub } ifelse
	dup 0 le { 360 add } if  ldiagpi mul LMax mul 180 div
     }
     {
	dist1 dist2 approxeq
	% x1 y1 dist1 (  x1 y1, d) 3 ldiagdebugprint pop pop pop
	% x2 y2 dist2 (  x2 y2, d) 3 ldiagdebugprint pop pop pop
	{
		% (  case 2, circle) 0 ldiagdebugprint
		0 0
		dist1
		0 0 x1 y1 ldiagangleto
		0 0 x2 y2 ldiagangleto
		2 copy eq { 360 add } if
		2 copy 8 2 roll
		5 index { arc } { arcn } ifelse
		2 index 1 index
		{ 90 sub } { 90 add } ifelse
		2 index 2 index
		{ 90 add } { 90 sub } ifelse
		5 2 roll % res1 res2 ang1 ang2 clockwise
		{ exch sub } { sub } ifelse
		dup 0 le { 360 add } if
		ldiagpi mul dist1 mul 180 div
	}
	{
		% (  case 3, line) 0 ldiagdebugprint
		x2 y2 lineto pop
		x2 y2 x1 y1 ldiagangleto
		x1 y1 x2 y2 ldiagangleto
		x1 y1 x2 y2 ldiagdistance
	} ifelse
     } ifelse
     4 -1 roll setmatrix
     end
  % (Leaving ldiagsetarc) 3 ldiagdebugprint
} def

% ldiagsetcurve: set up a Bezier curve from x0 y0 to x3 y3
% and return arrowhead angles and length of curve (actually 0)
% x0 y0 x1 y1 x2 y2 x3 y3 ldiagsetcurve <angle> <angle> <length>
/ldiagsetcurve
{ 8 copy curveto pop pop
  ldiagangleto
  5 1 roll
  4 2 roll ldiagangleto
  exch
  0
} def

% ldiagsetpath: convert a Diag path into a PostScript path
% [ shape ] ldiagsetpath 
/ldiagsetpath
{
  10 dict begin
    0 newpath
    /prevseen false def
    /curveseen false def
    { ldiaggetnextitem
      dup 0 eq { pop exit }
      { 1 eq
        { /curveseen true def
	  /curve exch def
	  curve length 0 eq { /curveseen false def } if
        }
        { /ycurr exch def
	  /xcurr exch def
	  prevseen
	  { curveseen
	    { curve length 4 eq
	      { xprev yprev
		curve 0 get curve 1 get
		curve 2 get curve 3 get
		xcurr ycurr
		ldiagsetcurve pop pop pop
	      }
	      { xprev yprev xcurr ycurr
	        curve length 1 ge { curve 0 get } { 0 } ifelse
	        curve length 2 ge { curve 1 get } { 0 } ifelse
	        curve length 3 ge { curve 2 get } { true } ifelse
	        7 1 roll
	        ldiagsetarc pop pop pop
	      } ifelse
	    }
	    { xcurr ycurr lineto
	    } ifelse
	  }
	  { xcurr ycurr moveto
	  } ifelse
	  /xprev xcurr def
	  /yprev ycurr def
	  /prevseen true def
	  /curveseen false def
        } ifelse
      } ifelse
    } loop pop pop
  end
} def

% ldiagpaintpath: paint a path of the given shape
% /paint [ shape ] ldiagpaintpath -
/ldiagpaintpath
{
  ldiagsetpath cvx exec
} def

% stroke a path of the given shape in the given linestyle and dash length.
% Return the origin and angle of the backward and forward arrow heads.
% dashlength /linestyle [shape] ldiagdopath  [<point> <angle>] [<point> <angle>] 
/ldiagdopath
{
  10 dict begin
    0
    /prevseen  false def
    /curveseen false def
    /backarrow []    def
    /fwdarrow  []    def
    {
	ldiaggetnextitem
	dup 0 eq { pop exit }
	{
	    1 eq
	    {	/curveseen true def
		/curve exch def
		curve length 0 eq { /prevseen false def } if
	    }
	    {	/ycurr exch def
		/xcurr exch def
		prevseen
		{   newpath xprev yprev moveto
		    curveseen
		    {	curve length 4 eq
			{   xprev yprev
			    curve 0 get curve 1 get
			    curve 2 get curve 3 get
			    xcurr ycurr ldiagsetcurve
			}
			{   xprev yprev xcurr ycurr
			    curve length 1 ge { curve 0 get } { 0 } ifelse
			    curve length 2 ge { curve 1 get } { 0 } ifelse
			    curve length 3 ge { curve 2 get } { true } ifelse
			    7 1 roll
			    ldiagsetarc
			} ifelse
		    }
		    {	xcurr ycurr lineto
			xcurr ycurr xprev yprev ldiagangleto dup 180 sub
			xprev yprev xcurr ycurr ldiagdistance
		    } ifelse
		    6 index 6 index cvx exec
		    [ xprev yprev 5 -1 roll ]
		    backarrow length 0 eq
		    { /backarrow exch def }
		    { pop } ifelse
		    [ xcurr ycurr 4 -1 roll ] /fwdarrow exch def
		} if
		/xprev xcurr def
		/yprev ycurr def
		/prevseen true def
		/curveseen false def
	    } ifelse
	} ifelse
    } loop
    pop pop pop pop
    backarrow length 0 eq { [ 0 0 0 ] } { backarrow } ifelse
    fwdarrow  length 0 eq { [ 0 0 0 ] } { fwdarrow  } ifelse
  end
} def


% stroke a path of the given shape in the given linestyle and dash length.
% dashlength [ /linestyle ] [shape] ldiagdosegpath  -
/ldiagdosegpath
{
  12 dict begin
    1 index /seg exch def
    1 index length /seglength exch def
    0 /segcount exch def
    0
    /prevseen  false def
    /curveseen false def
    /backarrow []    def
    /fwdarrow  []    def
    {
	ldiaggetnextitem
	dup 0 eq { pop exit }
	{
	    1 eq
	    {	/curveseen true def
		/curve exch def
		curve length 0 eq { /prevseen false def } if
	    }
	    {	/ycurr exch def
		/xcurr exch def
		prevseen
		{   newpath xprev yprev moveto
		    curveseen
		    {	curve length 4 eq
			{   xprev yprev
			    curve 0 get curve 1 get
			    curve 2 get curve 3 get
			    xcurr ycurr ldiagsetcurve
			}
			{   xprev yprev xcurr ycurr
			    curve length 1 ge { curve 0 get } { 0 } ifelse
			    curve length 2 ge { curve 1 get } { 0 } ifelse
			    curve length 3 ge { curve 2 get } { true } ifelse
			    7 1 roll
			    ldiagsetarc
			} ifelse
		    }
		    {	xcurr ycurr lineto
			xcurr ycurr xprev yprev ldiagangleto dup 180 sub
			xprev yprev xcurr ycurr ldiagdistance
		    } ifelse
		    6 index seg segcount seglength mod get cvx exec
		    /segcount segcount 1 add def
		    [ xprev yprev 5 -1 roll ]
		    backarrow length 0 eq
		    { /backarrow exch def }
		    { pop } ifelse
		    [ xcurr ycurr 4 -1 roll ] /fwdarrow exch def
		} if
		/xprev xcurr def
		/yprev ycurr def
		/prevseen true def
		/curveseen false def
	    } ifelse
	} ifelse
    } loop
    pop pop pop pop
  end
} def

% ldiagnodebegin: start of node parameters
% ldiagnodebegin -
/ldiagnodebegin
{ % (Entering ldiagnodebegin) 0 ldiagdebugprint
  ldiagmaxlabels dict begin 
} def

% ldiagnodeend: end of node parameters (so do the node)
% <outline> <dashlength> <style> <linewidth> <paint> ldiagnodeend -
/ldiagnodeend
{
  % (Entering ldiagnodeend) 0 ldiagdebugprint
  end % matches begin in ldiagnodebegin
  4 index gsave ldiagpaintpath grestore
  3 index ldiagsetpath clip newpath
  2 mul setlinewidth
  3 -1 roll ldiagdosegpath
  % (Leaving ldiagnodeend) 0 ldiagdebugprint
} def

% ldiaglinkbegin: start of link parameters
% <direct> ldiaglinkbegin -
/ldiaglinkbegin
{ ldiagmaxlabels dict begin 
  1 eq /direct exch def
} def

% ldiaglinkend: end of link parameters (so do the link)
% <outline> <dashlength> <style> <linewidth> ldiaglinkend -
/ldiaglinkend
{
  end % matches begin in ldiaglinkbegin
  setlinewidth
  3 -1 roll ldiagdosegpath
} def

% ldiagdoarrow: draw an arrow head of given form
% dashlength /lstyle /pstyle hfrac height width [ <point> <angle> ] ldiagdoarrow -
/ldiagdoarrow
{  matrix currentmatrix 8 1 roll
   dup 0 get 1 index 1 get translate
   2 get rotate
   [ 2 index neg 2 index 0 0
     3 index 3 index neg
     1 index 10 index mul 0
     7 index 7 index ]
   4 1 roll pop pop pop
   dup 3 1 roll
   gsave ldiagpaintpath grestore ldiagdopath pop pop
   setmatrix
} def

% arrow head styles
/ldiagopen     0.0 def
/ldiaghalfopen 0.5 def
/ldiagclosed   1.0 def

% stroke no arrows, forward, back, and both
/ldiagnoarrow { pop pop pop pop pop pop pop pop                        } def
/ldiagforward { 7 -1 roll ldiagdoarrow pop                              } def
/ldiagback    { 8 -2 roll pop ldiagdoarrow                              } def
/ldiagboth    { 8 -1 roll 7 copy ldiagdoarrow pop 7 -1 roll ldiagdoarrow } def

% ldiagprevious: return previous point on path
/ldiagprevious
{ ldiagisnumbertype
  { 2 copy }
  { ldiagisarraytype
    { 2 index 2 index }
    { 0 0 }
    ifelse
  } ifelse
} def

% Tag dictionary operators
%
% Diag's tag dictionaries are kept on the same stack as other dictionaries,
% since there is nowhere else to put them.  However, they are managed like
% a separate stack using the following operators:
%
%  <tag>  ldiagpushtagdict  -      Push a new, empty tag dictionary
%         ldiagtoptagdict   dict   Find the top tag dictionary
%         ldiagpoptagdict   -      Pop and destroy the top tag dictionary
%         ldiagpopuptagdict -      Pop top tag dict and promote its entries
% <array> ldiagpopsometagdict -    Like popuptagdict but only those promote
%                                  those labels listed in <array>
%         ldiagdebugtagdict -      Debug print of dictionary stack
%
% They are distinguished from other dictionaries by containing /ldiagtagdict,
% whose value is the <tag> which is used by ldiagpopuptagdict,
% and they are hopefully never the target of any non-tag definition because
% they are never the top dictionary, since push places the new dict second.

/ldiagpushtagdict
{ ldiagmaxlabels dict dup
  currentdict end exch begin begin
  exch /ldiagtagdict exch put
} def

/ldiagtoptagdict
{ /ldiagtagdict where not
  { (Diag internal error: no tag dictionary) show stop
  } if
} def

/ldiagpoptagdict
{
  % (Entering poptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
  mark
  { currentdict end
    dup /ldiagtagdict known
    { exit
    } if
  } loop
  pop
  counttomark
  { begin
  } repeat
  pop
  % (Leaving poptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% promote labels from top tag dictionary to second top tag dictionary
% each prefixed by <string>@ if <string> (value of /ldiagtagdict) is not empty
% - ldiagpopuptagdict -
/ldiagpopuptagdict
{
  ldiagtagdict
  % (Entering ldiagpopuptagdict) 1 ldiagdebugprint
  % ldiagdebugtagdict
  ldiagtoptagdict ldiagpoptagdict ldiagtoptagdict exch
  { exch dup length string cvs
    3 index exch ldiagmconcat
    cvn exch 2 index 3 1 roll put
  } forall
  pop pop
  % (Leaving ldiagpopuptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% similar to ldiagpopuptagdict but only those inner labels that are
% present in <array> will be promoted
% <array> ldiagpopsometagdict -
/ldiagpopsometagdict
{
  ldiagtagdict
  % (Entering ldiagpopsometagdict) 1 ldiagdebugprint
  % ldiagdebugtagdict
  ldiagtoptagdict
  ldiagpoptagdict
  ldiagtoptagdict
  4 -1 roll
  { dup 3 index exch
    get
    exch 4 index
    exch ldiagmconcat exch
    3 copy put
    pop pop
  } forall
  pop pop pop
  % (Leaving ldiagpopuptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% debug tag dictionary stack
/ldiagdebugtagdict
{ (Entering ldiagdebugtagdict) 0 ldiagdebugprint
  30 array dictstack
  { dup /ldiagtagdict known
    { dup /ldiagtagdict get 0 ldiagdebugprint
      { pop 100 string cvs (   ) exch ldiagconcat
	dup 0 ldiagdebugprint
	pop
      }
      forall
    }
    { pop (other) 0 ldiagdebugprint
    } ifelse
  } forall
  (Leaving ldiagdebugtagdict) 0 ldiagdebugprint
} def

% label a point in top tag dictionary:  <point> /name ldiagpointdef -
/ldiagpointdef
{
  % (Entering ldiagpointdef) 3 ldiagdebugprint
  [ 4 2 roll transform /itransform cvx ] cvx
  ldiagtoptagdict 3 1 roll put
  % (Leaving ldiagpointdef) 0 ldiagdebugprint
} def

% label an angle in top tag dictionary:  <angle> /name ldiagangledef -
/ldiagangledef
{
  % (Entering ldiagangledef) 2 ldiagdebugprint
  exch ldiagfixangle ldiagtoptagdict 3 1 roll put
  % (Leaving ldiagangledef) 0 ldiagdebugprint
} def

% add CIRCUM operator with this body:  <array> ldiagcircumdef -
/ldiagcircumdef
{   % (Entering ldiagcircumdef) 1 ldiagdebugprint
    /CIRCUM exch cvx
    ldiagtoptagdict 3 1 roll put
    % currentdict end
    % 3 1 roll
    % def
    % begin
    % (Leaving ldiagcircumdef) 0 ldiagdebugprint
} def

% show points (except CIRCUM and ANGLE): - ldiagshowpoints -
/ldiagshowpoints
{
  % (Entering ldiagshowpoints) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (CIRCUM) search % if CIRCUM in key
      { pop pop pop pop pop }
      { 
        (ANGLE) search % if ANGLE in key
        {
          pop pop pop pop pop
        }
        {
          (ldiagtagdict) search
          {
            pop pop pop pop pop
          }
          {
	    pop cvx exec
	    newpath 2.0 pt 0 360 arc 0 setgray fill pop
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowpoints) 0 ldiagdebugprint
} def


/ldiagshowtags
{
  % (Entering ldiagshowtags) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    % dup 0 ldiagdebugprint
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (CIRCUM) search % if CIRCUM in key
      { pop pop pop pop pop }
      { 
        (ANGLE) search % if ANGLE in key
        {
          pop pop pop pop pop
        }
        {
          (ldiagtagdict) search
          {
            pop pop pop pop pop
          }
          {
	    pop cvx exec 2 copy
	    gsave
	    newpath 2.0 pt 0 360 arc 0 setgray fill
            /Times-Roman findfont 8 pt scalefont setfont
            translate 40 rotate 0.2 cm 0.1 cm moveto 100 string cvs show
	    grestore
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowtags) 0 ldiagdebugprint
} def


% show angles: - ldiagshowangles -
/ldiagshowangles
{
  % (Entering ldiagshowangles) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    % dup 0 ldiagdebugprint
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (ldiagtagdict) search
      {
        pop pop pop pop pop
      }
      {
        (CIRCUM) search % if CIRCUM in key
        { pop pop pop pop pop }
        { 
          (@ANGLE) search % if ANGLE in key, draw the angle at the point
          {
            % (showing ANGLE) 5 ldiagdebugprint
            gsave exch pop exch pop cvx
            % (about to execute) 1 ldiagdebugprint
            exec translate rotate 0.8 0.8 scale pop
            newpath 0 0 2.0 pt 0 360 arc 0 setgray fill
            newpath 4 pt 0 moveto 9 pt 0 lineto
            9 pt 1.5 pt lineto 11 pt 0 lineto 9 pt -1.5 pt lineto
            9 pt 0 lineto [] 0 setdash 4 pt setlinewidth 0 setlinejoin
	    stroke grestore
            % (finished ANGLE) 5 ldiagdebugprint
          }
          {
            % else must be a point, we aren't showing those
            pop pop pop
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowangles) 0 ldiagdebugprint
} def

% fix an angle to 0 <= res < 360:  <angle> ldiagfixangle <angle>
/ldiagfixangle
{
  % (Entering ldiagfixangle) 1 ldiagdebugprint
  { dup 0 ge { exit } if
    360 add
  } loop
  { dup 360 lt { exit } if
    360 sub
  } loop
  % (Leaving ldiagfixangle) 1 ldiagdebugprint
} def

% find point on circumference of box:  alpha a b ldiagboxcircum x y
/ldiagboxcircum
{
  % (Entering ldiagboxcircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    0 0 a b ldiagangleto /theta exch def

    % if alpha <= theta, return (a, a*tan(alpha))
    alpha theta le
    { a  a alpha sin mul alpha cos div }
    {
      % else if alpha <= 180 - theta, return (b*cot(alpha), b)
      alpha 180 theta sub le
      { b alpha cos mul alpha sin div  b }
      {
        % else if alpha <= 180 + theta, return (-a, -a*tan(alpha))
        alpha 180 theta add le
        { a neg  a neg alpha sin mul alpha cos div }
        {
	  % else if alpha <= 360 - theta, return (-b*cot(alpha), -b)
	  alpha 360 theta sub le
          { b neg alpha cos mul alpha sin div  b neg }
	  {
	    % else 360 - theta <= alpha, return (a, a*tan(alpha))
	    a  a alpha sin mul alpha cos div
	  } ifelse
        } ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagboxcircum) 2 ldiagdebugprint
} def

% find quadratic roots (assume a != 0): a b c ldiagqroots x1 x2 2
%                                                     or    x2 1
%                                                     or       0
/ldiagqroots
{
  4 dict begin
    /c exch def
    /b exch def
    /a exch def
    /disc b b mul 4 a c mul mul sub def
    disc 0 lt
    { 0
    }
    { disc 0 eq
      { b neg 2 a mul div
	1
      }
      { b neg disc sqrt add 2 a mul div
        b neg disc sqrt sub 2 a mul div
	2
      }
      ifelse
    }
    ifelse
  end
} def

% work our which quadrant: <angle> ldiagquadrant <0-3>
/ldiagquadrant
{ dup 90 lt
  { pop 0
  }
  { dup 180 lt
    { pop 1
    }
    { 270 lt
      { 2
      }
      { 3
      } ifelse
    } ifelse
  } ifelse
} def

% find curvebox circum, assuming upper right quadrant: alpha a b xmk ldiagcb x y
/ldiagcb
{
  6 dict begin
    /xmk exch def
    /b exch def
    /a exch def
    /alpha exch def
    /theta1 0 0 a b xmk sub ldiagangleto def
    /theta2 0 0 a xmk sub b ldiagangleto def
    alpha theta1 le
    { % if alpha <= theta1, return (a, a*tan(alpha))
      a  a alpha sin mul alpha cos div
    }
    { alpha theta2 ge
      { % else if alpha > theta2, return (b*cot(alpha), b)
	b alpha cos mul alpha sin div  b
      }
      {
	% else, return the intersection of line and circle
	a xmk sub b xmk sub xmk  0 0 alpha ldiagcircleintersect
	dup 0 eq
	{ % should never happen, just return any reasonable point
	  pop
	  a b 0.5 ldiagpmul
	}
	{ 1 eq
	  { % should never happen, just return the point on top of stack
	  }
	  { % the usual case, two points on stack, return the larger
	    ldiagpmax
	  } ifelse
	} ifelse
      } ifelse
    } ifelse
  end
} def

% find point on circumference of curvebox: alpha a b xmk ldiagcurveboxcircum x y
/ldiagcurveboxcircum
{
  % (Entering ldiagcurveboxcircum) 4 ldiagdebugprint
  5 dict begin
    /xmk exch def
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def

    % work out which quadrant we are in, and reflect accordingly
    /quad alpha ldiagquadrant def
    quad 0 eq
    { alpha a b xmk ldiagcb
    }
    { quad 1 eq
      { 180 alpha sub a b xmk ldiagcb exch neg exch
      }
      { quad 2 eq
	{ alpha 180 sub a b xmk ldiagcb neg exch neg exch
	}
	{ 360 alpha sub a b xmk ldiagcb neg
	} ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagcurveboxcircum) 2 ldiagdebugprint
} def

% find point on circumference of diamond:  alpha a b ldiagdiamondcircum x y
/ldiagdiamondcircum
{
  % (Entering ldiagdiamondcircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    b alpha cos abs mul  a alpha sin abs mul  add  /denom exch def
    a b mul alpha cos mul denom div
    a b mul alpha sin mul denom div
  end
  % (Leaving ldiagdiamondcircum) 2 ldiagdebugprint
} def

% find point on circumference of ellipse:  alpha a b ldiagellipsecircum x y
/ldiagellipsecircum
{
  % (Entering ldiagellipsecircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    b alpha cos mul dup mul  a alpha sin mul dup mul  add sqrt /denom exch def
    a b mul alpha cos mul denom div
    a b mul alpha sin mul denom div
  end
  % (Leaving ldiagellipsecircum) 2 ldiagdebugprint
} def

% find point on circumference of isosceles:  alpha a b ldiagisoscelescircum x y
/ldiagisoscelescircum
{
  % (Entering ldiagisoscelescircum) 3 ldiagdebugprint
  7 dict begin
    /b exch def
    /a exch def
    /alpha exch ldiagfixangle def
    /theta1 90 def
    /theta2 a b 0.5 ldiagpmul 0 0 ldiagangleto def
    /theta3 a b 0.5 ldiagpmul a 0 ldiagangleto def
    alpha theta1 ge alpha theta2 le and
    { 0 0 a 2 div b
    }
    { alpha theta2 ge alpha theta3 le and
      { 0 0 a 0
      }
      { a 0 a 2 div b
      } ifelse
    } ifelse
    a 2 div b 2 div 2 copy 1 ft alpha ldiagatangle ldiaglineintersect
    a 2 div b 2 div 4 2 roll ldiagpsub
  end
  % (Leaving ldiagisoscelescircum) 2 ldiagdebugprint
} def

% find point of intersection of two lines each defined by two points
% x1 y1 x2 y2  x3 y3 x4 y4  ldiaglineintersect x y
/ldiaglineintersect
{
  % (Entering ldiaglineintersect) 8 ldiagdebugprint
  13 dict begin
    /y4 exch def
    /x4 exch def
    /y3 exch def
    /x3 exch def
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    x2 x1 sub /x21 exch def
    x4 x3 sub /x43 exch def
    y2 y1 sub /y21 exch def
    y4 y3 sub /y43 exch def
    y21 x43 mul y43 x21 mul sub /det exch def
  
    % calculate x 
    y21 x43 mul x1 mul
    y43 x21 mul x3 mul sub
    y3 y1 sub x21 mul x43 mul add
    det div

    % calculate y
    x21 y43 mul y1 mul
    x43 y21 mul y3 mul sub
    x3 x1 sub y21 mul y43 mul add
    det neg div

  end
  % (Leaving ldiaglineintersect) 2 ldiagdebugprint
} def

% find point on circumference of polygon
% alpha radius num theta ldiagpolycircum x y
/ldiagpolycircum
{
  % (Entering ldiagpolycircum) 4 ldiagdebugprint
  13 dict begin
    /theta exch def
    /num exch def
    /radius exch def
    /alpha exch def

    % calculate delta, the angle from theta to alpha
    alpha theta sub ldiagfixangle

    % calculate the angle which is the multiple of 360/num closest to delta
    360 num div div truncate 360 num div mul theta add /anglea exch def

    % calculate the next multiple of 360/num after anglea
    anglea 360 num div add /angleb exch def

    % intersect the line through these two points with the alpha line
    anglea cos anglea sin  angleb cos angleb sin
    0 0  alpha cos 2 mul alpha sin 2 mul
    ldiaglineintersect radius ldiagpmul

  end
  % (Leaving ldiagpolycircum) 2 ldiagdebugprint
} def

% find point of intersection of a line and a circle
% x0 y0 r  x1 y1 theta  ldiagcircleintersect xa ya xb yb 2
%                                        or       xb yb 1
%                                        or             0
/ldiagcircleintersect
{
  % (Entering ldiagcircleintersect) 6 ldiagdebugprint
  15 dict begin
    /theta exch def
    /y1    exch def
    /x1    exch def
    /r     exch def
    /y0    exch def
    /x0    exch def

    % if sin(theta) = 0 then line is horizontal and y must be y1
    theta sin abs 0.00001 lt
    { 
      /a 1 def
      /b -2 x0 mul def
      /c x0 dup mul y1 y0 sub dup mul add r dup mul sub def
      a b c ldiagqroots dup
      0 eq
      { pop
	0
      }
      { 1 eq
	{ y1 1
	}
	{ y1 exch y1 2
	} ifelse
      } ifelse
    }
    {
      /ct theta cos theta sin div def
      /a ct ct mul 1 add def
      /b ct x1 x0 sub mul y1 add y0 sub 2 mul def
      /c x1 x0 sub dup mul y1 y0 sub dup mul add r dup mul sub def
      a b c ldiagqroots dup
      0 eq
      { pop
	0
      }
      { 1 eq
	{ y1 add /yb exch def
	  yb y1 sub ct mul x1 add /xb exch def
	  xb yb 1
	}
	{ y1 add /ya exch def
	  ya y1 sub ct mul x1 add /xa exch def
	  y1 add /yb exch def
	  yb y1 sub ct mul x1 add /xb exch def
	  xa ya xb yb 2
	} ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagcircleintersect) 1 ldiagdebugprint
} def

% find line which is the perpendicular bisector of two points, defined
% by two points
% x1 y1 x2 y2 ldiaglinebetween x3 y3 x4 y4
/ldiaglinebetween
{ % (Entering ldiaglinebetween) 4 ldiagdebugprint
  /y2 exch def /x2 exch def
  /y1 exch def /x1 exch def

  % let x3, y3 be the point halfway between the two points
  x1 y1 x2 y2 ldiagpadd 0.5 ldiagpmul
  /y3 exch def /x3 exch def

  % find a point perpendicular to x3, y3
  x3 y3 50 x1 y1 x2 y2 ldiagangleto 90 dg add ldiagatangle

  % plus x3 y3 gives the two points
  x3 y3

  % (Leaving ldiaglinebetween) 4 ldiagdebugprint
} def

% find <proc>@<string>:  <proc> <string> ldiagfindlabel <any> true
%                                                      <proc> <string> false
/ldiagfindlabel
{
  % (Entering ldiagfindlabel) 2 ldiagdebugprint
  exch dup length 1 ne
  { exch false
    % (Leaving ldiagfindabel (length not 1)) 3 ldiagdebugprint
  }
  { dup 0 get type /nametype ne
    { exch false
      % (Leaving ldiagfindabel (not a name)) 3 ldiagdebugprint
    }
    { dup 0 get dup length string cvs (@) ldiagconcat
      2 index ldiagconcat dup where
      { exch get exch pop exch pop cvx exec true
	% (Leaving ldiagfindlabel with success) 100 ldiagdebugprint
      }
      {
	pop exch false
	% (Leaving ldiagfindabel (concat not sensible)) 3 ldiagdebugprint
      } ifelse
    } ifelse
  } ifelse
} bind def

% execute <proc>@<string> or else default:  <proc> <string> ldiagdolabel <various>
/ldiagdolabel
{
  % (Entering ldiagdolabel) 2 ldiagdebugprint
  ldiagfindlabel not
  {
    dup (CIRCUM) eq
    { pop pop pop 0 0
    }
    {
      dup (ANGLE) eq
      { pop pop 0
      }
      { pop cvx exec
      } ifelse
    } ifelse
  } if
  % (Leaving ldiagdolabel) 2 ldiagdebugprint
} bind def

% execute a proc depending on whether number is negative, zero, or positive
% procneg proczero procpos number ldiagsigncase <anything>
/ldiagsigncase
{
  % (Entering ldiagsigncase) 4 ldiagdebugprint
  dup 0 lt
  { pop pop pop exec
  }
  { 0 gt
    { exch pop exch pop exec
    }
    { pop exch pop exec
    } ifelse
  } ifelse
  % (Leaving ldiagsigncase) 0 ldiagdebugprint
} bind def

% execute proci if angle is in ith quadrant
% proc45 proc270 proc180 proc90 proc0 proc315 proc225 proc135 angle ldiagquadcase <anything>
/ldiagquadcase
{
  % (Entering ldiagquadcase) 9 ldiagdebugprint
  round ldiagfixangle cvi dup 90 mod 0 eq
  { 90 idiv 4 add } { 90 idiv } ifelse
  8 exch roll pop pop pop pop pop pop pop exec
  % (Leaving ldiagquadcase) 0 ldiagdebugprint
} bind def

% decode Lout length into PostScript length
% <string> ldiagdecodelength <number>
/ldiagdecodelength
{
  % (Entering ldiagdecodelength) 1 ldiagdebugprint
  (f) search
  { exch pop exch pop cvr ft
  }
  { (c) search
    { exch pop exch pop cvr cm
    }
    { (p) search
      { exch pop exch pop cvr pt
      }
      { (m) search
	{ exch pop exch pop cvr em
	}
	{ (s) search
	  { exch pop exch pop cvr sp
	  }
	  { (v) search
	    { exch pop exch pop cvr vs
	    }
	    { (i) search
	      { exch pop exch pop cvr in
	      }
	      { pop 0
	      } ifelse
	    } ifelse
	  } ifelse
	} ifelse
      } ifelse
    } ifelse
  } ifelse
  % (Leaving ldiagdecodelength) 1 ldiagdebugprint
} def

% implement aabout function
% logical form:  <circum> <extra> <centre> aabout <point>
% actual form:   { <labelorpoint> } cvlit <length> [ <point> ] cvx aabout <point>
/ldiagaabout
{
  /centre exch def
  /extra exch def
  /circum exch def

  /ZXCTR [ centre ] cvx def
  /ZFCTR [ circum (CTR) ldiagdolabel ] cvx def
  /ZAREF ZFCTR ZXCTR ldiagangleto def
  /ZAMIN 0 dg def
  /ZPMIN [ circum (CTR) ldiagdolabel ZAREF ZAMIN sub
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMIN sub ldiagatangle
	 ldiagpadd ] cvx def

  /ZAMAX 90 dg def
  /ZPMAX [ circum (CTR) ldiagdolabel ZAREF ZAMAX sub
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMAX sub ldiagatangle
	 ldiagpadd ] cvx def

  1 1 20
  { /xval exch def
    /ZAMID ZAMIN ZAMAX add 0.5 mul def
    /ZPMID [ circum (CTR) ldiagdolabel ZAREF ZAMID sub
	   circum (CIRCUM) ldiagdolabel ldiagpadd
	   0 0 extra ZAREF ZAMID sub ldiagatangle
	   ldiagpadd ] cvx def
    ZPMID ZXCTR ldiagdistance ZFCTR ZXCTR ldiagdistance gt
    {
      /ZAMAX [ ZAMID ] cvx def
      /ZPMAX [ ZPMID ] cvx def
    }
    {
      /ZAMIN [ ZAMID ] cvx def
      /ZPMIN [ ZPMID ] cvx def
    } ifelse
  } for
  ZPMID
} def

% implement cabout function
% logical form:  <circum> <extra> <centre> cabout <point>
% actual form:   { <labelorpoint> } cvlit <length> [ <point> ] cvx cabout <point>
/ldiagcabout
{
  /centre exch def
  /extra exch def
  /circum exch def

  /ZXCTR [ centre ] cvx def
  /ZFCTR [ circum (CTR) ldiagdolabel ] cvx def
  /ZAREF ZFCTR ZXCTR ldiagangleto def
  /ZAMIN 0 dg def
  /ZPMIN [ circum (CTR) ldiagdolabel ZAREF ZAMIN add
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMIN add ldiagatangle
	 ldiagpadd ] cvx def

  /ZAMAX 90 dg def
  /ZPMAX [ circum (CTR) ldiagdolabel ZAREF ZAMAX add
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMAX add ldiagatangle
	 ldiagpadd ] cvx def

  1 1 20
  { /xval exch def
    /ZAMID ZAMIN ZAMAX add 0.5 mul def
    /ZPMID [ circum (CTR) ldiagdolabel ZAREF ZAMID add
	   circum (CIRCUM) ldiagdolabel ldiagpadd
	   0 0 extra ZAREF ZAMID add ldiagatangle
	   ldiagpadd ] cvx def
    ZPMID ZXCTR ldiagdistance ZFCTR ZXCTR ldiagdistance gt
    {
      /ZAMAX [ ZAMID ] cvx def
      /ZPMAX [ ZPMID ] cvx def
    }
    {
      /ZAMIN [ ZAMID ] cvx def
      /ZPMIN [ ZPMID ] cvx def
    } ifelse
  } for
  ZPMID
} def

% fromarrowlength toarrowlength { from } { to } xindent zindent ldiaglinepath -
/ldiaglinepath
{
  % (entering ldiaglinepath) 0 ldiagdebugprint
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagangleto
  /FROM@ANGLE ldiagangledef 
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  FROM@ANGLE /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg sub to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TO@ANGLE 180 dg sub ldiagatangle ldiagpadd /TO ldiagpointdef

  FROM 0.5 ldiagpmul TO 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  FROM@ANGLE /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  0 0 ZINDENT FROM@ANGLE ldiagatangle TO ldiagpsub /LTO ldiagpointdef
  FROM@ANGLE /LTO@ANGLE ldiagangledef

  direct { FROM TO } { FROM LFROM LMID LTO TO } ifelse

  % (leaving ldiaglinepath) 0 ldiagdebugprint
} def

% fromarrowlength toarrowlength { from } { to } xindent zindent pathgap ldiagdoublelinepath -
/ldiagdoublelinepath
{
  % (entering ldiagdoublelinepath) 0 ldiagdebugprint
  /pathgap exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagangleto
  /FROM@ANGLE ldiagangledef 
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  FROM@ANGLE /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg sub to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TO@ANGLE 180 dg sub ldiagatangle ldiagpadd /TO ldiagpointdef

  FROM 0.5 ldiagpmul TO 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  FROM@ANGLE /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  0 0 ZINDENT FROM@ANGLE ldiagatangle TO ldiagpsub /LTO ldiagpointdef
  FROM@ANGLE /LTO@ANGLE ldiagangledef

  direct {
    FROM pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    TO   pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    []
    FROM pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    TO   pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
  }
  {
    FROM  pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LFROM pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LMID  pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LTO   pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    TO    pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    []
    FROM  pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LFROM pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LMID  pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LTO   pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    TO    pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
  } ifelse

  % (leaving ldiagdoublelinepath) 0 ldiagdebugprint
} def

% fromarrowlen toarrowlen { from } { to } xindent zindent bias ldiagacurvepath -
/ldiagacurvepath
{
  % (entering ldiagacurvepath) 0 ldiagdebugprint
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  %/B1 bias 0.02 ft ldiagmax def
  %/B2 from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagdistance 0.5 mul def
  %/BIAS B1 B2 ldiagmin def
  /BIAS bias 0.02 ft ldiagmax def
  /XMID [ from (CTR) ldiagdolabel 0.5 ldiagpmul
	  to   (CTR) ldiagdolabel 0.5 ldiagpmul ldiagpadd ] cvx def
  /XTOP [ XMID 0 0 BIAS from (CTR) ldiagdolabel to (CTR) ldiagdolabel
	  ldiagangleto 90 dg sub ldiagatangle ldiagpadd ] cvx def
  /CTR [ from (CTR) ldiagdolabel XTOP ldiaglinebetween
	 to   (CTR) ldiagdolabel XTOP ldiaglinebetween
	 ldiaglineintersect ] cvx def

  from fromarrowlength [ CTR ] cvx ldiagaabout /FROM ldiagpointdef
  from (CTR) ldiagdolabel FROM ldiagdistance 0 gt
  { from (CTR) ldiagdolabel FROM ldiagangleto
  }
  { CTR FROM ldiagangleto 90 dg add
  } ifelse /FROM@ANGLE ldiagangledef

  to toarrowlength [ CTR ] cvx ldiagcabout /TO ldiagpointdef
  TO to (CTR) ldiagdolabel ldiagdistance 0 gt
  { TO to (CTR) ldiagdolabel ldiagangleto
  }
  { CTR TO ldiagangleto 90 dg add
  } ifelse /TO@ANGLE ldiagangledef

  /RADIUS CTR FROM ldiagdistance def
  CTR 0 0 RADIUS CTR FROM ldiagangleto 360 dg CTR TO ldiagangleto
  add CTR FROM ldiagangleto sub cvi 360 mod 0.5 mul add
  ldiagatangle ldiagpadd /LMID ldiagpointdef
  CTR LMID ldiagangleto 90 dg add /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  CTR 0 0 RADIUS CTR FROM 0 0 XINDENT FROM@ANGLE ldiagatangle
  ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LFROM ldiagpointdef
  CTR LFROM ldiagangleto 90 dg add /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  CTR 0 0 RADIUS CTR TO 0 0 ZINDENT TO@ANGLE 180 dg add
  ldiagatangle ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LTO ldiagpointdef
  CTR LTO ldiagangleto 90 dg add /LTO@ANGLE ldiagangledef

  direct
  { FROM [CTR] TO }
  { FROM [CTR] LFROM [CTR] LMID [CTR] LTO [CTR] TO }
  ifelse

  % (leaving ldiagacurvepath) 0 ldiagdebugprint
} def

% fromarrowlen toarrowlen { from } { to } xindent zindent bias ldiagccurvepath -
/ldiagccurvepath
{
  % (entering ldiagccurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  %/B1 bias 0.02 ft ldiagmax def
  %/B2 from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagdistance 0.5 mul def
  %/BIAS B1 B2 ldiagmin def
  /BIAS bias 0.02 ft ldiagmax def
  /XMID [ from (CTR) ldiagdolabel 0.5 ldiagpmul
	to (CTR) ldiagdolabel 0.5 ldiagpmul ldiagpadd ] cvx def
  /XTOP [ XMID 0 0 BIAS from (CTR) ldiagdolabel to (CTR) ldiagdolabel
	ldiagangleto 90 dg add ldiagatangle ldiagpadd ] cvx def
  /CTR [ from (CTR) ldiagdolabel XTOP ldiaglinebetween
         to (CTR) ldiagdolabel XTOP ldiaglinebetween ldiaglineintersect ] cvx def

  from fromarrowlength [ CTR ] cvx ldiagcabout /FROM ldiagpointdef
  from (CTR) ldiagdolabel FROM ldiagdistance 0 gt
  { from (CTR) ldiagdolabel FROM ldiagangleto }
  { CTR FROM ldiagangleto 90 dg sub }
  ifelse /FROM@ANGLE ldiagangledef

  to toarrowlength [ CTR ] cvx ldiagaabout /TO ldiagpointdef
  TO to (CTR) ldiagdolabel ldiagdistance 0 gt
  { TO to (CTR) ldiagdolabel ldiagangleto }
  { CTR TO ldiagangleto 90 dg sub }
  ifelse /TO@ANGLE ldiagangledef

  /RADIUS [ CTR FROM ldiagdistance ] cvx def
  CTR 0 0 RADIUS CTR TO ldiagangleto 360 dg CTR FROM ldiagangleto add
  CTR TO ldiagangleto sub cvi 360 cvi mod 2 div add ldiagatangle
  ldiagpadd /LMID ldiagpointdef
  CTR LMID ldiagangleto 90 dg sub /LMID@ANGLE ldiagangledef

  /XINDENT [ xindent FROM LMID ldiagdistance ldiagmin ] cvx def
  CTR 0 0 RADIUS CTR FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd
  ldiagangleto ldiagatangle ldiagpadd /LFROM ldiagpointdef
  CTR LFROM ldiagangleto 90 dg sub /LFROM@ANGLE ldiagangledef

  /ZINDENT [ zindent TO LMID ldiagdistance ldiagmin ] cvx def
  CTR 0 0 RADIUS CTR TO 0 0 ZINDENT TO@ANGLE 180 dg add ldiagatangle
  ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LTO ldiagpointdef
  CTR LTO ldiagangleto 90 dg sub /LTO@ANGLE ldiagangledef

  direct
  { FROM [CTR clockwise] TO }
  { FROM [CTR clockwise] LFROM [CTR clockwise]
  LMID [CTR clockwise] LTO [CTR clockwise] TO }
  ifelse
  % (leaving ldiagccurvepath) 0 ldiagdebugprint
} def


% farr tarr { from } { to } xindent zindent [frompt] [topt] ldiagbezierpath -
/ldiagbezierpath
{
  % (entering ldiagbezierpath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  cvx /topt exch def
  cvx /frompt exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel frompt ldiagangleto /FROM@ANGLE ldiagangledef
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel
  ldiagpadd 0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  topt to (CTR) ldiagdolabel ldiagangleto /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg add to (CIRCUM) ldiagdolabel
  ldiagpadd 0 0 toarrowlength TO@ANGLE 180 dg add ldiagatangle ldiagpadd
  /TO ldiagpointdef

  FROM 0 0 xindent FROM@ANGLE ldiagatangle ldiagpadd
  /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  TO 0 0 zindent TO@ANGLE 180 dg add ldiagatangle ldiagpadd
  /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  FROM TO ldiagpadd frompt ldiagpadd topt ldiagpadd 0.25 ldiagpmul
  /LMID ldiagpointdef

  FROM [frompt topt] TO

  % (leaving ldiagbezierpath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent ldiagvhlinepath -
/ldiagvhlinepath
{
  % (entering ldiagvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /XINDENT [ xindent FDIST ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST ldiagmin ] cvx def
  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  CTR /LMID ldiagpointdef
  0 0 1 ft FANG 180 dg add ldiagatangle
  0 0 1 ft TANG 180 dg add ldiagatangle
  ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM LMID LTO TO

  % (leaving ldiagvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent radius ldiagvhcurvepath -
/ldiagvhcurvepath
{
  % (entering ldiagvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /RADIUS [ radius FDIST TDIST ldiagmin ldiagmin ] cvx def
  /XINDENT [ xindent FDIST RADIUS sub ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST RADIUS sub ldiagmin ] cvx def

  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  /FCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd ] cvx def
  /TCTR [ CTR 0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  /XCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd
              0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  XCTR 0 0 RADIUS XCTR CTR ldiagangleto ldiagatangle ldiagpadd
  /LMID ldiagpointdef
  FCTR TCTR ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM FCTR
  {[XCTR clockwise]} {} {} {} {} {[XCTR]} {[XCTR clockwise]} {[XCTR]}
  FCTR TCTR ldiagangleto ldiagquadcase
  TCTR LTO TO

  % (leaving ldiagvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent ldiaghvlinepath -
/ldiaghvlinepath
{
  % (entering ldiaghvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ to (CTR) ldiagdolabel pop from (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /XINDENT [ xindent FDIST ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST ldiagmin ] cvx def

  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  CTR /LMID ldiagpointdef
  0 0 1 ft FANG 180 dg add ldiagatangle
  0 0 1 ft TANG 180 dg add ldiagatangle ldiagangleto
  /LMID@ANGLE ldiagangledef

  FROM LFROM LMID LTO TO

  % (leaving ldiaghvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent radius ldiaghvcurvepath -
/ldiaghvcurvepath
{
  % (entering ldiaghvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ to (CTR) ldiagdolabel pop from (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /RADIUS [ radius FDIST TDIST ldiagmin ldiagmin ] cvx def
  /XINDENT [ xindent FDIST RADIUS sub ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST RADIUS sub ldiagmin ] cvx def
  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  /FCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd ] cvx def
  /TCTR [ CTR 0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  /XCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd
	      0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  XCTR 0 0 RADIUS XCTR CTR ldiagangleto ldiagatangle ldiagpadd
  /LMID ldiagpointdef
  FCTR TCTR ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM FCTR
  {[XCTR]} {} {} {} {} {[XCTR clockwise]} {[XCTR]} {[XCTR clockwise]}
  FCTR TCTR ldiagangleto ldiagquadcase
  TCTR LTO TO

  % (leaving ldiaghvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiaglvrlinepath -
/ldiaglvrlinepath
{
  % (entering ldiaglvrlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 180 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 180 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  180 dg /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel 180 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 180 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  0 dg /TO@ANGLE ldiagangledef

  /XLEFT [ FROM pop TO pop ldiagmin bias sub ] cvx def
  XLEFT FROM exch pop /P1 ldiagpointdef
  XLEFT TO exch pop /P2 ldiagpointdef
  /VERT [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 180 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 0 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef

  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef

  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  XINDENT 0 FROM ldiagpsub /LFROM ldiagpointdef
  180 dg /LFROM@ANGLE ldiagangledef
  ZINDENT 0 TO ldiagpsub /LTO ldiagpointdef
  0 dg /LTO@ANGLE ldiagangledef

  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiaglvrlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias radius ldiaglvrcurvepath -
/ldiaglvrcurvepath
{
  % (entering ldiaglvrcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 180 dg from (CIRCUM) ldiagdolabel ldiagpadd 0 0
  fromarrowlength 180 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  180 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 180 dg to (CIRCUM) ldiagdolabel ldiagpadd 0 0
  toarrowlength 180 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  0 dg /TO@ANGLE ldiagangledef
  /XLEFT [ FROM pop TO pop ldiagmin bias sub ] cvx def
  /XP1 [ XLEFT FROM exch pop ] cvx def
  /XP2 [ XLEFT TO exch pop ] cvx def
  /VERT [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  XINDENT 0 FROM ldiagpsub /LFROM ldiagpointdef
  180 dg /LFROM@ANGLE ldiagangledef
  ZINDENT 0 TO ldiagpsub /LTO ldiagpointdef
  0 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {  } { [XP1CTR] P1 [XP1CTR] } {  } { [XP1CTR clockwise] P1 [XP1CTR clockwise] }
  {  } {  } {  } {  } VERT round ldiagquadcase
  XP1POST LMID XP2PRE
  {  } { [XP2CTR] P2 [XP2CTR] } {  } { [XP2CTR clockwise] P2 [XP2CTR clockwise] }
  {  } {  } {  } {  } VERT round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiaglvrcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiagrvllinepath -
/ldiagrvllinepath
{
  % (entering ldiagrvllinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 0 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 0 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  0 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 0 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 0 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  180 dg /TO@ANGLE ldiagangledef
  /XRIGHT [ FROM pop TO pop ldiagmax bias add ] cvx def
  XRIGHT FROM exch pop /P1 ldiagpointdef
  XRIGHT TO exch pop /P2 ldiagpointdef
  /VERT [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 0 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 180 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM XINDENT 0 ldiagpadd /LFROM ldiagpointdef
  0 dg /LFROM@ANGLE ldiagangledef
  TO ZINDENT 0 ldiagpadd /LTO ldiagpointdef
  180 dg /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiagrvllinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent bias radius ldiagrvlcurvepath -
/ldiagrvlcurvepath
{
  % (entering ldiagrvlcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 0 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 0 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  0 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 0 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 0 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  180 dg /TO@ANGLE ldiagangledef
  /XRIGHT [ FROM pop TO pop ldiagmax bias add ] cvx def
  /XP1 [ XRIGHT FROM exch pop ] cvx def
  /XP2 [ XRIGHT TO exch pop ] cvx def
  /VERT [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM XINDENT 0 ldiagpadd /LFROM ldiagpointdef
  0 dg /LFROM@ANGLE ldiagangledef
  TO ZINDENT 0 ldiagpadd /LTO ldiagpointdef
  180 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 0.5 mul ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {} {[XP1CTR clockwise] P1 [XP1CTR clockwise]} {} {[XP1CTR] P1 [XP1CTR]}
  {} {} {} {} VERT round ldiagquadcase
  XP1POST LMID XP2PRE
  {} {[XP2CTR clockwise] P2 [XP2CTR clockwise]} {} {[XP2CTR] P2 [XP2CTR]}
  {} {} {} {} VERT round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiagrvlcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent hfrac hbias ldiaghvhlinepath -
/ldiaghvhlinepath % still to do
{
  % (entering ldiaghvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 0 dg } { 180 dg } { 180 dg } { 0 dg }
  { 0 dg } { 0 dg } { 180 dg } { 180 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg add ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM pop TO pop sub abs hfrac mul hbias add ] cvx def
  FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  P1 pop TO exch pop /P2 ldiagpointdef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  P1 P2 ldiagangleto /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiaghvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent hfrac hbias radius ldiaghvhcurvepath -
/ldiaghvhcurvepath % still to do
{
  % (entering ldiaghvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 0 dg } { 180 dg } { 180 dg } { 0 dg }
  { 0 dg } { 0 dg } { 180 dg } { 180 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg add ] cvx def

  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef

  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM pop TO pop sub abs hfrac mul hbias add ] cvx def
  /XP1 [ FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2 [ XP1 pop TO exch pop ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  /VERT [ XP1 XP2 ldiagangleto round ] cvx def
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS TODIRN ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ 0 0 RADIUS VERT ldiagatangle XP2POST ldiagpsub ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  VERT FRDIRN sub 90 eq
  { /P1GO [ anticlockwise ] cvx def /P2GO [ clockwise ] cvx def }
  { /P1GO [ clockwise ] cvx def /P2GO [ anticlockwise ] cvx def }
  ifelse
  FROM LFROM
  XP1PRE [XP1CTR P1GO] P1 [XP1CTR P1GO] XP1POST
  LMID
  XP2PRE [XP2CTR P2GO] P2 [XP2CTR P2GO] XP2POST
  LTO TO

  % (leaving ldiaghvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent hfrac hbias ldiagvhvlinepath -
/ldiagvhvlinepath % still to do
{
  % (entering ldiagvhvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 90 dg } { 270 dg } { 270 dg } { 0 dg }
  { 90 dg } { 270 dg } { 270 dg } { 90 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg sub ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM exch pop TO exch pop sub abs hfrac mul hbias ft add ] cvx def
  FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  TO pop P1 exch pop /P2 ldiagpointdef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  P1 P2 ldiagangleto /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiagvhvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent hfrac hbias radius ldiagvhvcurvepath -
/ldiagvhvcurvepath % still to do
{
  % (entering ldiagvhvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 90 dg } { 270 dg } { 270 dg } { 0 dg }
  { 90 dg } { 270 dg } { 270 dg } { 90 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg sub ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM exch pop TO exch pop sub abs hfrac mul hbias add ] cvx def
  /XP1 [ FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2 [ TO pop XP1 exch pop ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  /VERT [ XP1 XP2 ldiagangleto round ] cvx def
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS TODIRN ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ 0 0 RADIUS VERT ldiagatangle XP2POST ldiagpsub ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FRDIRN VERT sub 90 eq
  { /P1GO [ clockwise ] cvx def /P2GO [ anticlockwise ] cvx def }
  { /P1GO [ anticlockwise ] cvx def /P2GO [ clockwise ] cvx def }
  ifelse
  FROM LFROM
  XP1PRE [XP1CTR P1GO] P1 [XP1CTR P1GO] XP1POST
  LMID
  XP2PRE [XP2CTR P2GO] P2 [XP2CTR P2GO] XP2POST
  LTO TO


  % (leaving ldiagvhvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias ldiagdwraplinepath -
/ldiagdwraplinepath
{
  % (entering ldiagdwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop
  lt { 180 dg } { 0 dg } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd 0 0
  fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  DIRN 180 dg eq { 225 dg } { -45 dg } ifelse /P1@ANGLE ldiagangledef
  TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd
  /P4 ldiagpointdef
  DIRN 180 dg eq { 135 dg } { 45 dg } ifelse /P4@ANGLE ldiagangledef
  /YC [ from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmin bias 0 ldiagmax sub ] cvx def
  P1 pop YC /P2 ldiagpointdef
  P4@ANGLE 180 dg sub /P2@ANGLE ldiagangledef
  P4 pop YC /P3 ldiagpointdef
  P1@ANGLE 180 dg sub /P3@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  /ZINDENT [ zindent TO P4 ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  P2 0.5 ldiagpmul P3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  FROM P1 P2 P3 P4 TO

  % (leaving ldiagdwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias radius
% ldiagdwrapcurvepath -
/ldiagdwrapcurvepath
{
  % (entering ldiagdwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  /CLOCK [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { anticlockwise } { clockwise } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  /XP1 [ FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd ] cvx def
  /XP4 [ TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd ] cvx def
  /YC [ from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmin bias 0 ldiagmax sub ] cvx def
  /XP2 [ XP1 pop YC ] cvx def
  /XP3 [ XP4 pop YC ] cvx def
  /RP1 [ radius XP1 FROM ldiagdistance XP1 XP2 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RP1 XP1 FROM ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RP1 XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1CTR P1 ldiagangleto DIRN add 90 dg sub /P1@ANGLE ldiagangledef
  /RP2 [ radius XP1 XP2 ldiagdistance 2 div XP2 XP3 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP2PRE [ XP2 0 0 RP2 XP2 XP1 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2POST [ XP2 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RP2 XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2CTR P2 ldiagangleto DIRN add 90 dg sub /P2@ANGLE ldiagangledef
  /RP3 [ radius XP2 XP3 ldiagdistance 2 div XP3 XP4 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP3PRE [ XP3 0 0 RP3 XP3 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3POST [ XP3 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3CTR [ XP3PRE 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP3CTR 0 0 RP3 XP3CTR XP3 ldiagangleto ldiagatangle ldiagpadd /P3 ldiagpointdef
  XP3CTR P3 ldiagangleto DIRN add 90 dg sub /P3@ANGLE ldiagangledef
  /RP4 [ radius XP4 XP3 ldiagdistance 2 div XP4 TO ldiagdistance
  ldiagmin ldiagmin ] cvx def
  /XP4PRE [ XP4 0 0 RP4 XP4 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4POST [ XP4 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4CTR [ XP4PRE 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP4CTR 0 0 RP4 XP4CTR XP4 ldiagangleto ldiagatangle ldiagpadd /P4 ldiagpointdef
  XP4CTR P4 ldiagangleto DIRN add 90 dg sub /P4@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1PRE ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  XP2 0.5 ldiagpmul XP3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  /ZINDENT [ zindent TO XP4POST ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  FROM LFROM
  XP1PRE [XP1CTR CLOCK] XP1POST
  XP2PRE [XP2CTR CLOCK] XP2POST
  LMID
  XP3PRE [XP3CTR CLOCK] XP3POST
  XP4PRE [XP4CTR CLOCK] XP4POST
  LTO TO

  % (leaving ldiagdwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias ldiaguwraplinepath -
/ldiaguwraplinepath
{
  % (entering ldiaguwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  DIRN 180 dg eq { 135 dg } { 45 dg } ifelse /P1@ANGLE ldiagangledef
  TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd
  /P4 ldiagpointdef
  DIRN 180 dg eq { 225 dg } { -45 dg } ifelse /P4@ANGLE ldiagangledef
  /YC [ from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmax bias 0 ldiagmax add ] cvx def
  P1 pop YC /P2 ldiagpointdef
  P4@ANGLE 180 dg sub /P2@ANGLE ldiagangledef
  P4 pop YC /P3 ldiagpointdef
  P1@ANGLE 180 dg sub /P3@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  /ZINDENT [ zindent TO P4 ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  P2 0.5 ldiagpmul P3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  FROM P1 P2 P3 P4 TO

  % (leaving ldiaguwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias radius
% ldiaguwrapcurvepath -
/ldiaguwrapcurvepath
{
  % (entering ldiaguwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  /CLOCK [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { clockwise } { anticlockwise } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  /XP1 [ FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd ] cvx def
  /XP4 [ TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd ] cvx def
  /YC [ from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmax bias 0 ldiagmax add ] cvx def
  /XP2 [ XP1 pop YC ] cvx def
  /XP3 [ XP4 pop YC ] cvx def
  /RP1 [ radius XP1 FROM ldiagdistance XP1 XP2 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RP1 XP1 FROM ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RP1 XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1CTR P1 ldiagangleto DIRN add 90 dg add /P1@ANGLE ldiagangledef
  /RP2 [ radius XP1 XP2 ldiagdistance 2 div XP2 XP3 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP2PRE [ XP2 0 0 RP2 XP2 XP1 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2POST [ XP2 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RP2 XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2CTR P2 ldiagangleto DIRN add 90 dg add /P2@ANGLE ldiagangledef
  /RP3 [ radius XP2 XP3 ldiagdistance 2 div XP3 XP4 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP3PRE [ XP3 0 0 RP3 XP3 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3POST [ XP3 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3CTR [ XP3PRE 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP3CTR 0 0 RP3 XP3CTR XP3 ldiagangleto ldiagatangle ldiagpadd /P3 ldiagpointdef
  XP3CTR P3 ldiagangleto DIRN add 90 dg add /P3@ANGLE ldiagangledef
  /RP4 [ radius XP4 XP3 ldiagdistance 2 div XP4 TO ldiagdistance
  ldiagmin ldiagmin ] cvx def
  /XP4PRE [ XP4 0 0 RP4 XP4 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4POST [ XP4 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4CTR [ XP4PRE 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP4CTR 0 0 RP4 XP4CTR XP4 ldiagangleto ldiagatangle ldiagpadd /P4 ldiagpointdef
  XP4CTR P4 ldiagangleto DIRN add 90 dg add /P4@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1PRE ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  XP2 0.5 ldiagpmul XP3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  /ZINDENT [ zindent TO XP4POST ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  FROM LFROM
  XP1PRE [XP1CTR CLOCK] XP1POST
  XP2PRE [XP2CTR CLOCK] XP2POST
  LMID
  XP3PRE [XP3CTR CLOCK] XP3POST
  XP4PRE [XP4CTR CLOCK] XP4POST
  LTO TO

  % (leaving ldiaguwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% shape and labels of the @SolidArrowHead symbol
% - ldiagsolidarrowhead -
/ldiagsolidarrowhead
{
  0 0 xsize ysize 0.5 mul 0 ysize
} def

% shape and labels of the @OpenArrowHead symbol
% <pathwidth> ldiagopenarrowhead -
/ldiagopenarrowhead
{
  /pathwidth exch def
  /PSW [ 0 0 ] cvx def
  /PNW [ 0 ysize ] cvx def
  /PE  [ xsize ysize 0.5 mul ] cvx def
  /REL [ 0 0 pathwidth PE PNW ldiagangleto 90 add ldiagatangle ] cvx def
  /PNA [ 0 ysize 0.5 mul pathwidth 0.5 mul add ] cvx def
  /PSA [ 0 ysize 0.5 mul pathwidth 0.5 mul sub ] cvx def
  /PNI [ PNA PNA xsize 0 ldiagpadd PNW REL ldiagpadd
	 PE REL ldiagpadd ldiaglineintersect ] cvx def
  /PSI [ 0 pathwidth PNI ldiagpsub ] cvx def

  PSW PE PNW PNI PNA PSA PSI PSW
} def

% shape and labels of the @HalfOpenArrowHead symbol
% <pathwidth> ldiaghalfopenarrowhead -
/ldiaghalfopenarrowhead
{
  /pathwidth exch def
  0 0
  xsize ysize 0.5 mul
  0 ysize
  xsize 0.3 mul ysize 0.5 mul pathwidth 0.5 mul add
  0             ysize 0.5 mul pathwidth 0.5 mul add
  0             ysize 0.5 mul pathwidth 0.5 mul sub
  xsize 0.3 mul ysize 0.5 mul pathwidth 0.5 mul sub
  0 0
} def

% shape and labels of the @SolidCurvedArrowHead symbol
% - ldiagsolidcurvedarrowhead -
/ldiagsolidcurvedarrowhead
{
  0 0
  [0 0 xsize ysize 0.5 mul ldiaglinebetween
   xsize 0 xsize ysize ldiaglineintersect clockwise]
  xsize ysize 0.5 mul
  [xsize ysize 0.5 mul 0 ysize ldiaglinebetween
   xsize 0 xsize ysize ldiaglineintersect clockwise]
  0 ysize
} def

% shape and labels of the @OpenCurvedArrowHead symbol
% <pathwidth> ldiagopencurvedarrowhead -
/ldiagopencurvedarrowhead
{
  /pathwidth exch def
  /LR [ 0 0 xsize ysize 0.5 mul ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /UR [ xsize ysize 0.5 mul 0 ysize ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /PW2 [ pathwidth 0.5 mul ] cvx def
  /UMID [
      0 ysize 0.5 mul PW2 add
      xsize ysize 0.5 mul PW2 add
      0 ysize 0 0 1 ft UR 0 ysize ldiagangleto 90 add ldiagatangle
      ldiagpadd 0 ysize ldiaglineintersect
      ] cvx def
  /LMID [ 0 pathwidth UMID ldiagpsub ] cvx def
  0 0
  [LR clockwise]
  xsize ysize 0.5 mul
  [UR clockwise]
  0 ysize
  UMID
  0 ysize 0.5 mul PW2 add
  0 ysize 0.5 mul PW2 sub
  LMID
  0 0
} def

% shape and labels of the @HalfOpenCurvedArrowHead symbol
% <pathwidth> ldiaghalfopencurvedarrowhead -
/ldiaghalfopencurvedarrowhead
{
  /pathwidth exch def
  /LR [ 0 0 xsize ysize 0.5 mul ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /UR [ xsize ysize 0.5 mul 0 ysize ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /BR [ 0 0 LR 0 ysize UR ldiaglineintersect ] cvx def
  /BRAD [ 0 0 BR ldiagdistance ] cvx def
  /PW2 [ pathwidth 0.5 mul ] cvx def
  /XDIST [ BRAD dup mul PW2 dup mul sub sqrt ] cvx def
  /UMID [ BR XDIST PW2 ldiagpadd ] cvx def
  /LMID [ BR XDIST 0 PW2 sub ldiagpadd ] cvx def
  0 0
  [LR clockwise]
  xsize ysize 0.5 mul
  [UR clockwise]
  0 ysize
  [BR clockwise]
  UMID
  0 ysize 0.5 mul PW2 add
  0 ysize 0.5 mul PW2 sub
  LMID
  [BR clockwise]
  0 0
} def

end
%%EndResource

%%BeginResource: procset LoutBasicSetup
% @PrependGraphic file /usr/share/lout/include/bsf.lpg

% width height linethickness louteuro -
% draw a Euro symbol of this width and height with this line thickness
/louteuro {
  20 dict begin
    /eurothick exch def
    /euroheight exch def
    /eurowidth exch def
    /eurostrokewidth euroheight 0.8 mul def
    /eurostep eurothick 60 cos mul 60 sin div def
    /eurotheta 40 def

    % llx lly width thickness louteurobox -
    % draw angled box starting at (llx, lly) with given width and thickness
    /louteurobox
    {
      /euroboxthick exch def
      /euroboxwidth exch def
      newpath moveto euroboxwidth 0 rlineto
      eurostep euroboxthick rlineto
      euroboxwidth neg 0 rlineto closepath fill
    } def

    % lower cross stroke
    0 euroheight 2 div eurothick 1.5 mul sub
    eurostrokewidth eurothick louteurobox

    % upper cross stroke
    0 euroheight 2 div eurothick 0.5 mul add
    eurostrokewidth eurostep 2 mul add eurothick louteurobox

    % circular part
    /eurohctr eurowidth euroheight 2 div eurotheta cos mul sub def
    /eurovctr euroheight 2 div def
    newpath
    eurohctr eurovctr eurovctr eurotheta 350 eurotheta sub arc
    eurohctr eurovctr eurovctr eurothick sub 365 eurotheta sub eurotheta arcn
    closepath fill
  end
} def

% path for @FullWidthRule symbol
/LoutRule
{ 0 0 moveto xsize 0 lineto
} def

% path for @Box symbol
/LoutBox
{ 0 0 moveto xsize 0 lineto
  xsize ysize lineto 0 ysize lineto
  closepath
} def

% path for @CurveBox symbol
/LoutCurveBox
{ xmark 0 moveto
  xsize xmark sub xmark xmark 270 360 arc
  xsize xmark sub ysize xmark sub xmark 0 90 arc
  xmark ysize xmark sub xmark 90 180 arc
  xmark xmark xmark 180 270 arc
  closepath
} def

% path for @ShadowBox symbol
/LoutShadowBox
{ xmark 2 mul 0 moveto xsize 0 lineto
  xsize ysize xmark 2 mul sub lineto
  xsize xmark sub ysize xmark 2 mul sub lineto
  xsize xmark sub xmark lineto
  xmark 2 mul xmark lineto
  closepath
} def

% set up dictionary containing margin note data: parity LoutMargSet -
/LoutMargSet
{ /LoutMargDict 12 dict def
  LoutMargDict begin
    /parity exch def
    /matr matrix currentmatrix def
    /rightx xsize def
    /lefty ysize def   % highest allowable point for top of next left note
    /righty ysize def  % highest allowable point for top of next right note
    /max { 2 copy gt { pop } { exch pop } ifelse } def
    /min { 2 copy lt { pop } { exch pop } ifelse } def
  end
} def

%translate coordinate system for marginal notes:  type LoutMargShift -
% where type 0 is left margin, 1 is right margin, 2 is outer, 3 is inner
/LoutMargShift
{ LoutMargDict begin

    % y coordinate of top of note, in margin coords, before vertical adjust
    0 ysize transform matr itransform exch pop

    % decide whether left or right margin based on type and parity
    exch [ 0 1 parity 1 parity sub ] exch get 0 eq
    {
      % left margin: adjust top of note downwards if overlaps previous note
      lefty min

      % bottom of note is new lefty position and also translate position
      ysize sub dup /lefty exch def

      % want right edge of note at coordinate zero
      xsize neg exch
    }
    {
      % right margin: adjust top of note downwards if overlaps previous note
      righty min

      % bottom of note is new righty position and also translate position
      ysize sub dup /righty exch def

      % want left edge of note at coordinate rightx
      rightx exch
    } ifelse

    % stack now contains coord of bottom left corner in margin coordinates
    matr setmatrix translate
  end
} def

% create LoutPageDict with left, right, foot, top for @Place symbol users
/LoutPageSet
{
  /LoutPageDict 5 dict def
  LoutPageDict begin
    /matr matrix currentmatrix def
    /left 0 def
    /right xsize def
    /foot 0 def
    /top ysize def
  end

} def

%%EndResource

%%EndProlog

%%BeginSetup
%%BeginResource: encoding vec2
/vec2 [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/quotesinglbase /quotedblbase /ellipsis /OE /oe /quotedblleft /quotedblright /fi
/fl /endash /emdash /bullet /dagger /daggerdbl /florin /fraction
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
%%EndResource

/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
%%EndSetup

%%Page: ? 1
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Times-Italic
%%+ font Symbol
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
%%IncludeResource: font Symbol
/fnt2 { /Symbol LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup

gsave
0 0 translate
240 fnt1 0.0 0.0 0.0 setrgbcolor 5670 4536 0 4536 240 288 60 LoutGraphic
gsave

200 ldiagbegin
grestore
5670 4536 0 4536 240 288 60 0 0 LoutGr2
grestore

gsave xsize ysize lgraphdict begin /ysize exch def /xsize exch def
/alldata [  ] def
0 [  ] 0 alldata -2 2 0
1.4 cm false false 0.5 ft xset
0 [  ] 1 alldata 2 10 0
0.7 cm false false 0.5 ft yset
norset
rundata nonestyle
grestore
1222 644 0 644 240 288 60 0 -644 LoutGr2
0 10 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1078 500 539 250 240 288 60 72 72 LoutGr2
(NZ) ldiagpushtagdict
grestore
1078 500 539 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2 320 189(\()m 240 fnt3
404 197(t)m 240 fnt2 486 189(,)m 593(1)s 240 fnt3
699 197(|z)m 240 fnt2 868 189(\))m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1828 646 0 646 240 288 60 0 -646 LoutGr2
0 8 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1684 502 842 251 240 288 60 72 72 LoutGr2
(DNZ) ldiagpushtagdict
grestore
1684 502 842 251 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(vAbo)k 3(v)k 3(e)k
240 fnt2 1151 189(\()m 240 fnt3 1235 197(t)m 1317(|)s
1371(z)s 240 fnt2 1474 189(\))m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1392 644 0 644 240 288 60 0 -644 LoutGr2
-2 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1248 500 624 250 240 288 60 72 72 LoutGr2
(NZ0) ldiagpushtagdict
grestore
1248 500 624 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m
240 fnt2 320 189(\()m 240 fnt3 404 197(t)m 240 fnt2
486 189(,)m 593(1)s 240 fnt3 699 197(|z|)m 240 fnt2
912 189(0)m 1038(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1372 644 0 644 240 288 60 0 -644 LoutGr2
2 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1228 500 614 250 240 288 60 72 72 LoutGr2
(NZ1) ldiagpushtagdict
grestore
1228 500 614 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagellipse ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 197(V)m 240 fnt2
320 189(\()m 240 fnt3 404 197(t)m 240 fnt2 486 189(,)m
593(1)s 240 fnt3 699 197(|z|)m 240 fnt2 912 189(1)m
1018(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1376 644 0 644 240 288 60 0 -644 LoutGr2
-2 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1232 500 616 250 240 288 60 72 72 LoutGr2
(R0) ldiagpushtagdict
grestore
1232 500 616 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k 240 fnt2 517 189(\()m
240 fnt3 601 197(t)m 683(|z|)s 240 fnt2 896 189(0)m
1022(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1356 644 0 644 240 288 60 0 -644 LoutGr2
2 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1212 500 606 250 240 288 60 72 72 LoutGr2
(R1) ldiagpushtagdict
grestore
1212 500 606 250 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(v)k 240 fnt2 517 189(\()m
240 fnt3 601 197(t)m 683(|z|)s 240 fnt2 896 189(1)m
1002(\))s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
1592 646 0 646 240 288 60 0 -646 LoutGr2
0 2 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
1448 502 724 251 240 288 60 72 72 LoutGr2
(RR) ldiagpushtagdict
grestore
1448 502 724 251 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
144 195(Le)m 6(vP)k 3(air)k 240 fnt2
903 189(\()m 240 fnt3 987 197(t)m 1069(|z)s 240 fnt2
1238 189(\))m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
end

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ NZ } { DNZ }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
445 352 48 201 240 288 60 -48 -201 LoutGr2
(LABEL) ldiagpushtagdict
grestore
445 352 48 201 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
445 352 48 201 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 149(D)m 167 fnt2 216 57(1)m
167 fnt3 289 62(|z)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
445 352 48 201 240 288 60 -48 -201 LoutGr2
(LABEL) ldiagpushtagdict
grestore
445 352 48 201 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
445 352 48 201 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 149(D)m 167 fnt2
216 57(1)m 167 fnt3 289 62(|z)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ DNZ } { NZ0 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
250 251 48 100 240 288 60 -48 -100 LoutGr2
(LABEL) ldiagpushtagdict
grestore
250 251 48 100 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
250 251 48 100 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 48(F)m
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
250 251 48 100 240 288 60 -48 -100 LoutGr2
(LABEL) ldiagpushtagdict
grestore
250 251 48 100 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
250 251 48 100 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 48(F)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ DNZ } { NZ1 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
269 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
269 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
269 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(G)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } { (SE) } { (SW) } { (SW) } { (NW) }
{ (SE) } { (SW) } { (SE) } { (SW) } { LTO } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel LTO ldiagpsub 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
269 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
269 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
269 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3
48 53(G)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ NZ0 } { R0 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ NZ1 } { R1 }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
0 dg rotate 1 1 scale newpath clip gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
/XP1 [ { LABEL } { (SE) } { (W) } { (S) } { (W) }
{ (S) } { (SW) } { (SE) } { (SW) } { LMID } (ANGLE) ldiagdolabel ldiagquadcase ldiagdolabel ] cvx def
/XP2 [ { LABEL } (CTR) ldiagdolabel ] cvx def
/XANG [ { LMID } (ANGLE) ldiagdolabel ] cvx def
/XTH [ XANG 90 dg sub XP1 XP2 ldiagangleto sub ] cvx def
/XDIST [ XP1 XP2 ldiagdistance XTH sin mul ] cvx def
XP1 LMID ldiagpsub 0 0 XDIST XANG ldiagatangle ldiagpadd 0 0 ldiagpadd translate 0 dg rotate 1 1 scale gsave
grestore
261 260 48 105 240 288 60 -48 -105 LoutGr2
(LABEL) ldiagpushtagdict
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
261 260 48 105 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
240 fnt3 48 53(C)m ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ R0 } { RR }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
5670 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ R1 } { RR }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
5670 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
ldiagend

grestore

pgsave restore
showpage

%%Trailer
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Italic
%%+ font Symbol
%%DocumentSuppliedResources: procset LoutStartUp
%%+  procset LoutGraphPrependGraphic
%%+  procset LoutTabPrependGraphic
%%+  procset LoutDiagPrependGraphic
%%+  procset LoutBasicSetup
%%+ encoding vec2
%%Pages: 1
%%EOF

%%EndDocument
 @endspecial 1077 1791 a
 currentpoint currentpoint translate 1 0.75256 div 1 0.75256 div scale
neg exch neg exch translate
 1077 1791 a 523 1965 a Fl(Fig.)14
b(2.)21 b Fn(Final)i(stage)g(of)g(LevP)n(air)g(output;)e(LevAb)r(o)n(v)
n(e)g(\014nds)g(the)h(last)h(common)f(ancestor)h(of)g(the)523
2057 y(pair.)648 2348 y Fr(This)f(structure)f(giv)n(es)g(us)h(our)f
(\014rst)h(distinguisher.)g(Though)f(P)n(airCom)g(has)g(the)i(same)523
2448 y(domain)d(as)h(range,)e(it)i(is)g(not)g(in)g(general)e(bijectiv)n
(e;)i(it)h(can)e(b)r(e)h(mo)r(delled)g(more)f(accurately)523
2547 y(as)27 b(a)h(random)f(function.)i(Th)n(us)f(a)f(collision)g(can)h
(o)r(ccur)f(in)i(LevP)n(air,)d(giv)n(en)h(t)n(w)n(o)g(distinct)523
2647 y(inputs,)f(if)h(there)f(is)f(a)h(collision)f(either)g(in)h(LevAb)
r(o)n(v)n(e)f(or)g(in)h(P)n(airCom,)e(and)i(if)g(w)n(e)g(mo)r(del)523
2747 y(b)r(oth)h(as)g(random)f(functions)h(the)g(probabilit)n(y)f(of)h
(an)g(output)g(collision)f(for)h(t)n(w)n(o)f(random)523
2846 y(distinct)e(inputs)g(to)g(LevP)n(air)d(is)j(th)n(us)f(appro)n
(ximately)f(2)2317 2816 y Fe(\000)p Fq(2)p Fp(n)2457
2846 y Fr(+)10 b(\(1)g Fj(\000)g Fr(2)2733 2816 y Fe(\000)p
Fq(2)p Fp(n)2862 2846 y Fr(\)2)2936 2816 y Fe(\000)p
Fq(2)p Fp(n)3089 2846 y Fj(\031)23 b Fr(2)3219 2816 y
Fq(1)p Fe(\000)p Fq(2)p Fp(n)3382 2846 y Fr(,)523 2946
y(t)n(wice)28 b(what)f(it)h(should)f(b)r(e)h(if)h(the)f(k)n(eystream)e
(w)n(ere)g(a)h(random)g(binary)g(string.)648 3048 y(F)-7
b(or)21 b Fi(n)i Fr(=)g(32,)e(this)i(increased)e(probabilit)n(y)g(of)i
(collisions)e(b)r(et)n(w)n(een)h(output)h(w)n(ord)e(pairs)523
3148 y(can)i(b)r(e)g(observ)n(ed)e(with)j(a)e(birthda)n(y)g(attac)n(k)g
(after)h(around)f(2)2457 3117 y Fq(33)2550 3148 y Fr(output)h(pairs)f
(\(2)3090 3117 y Fq(36)3183 3148 y Fr(b)n(ytes\))523
3247 y(ha)n(v)n(e)30 b(b)r(een)i(generated;)f(the)h(tec)n(hniques)f(of)
g([8])g(ma)n(y)g(b)r(e)h(used)g(to)f(reduce)g(the)h(memory)523
3347 y(demands)21 b(of)f(this)h(attac)n(k,)f(though)h(this)g(slo)n(ws)e
(the)j(attac)n(k)d(b)n(y)i(a)f(factor)g(of)h(appro)n(ximately)523
3447 y(\()p Fi(h)7 b Fr(+)g(1\))p Fi(=)p Fr(4)22 b(=)h(4)p
Fi(:)p Fr(25)d(where)i Fi(h)g Fr(is)g(the)g(heigh)n(t)g(of)g(the)g
(tree,)g(since)f(prob)r(es)h(can)f(no)h(longer)f(tak)n(e)523
3546 y(adv)-5 b(an)n(tage)26 b(of)i(the)g(higher)f(e\016ciency)g(of)h
(sampling)f(consecutiv)n(e)f(v)-5 b(alues)27 b(of)h(LevP)n(air.)523
3824 y Fk(3)112 b(S-Bo)m(x)38 b(Matc)m(hing)g(A)m(ttac)m(k)523
4036 y Fr(The)31 b(de\014nitions)g(of)g(the)h Fi(F)43
b Fr(and)31 b Fi(G)g Fr(functions)h(are)e(v)n(ery)g(similar;)g
Fi(G)i Fr(is)f(the)g(same)g(as)f Fi(F)523 4136 y Fr(except)i(that)g(it)
g(treats)e(its)i(inputs)g(in)g(the)g(opp)r(osite)f(order,)g(and)g(in)n
(v)n(erts)g(one)g(of)g(them.)523 4235 y(If)38 b Fi(G)f
Fr(did)h(not)f(apply)f(bit)n(wise)h(in)n(v)n(ersion)f(to)h(its)g
(\014rst)g(input)h(\(call)f(this)g(function)h Fi(G)3326
4205 y Fe(0)3350 4235 y Fr(\),)523 4335 y(then)31 b(the)g(t)n(w)n(o)e
(functions)i(w)n(ould)f(b)r(e)g(related)g(b)n(y)g Fi(F)i
Fj(\016)20 b Fr(Sw)n(ap)27 b(=)g(Sw)n(ap)20 b Fj(\016)f
Fi(G)2935 4305 y Fe(0)2989 4335 y Fr(\(with)32 b(Sw)n(ap)523
4435 y(ha)n(ving)24 b(the)h(ob)n(vious)f(de\014nition)h(Sw)n(ap)o(\()p
Fi(x;)14 b(y)s Fr(\))24 b(=)f(\()p Fi(y)s(;)14 b(x)p
Fr(\)\);)25 b(this)h(w)n(ould)e(mean)h(in)g(turn)g(that)523
4534 y Fi(F)12 b Fr(\()p Fi(a;)i(a)p Fr(\))39 b(=)f(Sw)n(ap)o(\()p
Fi(G)1207 4504 y Fe(0)1231 4534 y Fr(\()p Fi(a;)14 b(a)p
Fr(\)\))38 b(for)e(an)n(y)g Fi(a)p Fr(,)h(and)g(th)n(us)g(that)g
Fi(C)6 b Fr(\()p Fi(F)12 b Fr(\()p Fi(a;)i(a)p Fr(\)\))40
b(=)e Fi(C)6 b Fr(\()p Fi(G)3136 4504 y Fe(0)3160 4534
y Fr(\()p Fi(a;)14 b(a)p Fr(\)\),)523 4634 y(with)31
b(the)f(result,)g(as)g(w)n(e)g(shall)g(see,)g(that)g(rep)r(eating)g
(pairs)f(w)n(ere)g(visible)h(in)h(the)f(output)523 4733
y(roughly)f(t)n(wice)g(as)h(often)g(as)f(they)h(should)g(b)r(e.)g(The)g
(in)n(v)n(ersion)f(on)g(the)h(\014rst)g(input)h(of)f
Fi(G)523 4833 y Fr(breaks)g(this)h(symmetry;)g(ho)n(w)n(ev)n(er,)d(it)k
(turns)f(out)g(that)g(it)g(do)r(es)g(not)g(prev)n(en)n(t)f(a)h(related)
523 4933 y(attac)n(k.)p eop
%%Page: 5 5
5 4 bop 1756 241 a Fn(Bias)27 b(in)f(the)f(LEVIA)-6 b(THAN)23
b(Stream)j(Cipher)238 b(5)648 457 y Fr(Computation)36
b(of)g(P)n(airCom)f(requires)g(32)g(S-b)r(o)n(x)h(lo)r(okups,)g(but)h
(for)f(eac)n(h)f(compu-)523 556 y(tation)c(of)g(the)g
Fi(S)36 b Fr(function)31 b(the)g(same)g(8-bit)f(index,)i(dra)n(wn)d
(from)i(the)g(least)g(signi\014can)n(t)523 656 y(b)n(yte,)k(is)f(fed)i
(to)e(eac)n(h)g(of)h(the)g(four)f(S-b)r(o)n(xes.)g(Changes)g(to)g(the)h
(other)g(b)n(ytes)f(carry)f(di-)523 756 y(rectly)39 b(in)n(to)h(the)g
(output)h(of)f Fi(S)5 b Fr(,)39 b(without)h(nonlinearit)n(y)f(or)g
(mixing;)h(in)g(other)f(w)n(ords,)523 855 y(where)29
b Fi(\001x)d Fr(=)g Fi(\001x)1114 867 y Fq(3)1152 855
y Fj(j)p Fi(\001x)1291 867 y Fq(2)1329 855 y Fj(j)p Fi(\001x)1468
867 y Fq(1)1506 855 y Fj(j)p Fr(0)1571 825 y Fp(n=)p
Fq(4)1683 855 y Fr(,)j(w)n(e)g(\014nd)h Fi(S)5 b Fr(\()p
Fi(x)20 b Fj(\010)f Fi(\001x)p Fr(\))27 b(=)e Fi(S)5
b Fr(\()p Fi(x)p Fr(\))21 b Fj(\010)e Fi(\001x)p Fr(.)30
b(W)-7 b(e)30 b(call)f(this)523 955 y(least)h(signi\014can)n(t)g(b)n
(yte)g(the)g Fd(index)41 b Fr(to)30 b(the)h(S-b)r(o)n(x.)f(If)h(\()p
Fi(x;)14 b(y)s Fr(\))31 b(is)f(the)h(input)g(to)f(P)n(airCom,)523
1054 y(only)37 b(b)n(ytes)g Fi(x)989 1066 y Fq(3)1027
1054 y Fi(;)14 b(x)1111 1066 y Fq(0)1185 1054 y Fr(of)38
b Fi(x)g Fr(are)e(indices)h(to)g(S-b)r(o)n(xes)g(in)g
Fi(F)12 b Fr(,)37 b(and)h(only)e(b)n(ytes)h Fi(x)3097
1066 y Fq(2)3135 1054 y Fi(;)14 b(x)3219 1066 y Fq(1)3294
1054 y Fr(are)523 1154 y(indices)30 b(in)h Fi(G)p Fr(;)g(b)n(y)f(in)n
(v)n(erting)f(only)h(these)h(t)n(w)n(o)f(b)n(ytes)g(in)g(our)g(pair)g
(\()p Fi(a;)14 b(a)p Fr(\),)30 b(w)n(e)g(can)h(a)n(v)n(oid)523
1254 y(the)22 b(symmetry-breaking)e(e\013ect)j(of)f(the)g(in)n(v)n
(ersion)e(as)h(far)h(as)f(the)i(nonlinear)e(comp)r(onen)n(ts)523
1353 y(are)29 b(concerned,)f(whic)n(h)i(results)f(in)h(the)g(same)f
(four)g(S-b)r(o)n(x)g(indices)g(b)r(eing)h(used)g(in)g(b)r(oth)523
1453 y(the)e Fi(F)40 b Fr(and)27 b Fi(G)h Fr(branc)n(hes)e(of)i(P)n
(airCom.)648 1553 y(Figure)c(3)g(illustrates)g(this)h(attac)n(k.)f(F)-7
b(or)24 b(an)h(arbitrary)e Fi(n)p Fr(-bit)h(string)h
Fi(a)e Fr(=)f Fi(a)3032 1565 y Fq(3)3069 1553 y Fj(j)p
Fi(a)3136 1565 y Fq(2)3173 1553 y Fj(j)p Fi(a)3240 1565
y Fq(1)3278 1553 y Fj(j)p Fi(a)3345 1565 y Fq(0)3382
1553 y Fr(,)523 1652 y(w)n(e)27 b(de\014ne)h(sym)n(b)r(ols)f(for)g(in)n
(termediate)g(v)-5 b(alues)27 b(in)h Fi(F)12 b Fr(\()p
Fi(a;)i(a)p Fr(\):)1266 1805 y Fi(b)1302 1817 y Fq(3)1339
1805 y Fj(j)p Fi(b)1398 1817 y Fq(2)1435 1805 y Fj(j)p
Fi(b)1494 1817 y Fq(1)1531 1805 y Fj(j)p Fi(b)1590 1817
y Fq(0)1650 1805 y Fr(=)23 b Fi(S)5 b Fr(\()p Fi(a)1870
1817 y Fq(3)1907 1805 y Fj(j)p Fi(a)1974 1817 y Fq(2)2011
1805 y Fj(j)p Fi(a)2078 1817 y Fq(1)2115 1805 y Fj(j)p
Fi(a)2182 1817 y Fq(0)2220 1805 y Fr(\))1266 1930 y Fi(b)1302
1895 y Fe(0)1302 1950 y Fq(0)1339 1930 y Fj(j)p Fi(b)1398
1895 y Fe(0)1398 1950 y Fq(3)1435 1930 y Fj(j)p Fi(b)1494
1895 y Fe(0)1494 1950 y Fq(2)1531 1930 y Fj(j)p Fi(b)1590
1895 y Fe(0)1590 1950 y Fq(1)1650 1930 y Fr(=)23 b Fi(S)5
b Fr(\()p Fi(a)1870 1942 y Fq(0)1907 1930 y Fj(j)p Fi(a)1974
1942 y Fq(3)2011 1930 y Fj(j)p Fi(a)2078 1942 y Fq(2)2115
1930 y Fj(j)p Fi(a)2182 1942 y Fq(1)2220 1930 y Fr(\))1265
2054 y Fi(c)1301 2066 y Fq(2)1338 2054 y Fj(j)p Fi(c)1397
2066 y Fq(1)1434 2054 y Fj(j)p Fi(c)1493 2066 y Fq(0)1531
2054 y Fj(j)p Fi(c)1590 2066 y Fq(3)1650 2054 y Fr(=)23
b Fi(S)5 b Fr(\()p Fi(b)1862 2066 y Fq(2)1899 2054 y
Fj(j)p Fi(b)1958 2066 y Fq(1)1995 2054 y Fj(j)p Fi(b)2054
2066 y Fq(0)2091 2054 y Fj(j)p Fi(b)2150 2066 y Fq(3)2187
2054 y Fr(\))1265 2179 y Fi(c)1301 2144 y Fe(0)1301 2199
y Fq(1)1338 2179 y Fj(j)p Fi(c)1397 2144 y Fe(0)1397
2199 y Fq(0)1434 2179 y Fj(j)p Fi(c)1493 2144 y Fe(0)1493
2199 y Fq(3)1531 2179 y Fj(j)p Fi(c)1590 2144 y Fe(0)1590
2199 y Fq(2)1650 2179 y Fr(=)23 b Fi(S)5 b Fr(\()p Fi(b)1862
2144 y Fe(0)1862 2199 y Fq(1)1899 2179 y Fj(j)p Fi(b)1958
2144 y Fe(0)1958 2199 y Fq(0)1995 2179 y Fj(j)p Fi(b)2054
2144 y Fe(0)2054 2199 y Fq(3)2091 2179 y Fj(j)p Fi(b)2150
2144 y Fe(0)2150 2199 y Fq(2)2187 2179 y Fr(\))1236 2303
y Fi(d)1279 2315 y Fq(3)1316 2303 y Fj(j)p Fi(d)1382
2315 y Fq(2)1420 2303 y Fj(j)p Fi(d)1486 2315 y Fq(1)1523
2303 y Fj(j)p Fi(d)1589 2315 y Fq(0)1650 2303 y Fr(=)23
b(\()p Fi(c)1806 2315 y Fq(3)1843 2303 y Fj(j)p Fi(c)1902
2315 y Fq(2)1940 2303 y Fj(j)p Fi(c)1999 2315 y Fq(1)2036
2303 y Fj(j)p Fi(c)2095 2315 y Fq(0)2132 2303 y Fr(\))c
Fj(\010)f Fr(\()p Fi(c)2334 2269 y Fe(0)2334 2324 y Fq(3)2371
2303 y Fj(j)p Fi(c)2430 2269 y Fe(0)2430 2324 y Fq(2)2467
2303 y Fj(j)p Fi(c)2526 2269 y Fe(0)2526 2324 y Fq(1)2564
2303 y Fj(j)p Fi(c)2623 2269 y Fe(0)2623 2324 y Fq(0)2660
2303 y Fr(\))648 2456 y(With)40 b(these)g(de\014nitions,)h(w)n(e)e
(\014nd)i(that)f(P)n(airCom)n(\()p Fi(a)2440 2468 y Fq(3)2477
2456 y Fj(j)p 2500 2411 82 4 v Fi(a)2544 2468 y Fq(2)2582
2456 y Fj(j)p 2605 2411 V Fi(a)2649 2468 y Fq(1)2686
2456 y Fj(j)p Fi(a)2753 2468 y Fq(0)2790 2456 y Fi(;)58
b(a)2915 2468 y Fq(3)2952 2456 y Fj(j)p Fi(a)3019 2468
y Fq(2)3056 2456 y Fj(j)p Fi(a)3123 2468 y Fq(1)3160
2456 y Fj(j)p Fi(a)3227 2468 y Fq(0)3264 2456 y Fr(\))44
b(=)523 2556 y(\()p 555 2488 81 4 v Fi(d)598 2568 y Fq(1)636
2556 y Fj(j)p Fi(d)702 2568 y Fq(0)739 2556 y Fj(j)p
Fi(d)805 2568 y Fq(3)843 2556 y Fj(j)p 866 2488 V Fi(d)909
2568 y Fq(2)946 2556 y Fi(;)33 b(d)1045 2568 y Fq(1)1082
2556 y Fj(j)p 1105 2488 V Fi(d)1148 2568 y Fq(0)1186
2556 y Fj(j)p 1209 2488 V Fi(d)1252 2568 y Fq(3)1289
2556 y Fj(j)p Fi(d)1355 2568 y Fq(2)1393 2556 y Fr(\):)736
2709 y Fi(C)6 b Fr(\()p Fi(F)12 b Fr(\()p Fi(x;)i(y)s
Fr(\)\))25 b(=)e Fi(C)6 b Fr(\()p Fi(L)p Fr(\()p Fi(S)f
Fr(\()p Fi(L)p Fr(\()p Fi(S)g Fr(\()p Fi(x)p Fr(\)\)\)\))p
Fi(;)39 b(S)5 b Fr(\()p Fi(R)q Fr(\()p Fi(S)g Fr(\()p
Fi(R)q Fr(\()p Fi(y)s Fr(\)\)\)\)\))1147 2833 y(=)23
b Fi(C)6 b Fr(\()p Fi(L)p Fr(\()p Fi(S)f Fr(\()p Fi(L)p
Fr(\()p Fi(S)g Fr(\()p Fi(a)1730 2845 y Fq(3)1767 2833
y Fj(j)p 1790 2788 82 4 v Fi(a)1834 2845 y Fq(2)1871
2833 y Fj(j)p 1894 2788 V Fi(a)1938 2845 y Fq(1)1976
2833 y Fj(j)p Fi(a)2043 2845 y Fq(0)2080 2833 y Fr(\)\)\)\))p
Fi(;)38 b(S)5 b Fr(\()p Fi(R)q Fr(\()p Fi(S)g Fr(\()p
Fi(R)q Fr(\()p Fi(a)2681 2845 y Fq(3)2718 2833 y Fj(j)p
Fi(a)2785 2845 y Fq(2)2822 2833 y Fj(j)p Fi(a)2889 2845
y Fq(1)2926 2833 y Fj(j)p Fi(a)2993 2845 y Fq(0)3030
2833 y Fr(\)\)\)\)\))1147 2958 y(=)23 b Fi(C)6 b Fr(\()p
Fi(L)p Fr(\()p Fi(S)f Fr(\()p Fi(L)p Fr(\()p Fi(b)1634
2970 y Fq(3)1671 2958 y Fj(j)p 1694 2890 73 4 v Fi(b)1730
2970 y Fq(2)1767 2958 y Fj(j)p 1790 2890 V Fi(b)1826
2970 y Fq(1)1863 2958 y Fj(j)p Fi(b)1922 2970 y Fq(0)1959
2958 y Fr(\)\)\))p Fi(;)38 b(S)5 b Fr(\()p Fi(R)q Fr(\()p
Fi(S)g Fr(\()p Fi(a)2432 2970 y Fq(0)2469 2958 y Fj(j)p
Fi(a)2536 2970 y Fq(3)2573 2958 y Fj(j)p Fi(a)2640 2970
y Fq(2)2677 2958 y Fj(j)p Fi(a)2744 2970 y Fq(1)2781
2958 y Fr(\)\)\)\))1147 3082 y(=)23 b Fi(C)6 b Fr(\()p
Fi(L)p Fr(\()p Fi(S)f Fr(\()p 1509 3015 V Fi(b)1545 3094
y Fq(2)1582 3082 y Fj(j)p 1605 3015 V Fi(b)1641 3094
y Fq(1)1678 3082 y Fj(j)p Fi(b)1737 3094 y Fq(0)1774
3082 y Fj(j)p Fi(b)1833 3094 y Fq(3)1870 3082 y Fr(\)\))p
Fi(;)37 b(S)5 b Fr(\()p Fi(R)q Fr(\()p Fi(b)2214 3048
y Fe(0)2214 3103 y Fq(0)2251 3082 y Fj(j)p Fi(b)2310
3048 y Fe(0)2310 3103 y Fq(3)2347 3082 y Fj(j)p Fi(b)2406
3048 y Fe(0)2406 3103 y Fq(2)2443 3082 y Fj(j)p Fi(b)2502
3048 y Fe(0)2502 3103 y Fq(1)2539 3082 y Fr(\)\)\))1147
3207 y(=)23 b Fi(C)6 b Fr(\()p Fi(L)p Fr(\()p 1421 3161
74 4 v Fi(c)1457 3219 y Fq(2)1494 3207 y Fj(j)p 1517
3161 V Fi(c)1553 3219 y Fq(1)1591 3207 y Fj(j)p Fi(c)1650
3219 y Fq(0)1687 3207 y Fj(j)p Fi(c)1746 3219 y Fq(3)1783
3207 y Fr(\))p Fi(;)37 b(S)5 b Fr(\()p Fi(b)1999 3173
y Fe(0)1999 3228 y Fq(1)2036 3207 y Fj(j)p Fi(b)2095
3173 y Fe(0)2095 3228 y Fq(0)2132 3207 y Fj(j)p Fi(b)2191
3173 y Fe(0)2191 3228 y Fq(3)2228 3207 y Fj(j)p Fi(b)2287
3173 y Fe(0)2287 3228 y Fq(2)2324 3207 y Fr(\)\))1147
3332 y(=)23 b Fi(C)6 b Fr(\()p 1332 3286 V Fi(c)1368
3344 y Fq(1)1406 3332 y Fj(j)p Fi(c)1465 3344 y Fq(0)1502
3332 y Fj(j)p Fi(c)1561 3344 y Fq(3)1598 3332 y Fj(j)p
1621 3286 V Fi(c)1657 3344 y Fq(2)1694 3332 y Fi(;)37
b(c)1790 3297 y Fe(0)1790 3352 y Fq(1)1827 3332 y Fj(j)p
Fi(c)1886 3297 y Fe(0)1886 3352 y Fq(0)1924 3332 y Fj(j)p
Fi(c)1983 3297 y Fe(0)1983 3352 y Fq(3)2020 3332 y Fj(j)p
Fi(c)2079 3297 y Fe(0)2079 3352 y Fq(2)2116 3332 y Fr(\))1147
3456 y(=)p 1235 3388 81 4 v 23 w Fi(d)1278 3468 y Fq(1)1315
3456 y Fj(j)p Fi(d)1381 3468 y Fq(0)1419 3456 y Fj(j)p
Fi(d)1485 3468 y Fq(3)1522 3456 y Fj(j)p 1545 3388 V
Fi(d)1588 3468 y Fq(2)736 3581 y Fi(C)6 b Fr(\()p Fi(G)p
Fr(\()p Fi(x;)14 b(y)s Fr(\)\))25 b(=)e Fi(C)6 b Fr(\()p
Fi(S)f Fr(\()p Fi(R)q Fr(\()p Fi(S)g Fr(\()p Fi(R)q Fr(\()p
1700 3535 48 4 v Fi(x)q Fr(\)\)\)\))p Fi(;)38 b(L)p Fr(\()p
Fi(S)5 b Fr(\()p Fi(L)p Fr(\()p Fi(S)g Fr(\()p Fi(y)s
Fr(\)\)\)\)\))1147 3705 y(=)23 b Fi(C)6 b Fr(\()p Fi(S)f
Fr(\()p Fi(R)q Fr(\()p Fi(S)g Fr(\()p Fi(R)q Fr(\()p
1700 3659 82 4 v Fi(a)1744 3717 y Fq(3)1781 3705 y Fj(j)p
Fi(a)1848 3717 y Fq(2)1886 3705 y Fj(j)p Fi(a)1953 3717
y Fq(1)1990 3705 y Fj(j)p 2013 3659 V Fi(a)2057 3717
y Fq(0)2094 3705 y Fr(\)\)\)\))p Fi(;)38 b(L)p Fr(\()p
Fi(S)5 b Fr(\()p Fi(L)p Fr(\()p Fi(S)g Fr(\()p Fi(a)2681
3717 y Fq(3)2718 3705 y Fj(j)p Fi(a)2785 3717 y Fq(2)2822
3705 y Fj(j)p Fi(a)2889 3717 y Fq(1)2926 3705 y Fj(j)p
Fi(a)2993 3717 y Fq(0)3030 3705 y Fr(\)\)\)\)\))1147
3830 y(=)23 b Fi(C)6 b Fr(\()p Fi(S)f Fr(\()p Fi(R)q
Fr(\()p Fi(S)g Fr(\()p 1604 3784 V Fi(a)1648 3842 y Fq(0)1686
3830 y Fj(j)p 1709 3784 V Fi(a)1753 3842 y Fq(3)1790
3830 y Fj(j)p Fi(a)1857 3842 y Fq(2)1894 3830 y Fj(j)p
Fi(a)1961 3842 y Fq(1)1998 3830 y Fr(\)\)\))p Fi(;)38
b(L)p Fr(\()p Fi(S)5 b Fr(\()p Fi(L)p Fr(\()p Fi(b)2457
3842 y Fq(3)2493 3830 y Fj(j)p Fi(b)2552 3842 y Fq(2)2589
3830 y Fj(j)p Fi(b)2648 3842 y Fq(1)2685 3830 y Fj(j)p
Fi(b)2744 3842 y Fq(0)2781 3830 y Fr(\)\)\)\))1147 3954
y(=)23 b Fi(C)6 b Fr(\()p Fi(S)f Fr(\()p Fi(R)q Fr(\()p
1516 3883 73 4 v Fi(b)1552 3926 y Fe(0)1552 3976 y Fq(0)1589
3954 y Fj(j)p 1612 3883 V Fi(b)1648 3926 y Fe(0)1648
3976 y Fq(3)1685 3954 y Fj(j)p Fi(b)1744 3920 y Fe(0)1744
3975 y Fq(2)1781 3954 y Fj(j)p Fi(b)1840 3920 y Fe(0)1840
3975 y Fq(1)1877 3954 y Fr(\)\))p Fi(;)38 b(L)p Fr(\()p
Fi(S)5 b Fr(\()p Fi(b)2215 3966 y Fq(2)2251 3954 y Fj(j)p
Fi(b)2310 3966 y Fq(1)2347 3954 y Fj(j)p Fi(b)2406 3966
y Fq(0)2443 3954 y Fj(j)p Fi(b)2502 3966 y Fq(3)2539
3954 y Fr(\)\)\))1147 4079 y(=)23 b Fi(C)6 b Fr(\()p
Fi(S)f Fr(\()p Fi(b)1456 4044 y Fe(0)1456 4099 y Fq(1)1493
4079 y Fj(j)p 1516 4008 V Fi(b)1552 4050 y Fe(0)1552
4101 y Fq(0)1589 4079 y Fj(j)p 1612 4008 V Fi(b)1648
4050 y Fe(0)1648 4101 y Fq(3)1685 4079 y Fj(j)p Fi(b)1744
4044 y Fe(0)1744 4099 y Fq(2)1781 4079 y Fr(\))p Fi(;)37
b(L)p Fr(\()p Fi(c)1998 4091 y Fq(2)2035 4079 y Fj(j)p
Fi(c)2094 4091 y Fq(1)2132 4079 y Fj(j)p Fi(c)2191 4091
y Fq(0)2228 4079 y Fj(j)p Fi(c)2287 4091 y Fq(3)2324
4079 y Fr(\)\))1147 4203 y(=)23 b Fi(C)6 b Fr(\()p Fi(c)1368
4169 y Fe(0)1368 4224 y Fq(1)1406 4203 y Fj(j)p 1429
4132 74 4 v Fi(c)1465 4175 y Fe(0)1465 4225 y Fq(0)1502
4203 y Fj(j)p 1525 4132 V Fi(c)1561 4175 y Fe(0)1561
4225 y Fq(3)1598 4203 y Fj(j)p Fi(c)1657 4169 y Fe(0)1657
4224 y Fq(2)1694 4203 y Fi(;)37 b(c)1790 4215 y Fq(1)1827
4203 y Fj(j)p Fi(c)1886 4215 y Fq(0)1924 4203 y Fj(j)p
Fi(c)1983 4215 y Fq(3)2020 4203 y Fj(j)p Fi(c)2079 4215
y Fq(2)2116 4203 y Fr(\))1147 4328 y(=)23 b Fi(d)1278
4340 y Fq(1)1315 4328 y Fj(j)p 1338 4260 81 4 v Fi(d)1381
4340 y Fq(0)1419 4328 y Fj(j)p 1442 4260 V Fi(d)1485
4340 y Fq(3)1522 4328 y Fj(j)p Fi(d)1588 4340 y Fq(2)648
4481 y Fr(F)-7 b(rom)29 b(this)g(it)h(is)f(clear)g(that)h(for)e(an)n(y)
h(input)h(of)g(the)g(appropriate)d(form,)i(one)g(output)523
4580 y(w)n(ord)24 b(is)h(the)h(in)n(v)n(erse)d(of)i(the)h(other;)e(or)h
(in)g(other)g(w)n(ords,)e(if)j(w)n(e)f(no)n(w)f(X)n(OR)h(the)h(t)n(w)n
(o)e(w)n(ord)523 4680 y(outputs)35 b(from)f(P)n(airCom)f(together)g
(\(whic)n(h,)i(con)n(v)n(enien)n(tly)-7 b(,)33 b(is)i(the)g(same)f(as)g
(applying)523 4780 y(the)28 b(LEVIA)-7 b(THAN)28 b(compression)e
(function)j Fi(C)34 b Fr(a)27 b(second)g(time\),)h(w)n(e)f(\014nd)686
4933 y Fi(C)6 b Fr(\(P)n(airCom)o(\()p Fi(a)1182 4945
y Fq(3)1219 4933 y Fj(j)p 1242 4887 82 4 v Fi(a)1286
4945 y Fq(2)1323 4933 y Fj(j)p 1346 4887 V Fi(a)1390
4945 y Fq(1)1427 4933 y Fj(j)p Fi(a)1494 4945 y Fq(0)1532
4933 y Fi(;)37 b(a)1636 4945 y Fq(3)1673 4933 y Fj(j)p
Fi(a)1740 4945 y Fq(2)1777 4933 y Fj(j)p Fi(a)1844 4945
y Fq(1)1881 4933 y Fj(j)p Fi(a)1948 4945 y Fq(0)1985
4933 y Fr(\)\))24 b(=)p 2161 4865 81 4 v 23 w Fi(d)2204
4945 y Fq(1)2241 4933 y Fj(j)p Fi(d)2307 4945 y Fq(0)2345
4933 y Fj(j)p Fi(d)2411 4945 y Fq(3)2448 4933 y Fj(j)p
2471 4865 V Fi(d)2514 4945 y Fq(2)2570 4933 y Fj(\010)18
b Fi(d)2696 4945 y Fq(1)2734 4933 y Fj(j)p 2757 4865
V Fi(d)2800 4945 y Fq(0)2837 4933 y Fj(j)p 2860 4865
V Fi(d)2903 4945 y Fq(3)2941 4933 y Fj(j)p Fi(d)3007
4945 y Fq(2)3067 4933 y Fr(=)23 b(1)3197 4898 y Fp(n)p
eop
%%Page: 6 6
6 5 bop 523 241 a Fn(6)237 b(P)n(aul)27 b(Cro)n(wley)f(and)g(Stefan)g
(Luc)n(ks)523 4101 y
 currentpoint currentpoint translate 0.84767 0.84767 scale neg exch
neg exch translate
 523 4101 a @beginspecial 0 @llx
0 @lly 408 @urx 476 @ury 4080 @rwi @setspecial
%%BeginDocument: stefan.epsi
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Basser Lout Version 3.25 (December 2001)
%%CreationDate: Wed Mar 13 08:30:59 2002
%%DocumentData: Binary
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: Plain 408 476 0 white ()
%%PageOrder: Ascend
%%LanguageLevel: 2
%%Pages: (atend)
%%BoundingBox: 0 0 408 476
%%EndComments

%%BeginProlog
%%BeginResource: procset LoutStartUp
/save_cp { currentpoint /cp_y exch def /cp_x exch def } def
/restore_cp { cp_x cp_y moveto } def
/outline { gsave 1 1 1 setrgbcolor dup show save_cp
  grestore true charpath stroke restore_cp } bind def
/m  { 3 1 roll moveto show } bind def
/mo { 3 1 roll moveto outline } bind def
/s  { exch currentpoint exch pop moveto show } bind def
/so { exch currentpoint exch pop moveto outline } bind def
/k  { exch neg 0 rmoveto show } bind def
/ko { exch neg 0 rmoveto outline } bind def
/r  { exch 0 rmoveto show } bind def
/ro { exch 0 rmoveto outline } bind def
/c  { gsave 3 1 roll rmoveto show grestore } bind def
/co { gsave 3 1 roll rmoveto outline grestore } bind def
/ul { gsave setlinewidth dup 3 1 roll
      moveto lineto stroke grestore } bind def
/in { 1440 mul } def
/cm { 567 mul } def
/pt { 20 mul } def
/em { 120 mul } def
/sp { louts mul } def
/vs { loutv mul } def
/ft { loutf mul } def
/dg {           } def

/LoutGraphic {
  /louts exch def
  /loutv exch def
  /loutf exch def
  /ymark exch def
  /xmark exch def
  /ysize exch def
  /xsize exch def
} def

/LoutGr2 { gsave translate LoutGraphic gsave } def

/LoutFont
{ findfont exch scalefont setfont
} bind def

/LoutRecode {
  { findfont dup length dict begin
    {1 index /FID ne {def} {pop pop} ifelse} forall
    /Encoding exch def
    currentdict end definefont pop
  }
  stopped pop
} bind def

/LoutStartEPSF { % prepare for EPSF inclusion
  userdict begin
    /PreEPSF_state save def
    /dict_stack countdictstack def
    /ops_count count 1 sub def
    /showpage {} def
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    /languagelevel where
    { pop languagelevel
      1 ne
      { false setstrokeadjust false setoverprint
      } if
    } if
} bind def

/LoutEPSFCleanUp { % clean up after EPSF inclusion
    count ops_count sub { pop } repeat
    countdictstack dict_stack sub { end } repeat
    PreEPSF_state restore
  end % userdict
} bind def
%%EndResource

%%BeginResource: procset LoutGraphPrependGraphic
% @PrependGraphic file /usr/share/lout/include/graphf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @Graph (Version 1.0)       %
%                                                                    %
%  Version 1.0 by Jeffrey H. Kingston, December 1993.                %
%  swapxandy added September 2001 by JHK.                            %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

errordict begin
   /handleerror
   {
      {  /Times-Roman findfont 8 pt scalefont setfont
	 0 setgray 4 pt 4 pt moveto
	 $error /errorname get
	 dup lgraphdict exch known
	 { lgraphdict exch get }
	 { 30 string cvs } ifelse
	 show
	 (  Command: ) show
	 $error /command get 30 string cvs show
      } stopped {} if
      showpage stop
   } def
end

/lgraphdict 200 dict def
lgraphdict begin

% error messages
/dictfull (dictfull error) def
/dictstackoverflow (dictstackoverflow error) def
/execstackoverflow (execstackoverflow error:  expression too complex?) def
/limitcheck (limitcheck error:  graph too complex or too large?) def
/syntaxerror (syntaxerror error:  syntax error in text of graph?) def
/typecheck (typecheck error:  syntax error in text of graph?) def
/undefined (undefined error:  unknown or misspelt symbol?) def
/rangecheck (rangecheck error:  undefined expression (e.g. divide by zero)?) def
/VMError (VMError error:  run out of memory?) def

% random number between x and y inclusive: x y dorand num
/dorand { 1 index sub 1 add rand exch mod add } def

% log to given base: base num dolog num
/dolog { ln exch ln div } def

% maximum of two numbers:  <num> <num> max <num>
/max { 2 copy gt { pop } { exch pop } ifelse } def

% add two points:  <point> <point> padd <point>
/padd { exch 3 1 roll add 3 1 roll add exch } def

% subtract first point from second:  <point> <point> psub <point>
/psub { 3 2 roll sub 3 1 roll exch sub exch } def

% distance between two points:  <point> <point> distance <length>
/distance { psub dup mul exch dup mul add sqrt } def

% point at angle and distance:  <point> <length> <angle> atangle <point>
/atangle { 2 copy cos mul 3 1 roll sin mul padd } def

% angle from one point to another:  <point> <point> angle <angle>
/angle { psub 2 copy 0 eq exch 0 eq and {pop} {exch atan} ifelse } def


% set up for line
% - linesetup <length> <dashlength>
/linesetup
{ newpath
  xcurr ycurr trpoint xprev yprev trpoint
  4 copy moveto lineto distance dashlength
} def

% set up for icon-avoiding line
% - ilinesetup <length> <dashlength>
/ilinesetup
{ newpath
  xprev yprev trpoint xcurr ycurr trpoint 4 copy
  4 copy angle symbolsize 1.5 mul exch 4 2 roll pop pop atangle
  6 2 roll 4 2 roll
  4 copy angle symbolsize 1.5 mul exch 4 2 roll pop pop atangle 
  4 copy moveto lineto distance dashlength
} def


% stroke a solid line:  <length> <dashlength> solid -
/solid
{ pop pop [] 0 setdash linewidth setlinewidth stroke
} def
  
% stroke a dashed line:   <length> <dashlength> dashed -
/dashed
{  2 copy 2 mul le 1 index 0 le or
   {  exch pop 1 pt max [ exch dup ] 0 setdash }
   {  dup [ exch 4 2 roll 2 copy div
      1 sub 2 div ceiling dup 4 1 roll
      1 add mul sub exch div ] 0 setdash
   } ifelse linewidth setlinewidth stroke
} def

% stroke a cdashed line:  <length> <dashlength> cdashed -
/cdashed
{  2 copy le 1 index 0 le or
   { exch pop 1 pt max [ exch dup ] dup 0 get 2 div setdash }
   { dup [ 4 2 roll exch 2 copy exch div
     2 div ceiling div 1 index sub
     ] exch 2 div setdash
   } ifelse linewidth setlinewidth stroke
} def

% stroke a dotted line:  <length> <dashlength> dotted -
/dotted
{  2 copy le 1 index 0 le or
   { exch pop 1 pt max [ exch 0 exch ] 0 setdash }
   { 1 index exch div ceiling div 0.99999 mul
     [ 0 3 2 roll ] 0 setdash
   } ifelse gsave 1 setlinecap linewidth setlinewidth stroke grestore newpath
} def

% stroke a noline line:  <length> <dashlength> noline -
/noline
{ pop pop
} def

% stroke a y histogram: - yhisto -
/yhisto
{ xprev yleft trpoint yextra sub moveto
  xprev yprev trpoint lineto
  xcurr yprev trpoint lineto
  xcurr yleft trpoint yextra sub lineto 
  linewidth setlinewidth stroke
} def

% stroke an x histogram: - xhisto -
/xhisto
{ xleft yprev trpoint exch xextra sub exch moveto
  xcurr yprev trpoint lineto
  xcurr ycurr trpoint lineto
  xleft ycurr trpoint exch xextra sub exch lineto 
  linewidth setlinewidth stroke
} def

% stroke a surface y histogram: - surfaceyhisto -
/surfaceyhisto
{ firstpair
  { xprev yleft trpoint yextra sub moveto
    xprev yprev trpoint lineto
  }
  { xprev yprev trpoint moveto
  } ifelse
  xcurr yprev trpoint lineto
  lastpair
  { xcurr yleft trpoint yextra sub lineto 
  }
  { xcurr ycurr trpoint lineto
  } ifelse
  linewidth setlinewidth stroke
} def

% stroke a surface x histogram: - surfacexhisto -
/surfacexhisto
{ firstpair
  { xleft yprev trpoint exch xextra sub exch moveto
  }
  { xprev yprev trpoint moveto
  } ifelse
  xcurr yprev trpoint lineto
  xcurr ycurr trpoint lineto
  lastpair
  { xleft ycurr trpoint exch xextra sub exch lineto 
  } if
  linewidth setlinewidth stroke
} def

% stroke a filled y histogram: - filledyhisto -
/filledyhisto
{
  linewidth setlinewidth
  xprev yleft trpoint exch currentlinewidth 2 div add exch yextra sub moveto
  xprev yprev trpoint exch currentlinewidth 2 div add exch lineto
  xcurr yprev trpoint exch currentlinewidth 2 div sub exch lineto
  xcurr yleft trpoint exch currentlinewidth 2 div sub exch yextra sub lineto 
  closepath fill
} def

% stroke a filled x histogram: - filledxhisto -
/filledxhisto
{
  linewidth setlinewidth
  xleft yprev trpoint currentlinewidth 2 div add exch xextra sub exch moveto
  xcurr yprev trpoint currentlinewidth 2 div add lineto
  xcurr ycurr trpoint currentlinewidth 2 div sub lineto
  xleft ycurr trpoint currentlinewidth 2 div sub exch xextra sub exch lineto 
  closepath fill
} def


% cross: show a small cross
/cross
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg symbolsize neg rmoveto
  symbolsize 2 mul symbolsize 2 mul rlineto
  0 symbolsize -2 mul rmoveto
  symbolsize -2 mul symbolsize 2 mul rlineto
  [] 0 setdash stroke
} def

% plus: show a small plus
/plus
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg 0 rmoveto
  symbolsize 2 mul 0 rlineto
  symbolsize neg symbolsize neg rmoveto
  0 symbolsize 2 mul rlineto
  [] 0 setdash stroke
} def

% square: show a small square
/square
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg symbolsize neg rmoveto
  symbolsize 2 mul 0 rlineto
  0 symbolsize 2 mul rlineto
  symbolsize -2 mul 0 rlineto
  closepath [] 0 setdash stroke
} def

% filledsquare: show a small filled square
/filledsquare
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg symbolsize neg rmoveto
  symbolsize 2 mul 0 rlineto
  0 symbolsize 2 mul rlineto
  symbolsize -2 mul 0 rlineto
  closepath gsave [] 0 setdash stroke grestore fill
} def

% diamond: show a small diamond
/diamond
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg 0 rmoveto
  symbolsize symbolsize neg rlineto
  symbolsize symbolsize rlineto
  symbolsize neg symbolsize rlineto
  closepath [] 0 setdash stroke
} def

% filleddiamond: show a small filled diamond
/filleddiamond
{ newpath
  xcurr ycurr trpoint moveto
  symbolsize neg 0 rmoveto
  symbolsize symbolsize neg rlineto
  symbolsize symbolsize rlineto
  symbolsize neg symbolsize rlineto
  closepath gsave [] 0 setdash stroke grestore fill
} def

% circle: show a small circle
/circle
{ newpath
  xcurr ycurr trpoint symbolsize 0 360 arc [] 0 setdash stroke
} def

% filledcircle: show a small filled circle
/filledcircle
{ newpath
  xcurr ycurr trpoint symbolsize 0 360 arc gsave [] 0 setdash stroke grestore fill
} def

% triangle: show a small triangle
/triangle
{ newpath
  xcurr ycurr trpoint moveto
  0 symbolsize 1.5 mul rmoveto
  symbolsize neg symbolsize -2.5 mul rlineto
  symbolsize 2 mul 0 rlineto
  closepath [] 0 setdash stroke
} def

% filledtriangle: show a small filled triangle
/filledtriangle
{ newpath
  xcurr ycurr trpoint moveto
  0 symbolsize 1.5 mul rmoveto
  symbolsize neg symbolsize -2.5 mul rlineto
  symbolsize 2 mul 0 rlineto
  closepath gsave [] 0 setdash stroke grestore fill
} def


%plog: like log only with a base, and protected from failing if <= 0
% base x plog res
/plog { dup 0 le { pop pop 0 } { ln exch ln div } ifelse } def

% xtr: transform one x value logarithmically if xlog > 1
% <num> xtr <num>
/xtr
{ xlog 1 gt
  { xlog exch plog
  } if
} def

% ytr: transform one y value logarithmically if ylog > 1
% <num> ytr <num>
/ytr
{ ylog 1 gt
  { ylog exch plog
  } if
} def

% % trpoint: transform (x, y) in graph space into (x', y') in print space
% % x y trpoint x' y'
% /trpoint
% { exch xtr trxmin sub trxmax trxmin sub div xwidth mul xextra add
%   exch ytr trymin sub trymax trymin sub div ywidth mul yextra add
% } def


% trpoint: transform (x, y) in graph space into (x', y') in print space
% x y trpoint x' y'
/trpoint
{ exch xtr xdecr { trxmax exch sub } { trxmin sub } ifelse
  trxmax trxmin sub div xwidth mul xextra add

  exch ytr ydecr { trymax exch sub } { trymin sub } ifelse
  trymax trymin sub div ywidth mul yextra add
} def


% yonly: interpolate x values 1, 2, ... into data
% [ data ] yonly [ newdata ]
/yonly
{ dup /tmp exch def
  length [ exch 1 exch 1 exch
  { dup tmp exch 1 sub get
  } for
  ]
} def

% xonly: interpolate y values 1, 2, ... into data
% [ data ] yonly [ newdata ]
/xonly
{ dup /tmp exch def
  length [ exch 1 exch 1 exch
  { dup tmp exch 1 sub get exch
  } for
  ]
} def

% xandy: no interpolation of x or y values
% [ data ] xandy [ data ]
/xandy {} def

% swapxandy: no interpolation of x or y values
% [ data ] swapxandy [ data ]
/swapxandy
{ dup /tmp exch def
  length [ exch 2 exch 2 exch
  { dup tmp exch 1 sub get exch 2 sub tmp exch get
  } for
  ]
} def


% expstringwidth: calculate width of string containing optional exponent
% <string> expstringwidth <width>
/expstringwidth
{ (^) search
  { exch pop stringwidth pop exch stringwidth pop 0.7 mul add }
  { stringwidth pop }
  ifelse
} def

% expstringshow: show string containing optional exponent
% <string> expstringshow -
/expstringshow
{ (^) search
  { exch pop show 0 0.5 ft rmoveto
    gsave currentfont 0.7 scalefont setfont show grestore
  }
  { show
  }
  ifelse
} def

% concatenate two strings: <string> <string> strconcat <string>
/strconcat
{ 2 copy length exch length add string
  dup 0 4 index putinterval
  dup 3 index length 3 index putinterval
  3 1 roll pop pop
} def

% lgen: generate one label automatically
% num lgen num string
/lgen { dup 20 string cvs } def

% loglgen: generate one logarithmic label (with exponent)
% <base> <exponent> loglgen <string>
/loglgen
{ 20 string cvs exch 20 string cvs
  (^) strconcat exch strconcat
} def


% printxtick: print one x tick
% xpos printxtick -
/printxtick
{ newpath
  yleft trpoint moveto 0 yextra neg rmoveto
  0 xticklength neg rlineto [] 0 setdash stroke
} def

% printxlabel: print one x label
% (xlabel) xpos printxlabel -
/printxlabel
{ yleft trpoint moveto 0 yextra neg rmoveto
  0 xticklength neg rmoveto 0 0.9 ft neg rmoveto
  xlog 1 gt { 0 0.3 ft neg rmoveto } if
  dup expstringwidth -2 div 0 rmoveto expstringshow
} def

% printytick: print one y tick
% ypos printytick -
/printytick
{ newpath
  xleft exch trpoint moveto xextra neg 0 rmoveto
  yticklength neg 0 rlineto [] 0 setdash stroke
} def

% printylabel: print one y label
% (ylabel) ypos printylabel -
/printylabel
{ xleft exch trpoint moveto xextra neg 0 rmoveto
  yticklength neg 0 rmoveto -0.3 ft -0.3 ft rmoveto
  dup expstringwidth neg 0 rmoveto expstringshow
} def

% printrtick: print one r tick
% ypos printrtick -
/printrtick
{ newpath
  xright exch trpoint moveto xextra 0 rmoveto
  rticklength 0 rlineto [] 0 setdash stroke
} def

% printrlabel: print one r label
% (rlabel) ypos printrlabel -
/printrlabel
{ xright exch trpoint moveto xextra 0 rmoveto
  rticklength 0 rmoveto  0.3 ft -0.3 ft rmoveto
  expstringshow
} def

% printticks: print ticks and labels
% /tickproc /labelproc [ tickandlabeldata ] min printticks -
/printticks
{ /prev exch def
  { dup type dup dup /integertype eq exch /realtype eq or
    { pop dup /prev exch def 2 index cvx exec
    }
    { /stringtype eq
      { prev 2 index cvx exec
      }
      { pop
      } ifelse
    } ifelse
  } forall
  pop pop
} def


% printxaxistick: print one x axis tick
% xpos printxaxistick -
/printxaxistick
{ newpath
  yaxis trpoint moveto 0 xticklength -2 div rmoveto
  0 xticklength rlineto [] 0 setdash stroke
} def

% printxaxislabel: print one x axis label
% (xlabel) xpos printxaxislabel -
/printxaxislabel
{ yaxis trpoint moveto
  0 xticklength -2 div rmoveto 0 0.9 ft neg rmoveto
  xlog 1 gt { 0 0.3 ft neg rmoveto } if
  dup expstringwidth -2 div 0 rmoveto expstringshow
} def

% printyaxistick: print one y axis tick
% ypos printyaxistick -
/printyaxistick
{ newpath
  xaxis exch trpoint moveto
  yticklength -2 div 0 rmoveto
  yticklength 0 rlineto [] 0 setdash stroke
} def

% printyaxislabel: print one y axis label
% (ylabel) ypos printyaxislabel -
/printyaxislabel
{ xaxis exch trpoint moveto
  yticklength -2 div 0 rmoveto -0.3 ft -0.3 ft rmoveto
  dup expstringwidth neg 0 rmoveto expstringshow
} def


% <val> minmax -
% perform minv := min(minv, val); maxv := max(maxv, val)
% allowing for the possibility of minv, maxv, val being false (undefined)
/minmax
{ dup false eq
  { pop }
  { minv false eq
    { dup /minv exch def /maxv exch def }
    { dup minv lt
      { /minv exch def }
      { dup maxv gt
	{ /maxv exch def }
	{ pop }
	ifelse
      } ifelse
    } ifelse
  } ifelse
} def

% <ticks> ticksundef <ticks> <bool>
% returns true iff the ticks array is undefined (one false entry)
/ticksundef
{ dup length 1 eq
  { dup 0 get false eq
  }
  { false }
  ifelse
} def

% <number> integral <boolean>
% true if the number has an integral value
/integral { dup round eq } def

% ticksep ticks xory alldata minval maxval axis base ticksandlimits ticks min max base
% ticksandlimits: sort out value of x or y ticks and limits and log base
/ticksandlimits
{ /base exch def
  /minv false def
  /maxv false def

  % min and max of user-supplied minval, maxval, and axis
  minmax minmax minmax

  % min and max of data points
  { 0 get dup dup length 1 sub 3 index exch 2 exch
    { get minmax dup
    } for pop pop
  } forall
  pop dup

  % min and max of tick values
  { dup type /stringtype eq
    { pop } { minmax } ifelse
  } forall

  % fix minv and maxv if undefined (false) or equal
  minv false eq
  { /minv -1 def /maxv 1 def }
  { minv maxv eq
    { minv 0 lt
      { /minv 2 minv mul def /maxv 0 def
      }
      { minv 0 eq
	{ /minv -1 def /maxv 1 def
	}
	{ /minv 0 def /maxv 2 maxv mul def
	} ifelse
      } ifelse
    } if
  } ifelse

  % invent ticks if undefined
  ticksundef
  { pop /ticksep exch def

    % if base is reasonable and minv is positive, logarithmic ticks
    base 1 gt minv 0 gt and
    {
      % get integral log of minv and maxv
      /logminv base minv plog floor   cvi def
      /logmaxv base maxv plog ceiling cvi def

      % if minv close to base, make it 1; reset minv and maxv
      logminv 1 eq logmaxv 4 ge and { /logminv 0 def } if
      /minv base logminv exp def
      /maxv base logmaxv exp def

      % ticks := [ base**logminv, ... , base**logmaxv ]
      [ logminv 1 logmaxv
	{ dup base exch exp
	  exch base exch loglgen
	} for
      ]
    }
    { % non-logarithmic ticks
      {
        % fix tick separation if undefined (0) or too small
	/base 0 def
        /delta maxv minv sub def
        ticksep delta 30 div le
        { /ticksep 10 delta log 1 sub ceiling exp def
	  ticksep delta 2 div ge
	  { /ticksep ticksep 2 div def }
	  { ticksep delta 5 div lt
	    { /ticksep 2 ticksep mul def
	    } if
	  } ifelse
        } if

        % adjust minv and maxv to be multiples of ticksep
        /minv minv ticksep div floor   ticksep mul def
        /maxv maxv ticksep div ceiling ticksep mul def
        /delta maxv minv sub def

        % if minv or maxv near zero, move to zero and redo
        minv ticksep eq
        { /minv 0 def }
        { maxv ticksep neg eq { /maxv 0 def } { exit } ifelse
        } ifelse
      } loop

      % if minv, maxv, and ticksep are all integral, set "makeint" to true
      /makeint minv integral maxv integral ticksep integral and and def

      % ticks := [ minv, minv+ticksep, ... , maxv ]
      [ 0 1 delta ticksep div round
	{ ticksep mul minv add makeint { cvi } if lgen }
	for
      ]
    } ifelse
  }
  { exch pop
  } ifelse
  minv maxv base
} def

% xset: set up all data for x axis, including limits and ticks
% xticksep xticks 0 alldata xmin xmax xlog xextra xdecr xaxis xticklength xset -
/xset
{ /xticklength exch def
  /xaxis exch def
  /xdecr exch def
  /xextra exch def
  xaxis exch ticksandlimits
  /xlog exch def /xmax exch def /xmin exch def /xticks exch def
  /xleft xdecr { xmax } { xmin } ifelse def
  /xright xdecr { xmin } { xmax } ifelse def
  /xwidth xsize xextra 2 mul sub def
  /trxmin xmin xtr def /trxmax xmax xtr def
} def

% yset: set up all data for y axis, including limits and yticks
% yticksep yticks 0 alldata ymin ymax ylog yextra ydecr yaxis yticklength yset -
/yset
{ /yticklength exch def
  /yaxis exch def
  /ydecr exch def
  /yextra exch def
  yaxis exch ticksandlimits
  /ylog exch def /ymax exch def /ymin exch def /yticks exch def
  /yleft ydecr { ymax } { ymin } ifelse def
  /yright ydecr { ymin } { ymax } ifelse def
  /ywidth ysize yextra 2 mul sub def
  /trymin ymin ytr def /trymax ymax ytr def
} def

% rset: set up all data for y axis (again), but including limits and rticks
% rticksep rticks 0 alldata ymin ymax ylog yextra ydecr yaxis rticklength rset -
/rset
{ /rticklength exch def
  /yaxis exch def
  /ydecr exch def
  /yextra exch def
  yaxis exch ticksandlimits
  /ylog exch def /ymax exch def /ymin exch def /rticks exch def
  /yleft ydecr { ymax } { ymin } ifelse def
  /yright ydecr { ymin } { ymax } ifelse def
  /ywidth ysize yextra 2 mul sub def
  /trymin ymin ytr def /trymax ymax ytr def
} def

% norset: set up data for no rticks
% - norset -
/norset
{ /rticklength 0 def
  /rticks [] def
} def

% framestyle: print a frame around the graph
/framestyle
{ 0 0 moveto xsize 0 lineto xsize ysize lineto
  0 ysize lineto closepath stroke
  /printxtick /printxlabel xticks xleft printticks
  /printytick /printylabel yticks ymin printticks
  /printrtick /printrlabel rticks ymin printticks
} def

% nonestyle: print nothing around the graph
/nonestyle
{
} def

% axesstyle: print axes for the graph (unless axis values missing)
/axesstyle
{
  xaxis false eq yaxis false eq or
  { framestyle }
  { xaxis yaxis trpoint dup 0 exch moveto xsize exch lineto
    dup 0 moveto ysize lineto stroke
    /printxaxistick /printxaxislabel xticks xleft printticks
    /printyaxistick /printyaxislabel yticks ymin printticks
  } ifelse
} def

% rundata: run all data sets
/rundata
{ alldata
  { gsave
    dup dup dup dup
    4 get /dopaint exch def
    3 get /initrun exch def
    2 get /pairs exch def
    1 get /points exch def
    0 get /data exch def
    dopaint
    { data length 4 ge
      { initrun
	newpath
	data 0 get ymin trpoint yextra sub moveto
	0 2 data length 2 sub
	{ dup 1 add
	  data exch get /ycurr exch def
	  data exch get /xcurr exch def
	  xcurr ycurr trpoint lineto
	} for
	data dup length 2 sub get ymin trpoint yextra sub lineto
	closepath fill
      } if
    } if
    initrun
    data length 2 ge
    {
      /xcurr data 0 get def
      /ycurr data 1 get def
      points
      data length 4 ge
      { 2 2 data length 2 sub
	{ /xprev xcurr def
          /yprev ycurr def
	  dup dup 2 eq /firstpair exch def
	  data length 2 sub eq /lastpair exch def
	  dup 1 add
          data exch get /ycurr exch def
          data exch get /xcurr exch def
	  pairs
	  points
	} for
      } if
    } if
    grestore
  } forall
} def

end
%%EndResource

%%BeginResource: procset LoutTabPrependGraphic
% @PrependGraphic file /usr/share/lout/include/tabf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                  %
%  PostScript @SysPrependGraphic file for @Tab     %
%                                                  %
%  To assist in avoiding name clashes, the names   %
%  of all these symbols begin with "ltab".         %
%                                                  %
%  Jeffrey H. Kingston                             %
%  24 September 1991                               %
%  22 December 1992                                %
%                                                  %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% linewidth ltabhs -
% horizontal single line
/ltabhs
{  0 0 moveto xsize 0 lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabhsp -
% horizontal single line with projecting ends
/ltabhsp
{  0 0 moveto xsize 0 lineto
   setlinewidth 2 setlinecap stroke
} def

% linewidth ltabhd -
% horizontal double line
/ltabhd
{  dup dup
   0 0 moveto xsize 0 lineto
   0 exch 3 mul moveto xsize exch 3 mul lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabhdb -
% horizontal double line below mark
/ltabhdb
{  dup dup
   0 0 moveto xsize 0 lineto
   0 exch -3 mul moveto xsize exch -3 mul lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabhdnw -
% horizontal double line with northwest corner
/ltabhdnw
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   xsize exch 3 mul moveto
   -3 mul exch 3 mul lineto
   -3 mul 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabhdne -
% horizontal double line with northeast corner
/ltabhdne
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   0 exch 3 mul moveto
   3 mul xsize add exch 3 mul lineto
   3 mul xsize add 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabhdsw -
% horizontal double line with southwest corner
/ltabhdsw
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   xsize exch -3 mul moveto
   -3 mul exch -3 mul lineto
   -3 mul 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabhdse -
% horizontal double line with southeast corner
/ltabhdse
{  dup dup dup dup
   0 0 moveto xsize 0 lineto
   0 exch -3 mul moveto
   3 mul xsize add exch -3 mul lineto
   3 mul xsize add 0 lineto
   setlinewidth 0 setlinejoin 2 setlinecap stroke
} def

% linewidth ltabvs -
% vertical single line
/ltabvs
{  0 0 moveto 0 ysize lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabvd -
% vertical double line
/ltabvd
{  dup dup
   0 0 moveto 0 ysize lineto
   -3 mul 0 moveto -3 mul ysize lineto
   setlinewidth 0 setlinecap stroke
} def

% linewidth ltabvdr -
% vertical double line to right of mark
/ltabvdr
{  dup dup
   0 0 moveto 0 ysize lineto
   3 mul 0 moveto 3 mul ysize lineto
   setlinewidth 0 setlinecap stroke
} def
%%EndResource

%%BeginResource: procset LoutDiagPrependGraphic
% @PrependGraphic file /usr/share/lout/include/diagf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @Diag Jeffrey H. Kingston  %
%  Version 2.0 (includes CIRCUM label)                September 1996 %
%                                                                    %
%  To assist in avoiding name clashes, the names of all symbols      %
%  defined here begin with "ldiag".  However, this is not feasible   %
%  with user-defined labels and some labels used by users.           %
%                                                                    %
%  <point>      is two numbers, a point.                             %
%  <length>     is one number, a length                              %
%  <angle>      is one number, an angle in degrees                   %
%  <dashlength> is one number, the preferred length of a dash        %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

errordict begin
   /handleerror
   {
      {  /Times-Roman findfont 8 pt scalefont setfont
	 0 setgray 4 pt 4 pt moveto
	 $error /errorname get
	 dup ldiagdict exch known
	 { ldiagdict exch get }
	 { 100 string cvs } ifelse
	 show
	 (  Command: ) show
	 $error /command get 100 string cvs show
      } stopped {} if
      showpage stop
   } def
end

% begin diagram: <maxlabels> ldiagbegin -
% must be defined outside ldiagdict since it loads it
/ldiagbegin
{ xsize 0 0 ysize ldiagdict begin
  5 -1 roll /ldiagmaxlabels exch def
  (@Diag) ldiagpushtagdict
  /OOY ldiagpointdef /OOX ldiagpointdef 0 0 /OOO ldiagpointdef
} def

% end diagram: - ldiagend -
/ldiagend
{ ldiagpoptagdict end
} def

% concat strings: <string> <string> ldiagconcat <string>
% must be defined outside ldiagdict since used in ldiagpromotelabels
/ldiagconcat
{ 2 copy length exch length add string
  dup 0 4 index putinterval
  dup 3 index length 3 index putinterval
  3 1 roll pop pop
} def

% mconcat strings: <string> <string> ldiagmconcat <string>
% returns concatenation, separated by @ if first is non-empty
% must be defined outside ldiagdict since used in ldiagpromotelabels
/ldiagmconcat
{
  2 copy length exch length add 1 add string
  dup 0 4 index putinterval
  dup 3 index length (@) putinterval
  dup 3 index length 1 add 3 index putinterval
  3 1 roll pop pop
} def

% show string in format start ... end: <string> ldiagsends <string>
/ldiagsends
{
  dup length 20 string cvs (: ) ldiagconcat exch
  dup 0 20 getinterval ( ... ) ldiagconcat
  3 -1 roll exch ldiagconcat
  exch dup length 20 sub 20 getinterval ldiagconcat
} def

/ldiagdebugposy 432 def
/ldiagdebugposx 72 def

% <string> <int> ldiagdebugprint -
% must be defined outside ldiagdict since used in arbitrary places
% print <string> plus count or <int> stack entries, whichever is the smaller
/ldiagdebugprint
{
  exch
  gsave
  initgraphics
  ldiagdebugposy 72 lt
  { /ldiagdebugposx ldiagdebugposx 144 add store
    /ldiagdebugposy 432 store
  }
  {
    /ldiagdebugposy ldiagdebugposy 12 sub store
  } ifelse
  ldiagdebugposx ldiagdebugposy moveto
  /Times-Roman findfont 10 scalefont setfont
  0 setgray show
  count 1 sub 2 copy lt { pop } { exch pop } ifelse 1 sub
  0 exch 1 exch
  {
    /ldiagdebugposy ldiagdebugposy 12 sub store
    ldiagdebugposx 12 add ldiagdebugposy moveto
    index
    dup type (dicttype) eq
    {
      (begin dict) show
      {
        /ldiagdebugposy ldiagdebugposy 12 sub store
        ldiagdebugposx 12 add ldiagdebugposy moveto
	pop 100 string cvs show
      } forall
      /ldiagdebugposy ldiagdebugposy 12 sub store
      ldiagdebugposx 12 add ldiagdebugposy moveto
      (end dict) show
    }
    {
      100 string cvs show
    } ifelse
  } for
  grestore
} def

/ldiagdict 200 dict def
ldiagdict begin

% error messages
/dictfull (dictfull error:  too many labels?) def
/dictstackoverflow (dictstackoverflow error:  labels nested too deeply?) def
/execstackoverflow (execstackoverflow error:  figure nested too deeply?) def
/limitcheck (limitcheck error:  figure nested too deeply or too large?) def
/syntaxerror (syntaxerror error:  syntax error in text of figure?) def
/typecheck (typecheck error:  syntax error in text of figure?) def
/undefined (undefined error:  unknown or misspelt label?) def
/VMError (VMError error:  run out of memory?) def

% push pi onto stack:  - ldiagpi <num>
/ldiagpi 3.14159 def

% push e onto stack:  - ldiage <num>
/ldiage 2.71828 def

% arc directions
/clockwise     false def
/anticlockwise true  def

% test equality between two angles:  <angle> <angle> ldiagangleeq <bool>
/ldiagangleeq { ldiagfixangle exch ldiagfixangle eq } def

% test inequality between two angles:  <angle> <angle> ldiaganglene <bool>
/ldiaganglene { ldiagangleeq not } def

% maximum of two numbers:  <num> <num> ldiagmax <num>
/ldiagmax { 2 copy gt { pop } { exch pop } ifelse } def

% minimum of two numbers:  <num> <num> ldiagmin <num>
/ldiagmin { 2 copy lt { pop } { exch pop } ifelse } def

% add two points:  <point> <point> ldiagpadd <point>
/ldiagpadd
{
  % (Entering padd) 4 ldiagdebugprint
  exch 3 1 roll add 3 1 roll add exch
  % (Leaving padd) 2 ldiagdebugprint
} def

% subtract first point from second:  <point> <point> ldiagpsub <point>
/ldiagpsub { 3 2 roll sub 3 1 roll exch sub exch } def

% max two points:  <point> <point> ldiagpmax <point>
/ldiagpmax { exch 3 1 roll ldiagmax 3 1 roll ldiagmax exch } def

% min two points:  <point> <point> ldiagpmin <point>
/ldiagpmin { exch 3 1 roll ldiagmin 3 1 roll ldiagmin exch } def

% scalar multiplication: <point> <num> ldiagpmul <point>
/ldiagpmul { dup 3 1 roll mul 3 1 roll mul exch } def

% point at angle and distance:  <point> <length> <angle> ldiagatangle <point>
/ldiagatangle { 2 copy cos mul 3 1 roll sin mul ldiagpadd } def

% angle from one point to another:  <point> <point> ldiagangleto <angle>
/ldiagangleto { ldiagpsub 2 copy 0 eq exch 0 eq and {pop} {exch atan} ifelse } def

% distance between two points:  <point> <point> ldiagdistance <length>
/ldiagdistance { ldiagpsub dup mul exch dup mul add sqrt } def

% stroke a solid line:  <length> <dashlength> ldiagsolid -
/ldiagsolid
{  pop pop [] 0 setdash 1 setlinecap stroke
} def

% stroke a dashed line:   <length> <dashlength> ldiagdashed -
/ldiagdashed
{  2 copy div 2 le 1 index 0 le or
   {  exch pop 1 pt ldiagmax [ exch dup ] 0 setdash }
   {  dup [ exch 4 2 roll 2 copy div
      1 sub 2 div ceiling dup 4 1 roll
      1 add mul sub exch div ] 0 setdash
   } ifelse 0 setlinecap stroke
} def

% stroke a cdashed line:  <length> <dashlength> ldiagcdashed -
/ldiagcdashed
{  % (Entering ldiagcdashed) 2 ldiagdebugprint
   2 copy le 1 index 0 le or
   { exch pop 1 pt ldiagmax [ exch dup ] dup 0 get 2 div setdash }
   { dup [ 4 2 roll exch 2 copy exch div
     2 div ceiling div 1 index sub
     ] exch 2 div setdash
   } ifelse 0 setlinecap stroke
   % (Leaving ldiagcdashed) 0 ldiagdebugprint
} def

% stroke a dotted line:  <length> <dashlength> ldiagdotted -
/ldiagdotted
{  2 copy le 1 index 0 le or
   { exch pop 1 pt ldiagmax [ exch 0 exch ] 0 setdash }
   { 1 index exch div ceiling div
     [ 0 3 2 roll ] 0 setdash
   } ifelse 1 setlinecap stroke
} def

% stroke a noline line:  <length> <dashlength> ldiagnoline -
/ldiagnoline
{ pop pop
} def

/ldiagbox
{
   0     0         /SW  ldiagpointdef
   xsize 0         /SE  ldiagpointdef
   xsize ysize     /NE  ldiagpointdef
   0     ysize     /NW  ldiagpointdef
   SE 0.5 ldiagpmul /S   ldiagpointdef
   NW 0.5 ldiagpmul /W   ldiagpointdef
   W SE ldiagpadd   /E   ldiagpointdef
   S NW ldiagpadd   /N   ldiagpointdef
   NE 0.5 ldiagpmul /CTR ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ CTR NE ldiagpsub /ldiagboxcircum cvx ] ldiagcircumdef
   SW SE NE NW SW
} def

% shape and labels of the @CurveBox symbol
% <margin> ldiagcurvebox <shape>
/ldiagcurvebox
{  

   % (Entering ldiagcurvebox) 1 ldiagdebugprint
   ldiagdecodelength /cbmgn exch def

   xsize 0.5 mul	ysize 0.5 mul	/CTR ldiagpointdef
   xsize 0.5 mul	0		/S   ldiagpointdef
   xsize		ysize 0.5 mul	/E   ldiagpointdef
   xsize 0.5 mul	ysize		/N   ldiagpointdef
   0			ysize 0.5 mul	/W   ldiagpointdef

   cbmgn 0.293 mul		cbmgn 0.293 mul		  /SW  ldiagpointdef
   xsize cbmgn 0.293 mul sub	cbmgn 0.293 mul		  /SE  ldiagpointdef
   xsize cbmgn 0.293 mul sub	ysize cbmgn 0.293 mul sub /NE  ldiagpointdef
   cbmgn 0.293 mul		ysize cbmgn 0.293 mul sub /NW  ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ xsize ysize 0.5 ldiagpmul cbmgn /ldiagcurveboxcircum cvx ] ldiagcircumdef

   cbmgn		0
   xsize cbmgn sub	0
   [ xsize cbmgn sub	cbmgn		]
   xsize		cbmgn
   xsize		ysize cbmgn sub
   [ xsize cbmgn sub	ysize cbmgn sub	]
   xsize cbmgn sub	ysize
   cbmgn		ysize
   [ cbmgn		ysize cbmgn sub	]
   0			ysize cbmgn sub
   0			cbmgn
   [ cbmgn		cbmgn		]
   cbmgn		0

   % (Leaving ldiagcurvebox) 0 ldiagdebugprint
} def

% shadow of the @ShadowBox symbol
% its shape and labels are done, somewhat inaccurately, with ldiagbox
% <shadowmargin> ldiagshadow -
/ldiagshadow
{ 
  /lfshm exch def
  
  lfshm 0 moveto
  0 lfshm neg rlineto
  xsize 0 rlineto
  0 ysize rlineto
  lfshm neg 0 rlineto
  xsize 0 lineto
  closepath fill

} def

% shape and labels of the @Square symbol
/ldiagsquare
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   CTR xsize xsize ysize ysize ldiagpmax 0.5 ldiagpmul ldiagpadd /NE ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 135 ldiagatangle ldiagpadd /NW ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 225 ldiagatangle ldiagpadd /SW ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 315 ldiagatangle ldiagpadd /SE ldiagpointdef
   SW 0.5 ldiagpmul SE 0.5 ldiagpmul ldiagpadd /S ldiagpointdef
   NW 0.5 ldiagpmul NE 0.5 ldiagpmul ldiagpadd /N ldiagpointdef
   SW 0.5 ldiagpmul NW 0.5 ldiagpmul ldiagpadd /W ldiagpointdef
   SE 0.5 ldiagpmul NE 0.5 ldiagpmul ldiagpadd /E ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ CTR NE ldiagpsub /ldiagboxcircum cvx ] ldiagcircumdef
   SW SE NE NW SW
} def

% shape and labels of the @Diamond symbol
/ldiagdiamond
{
   xsize 0 0.5 ldiagpmul /S   ldiagpointdef
   0 ysize 0.5 ldiagpmul /W   ldiagpointdef
   S W         ldiagpadd /CTR ldiagpointdef
   CTR W       ldiagpadd /N   ldiagpointdef
   CTR S       ldiagpadd /E   ldiagpointdef
   E N ldiagpadd 0.5 ldiagpmul /NE ldiagpointdef
   N W ldiagpadd 0.5 ldiagpmul /NW ldiagpointdef
   S W ldiagpadd 0.5 ldiagpmul /SW ldiagpointdef
   S E ldiagpadd 0.5 ldiagpmul /SE ldiagpointdef

     0 dg        /S@ANGLE  ldiagangledef
    90 dg        /E@ANGLE  ldiagangledef
   180 dg        /N@ANGLE  ldiagangledef
   270 dg        /W@ANGLE  ldiagangledef
   S E ldiagangleto /SE@ANGLE ldiagangledef
   E N ldiagangleto /NE@ANGLE ldiagangledef
   N W ldiagangleto /NW@ANGLE ldiagangledef
   W S ldiagangleto /SW@ANGLE ldiagangledef

   [ xsize ysize 0.5 ldiagpmul /ldiagdiamondcircum cvx ] ldiagcircumdef
   S E N W S
} def

% shape and labels of the @Ellipse symbol
/ldiagellipse
{
   xsize 0 0.5 ldiagpmul /S   ldiagpointdef
   0 ysize 0.5 ldiagpmul /W   ldiagpointdef
   S W         ldiagpadd /CTR ldiagpointdef
   CTR W       ldiagpadd /N   ldiagpointdef
   CTR S       ldiagpadd /E   ldiagpointdef
   CTR xsize 0 0.3536 ldiagpmul ldiagpadd 0 ysize 0.3536 ldiagpmul ldiagpadd /NE ldiagpointdef
   0 ysize 0.3536 ldiagpmul CTR xsize 0 0.3536 ldiagpmul ldiagpadd ldiagpsub /SE ldiagpointdef
   xsize 0 0.3536 ldiagpmul CTR ldiagpsub 0 ysize 0.3536 ldiagpmul ldiagpadd /NW ldiagpointdef
   0 ysize 0.3536 ldiagpmul xsize 0 0.3536 ldiagpmul CTR ldiagpsub ldiagpsub /SW ldiagpointdef
   [ xsize ysize 0.5 ldiagpmul /ldiagellipsecircum cvx ] ldiagcircumdef

     0 dg /S@ANGLE  ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   270 dg /W@ANGLE  ldiagangledef

   S E ldiagangleto /SE@ANGLE ldiagangledef
   E N ldiagangleto /NE@ANGLE ldiagangledef
   N W ldiagangleto /NW@ANGLE ldiagangledef
   W S ldiagangleto /SW@ANGLE ldiagangledef

   S [ CTR ] E [ CTR ] N [ CTR ] W [ CTR ] S
} def

% shape and labels of the @Circle symbol
/ldiagcircle
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   CTR xsize 0 ysize 0 ldiagpmax 0.5 ldiagpmul ldiagpadd /E ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 45 ldiagatangle ldiagpadd /NE ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 90 ldiagatangle ldiagpadd /N ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 135 ldiagatangle ldiagpadd /NW ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 180 ldiagatangle ldiagpadd /W ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 225 ldiagatangle ldiagpadd /SW ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 270 ldiagatangle ldiagpadd /S ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 315 ldiagatangle ldiagpadd /SE ldiagpointdef
   [ S E ldiagpsub /ldiagellipsecircum cvx ] ldiagcircumdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   S [ CTR ] E [ CTR ] N [ CTR ] W [ CTR ] S
} def

% shape and labels of the @VLine and @VArrow symbols
/ldiagvline
{
   xmark ysize ldiagprevious /FROM ldiagpointdef
   xmark 0 ldiagprevious /TO ldiagpointdef
} def

% points of a polygon around base with given no of sides, vert init angle:
% <sides> <angle> ldiagpolygon <point> ... <point>
/ldiagpolygon
{  exch round cvi exch
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   90 sub CTR 2 copy ldiagmax 5 3 roll
   [ 4 copy pop /ldiagpolycircum cvx ] ldiagcircumdef
   exch dup 360 exch div exch
   1 1  3 2 roll
   {  4 string cvs (P) exch ldiagconcat
      3 copy exch pop (@ANGLE) ldiagconcat cvn exch 90 add exch ldiagangledef
      cvn 6 copy pop pop ldiagatangle 2 copy 10 2 roll
      3 2 roll ldiagpointdef
      dup 3 1 roll add exch
   }  for
   pop ldiagatangle
} def

% shape and labels of the @Isosceles triangle symbol
/ldiagisosceles
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   0     0                   /SW  ldiagpointdef
   xsize 0                   /SE  ldiagpointdef
   xsize 0.5 mul ysize       /N   ldiagpointdef
   xsize 0.5 mul 0           /S   ldiagpointdef
   SE 0.5 ldiagpmul N 0.5 ldiagpmul ldiagpadd /NE ldiagpointdef
   SW 0.5 ldiagpmul N 0.5 ldiagpmul ldiagpadd /NW ldiagpointdef

   [ xsize ysize /ldiagisoscelescircum cvx ] ldiagcircumdef

     0 dg              /SW@ANGLE ldiagangledef
     0 dg              /SE@ANGLE ldiagangledef
   180 dg              /N@ANGLE  ldiagangledef
     0 dg              /S@ANGLE  ldiagangledef
     SE N ldiagangleto /NE@ANGLE ldiagangledef
     N SW ldiagangleto /NW@ANGLE ldiagangledef

   SW SE N SW
} def

% next array element:  <array> <index> ldiaggetnext <array> <index> <any> true
%                                               or <array> <index> false
/ldiaggetnext
{  2 copy exch length ge
   { false }
   { 2 copy get exch 1 add exch true } ifelse
} def

% check whether thing is number:  <any> ldiagisnumbertype <any> <bool>
/ldiagisnumbertype
{  dup type dup
   /integertype eq exch /realtype eq or
} def

% check whether thing is an array:  <any> ldiagisarraytype <any> <bool>
/ldiagisarraytype { dup type /arraytype eq } def

% check whether thing is an array:  <any> ldiagisnametype <any> <bool>
/ldiagisnametype { dup type /nametype eq } def

% get next item:  <array> <index> ldiaggetnextitem <array> <index> 0
%                                              or <array> <index> <array> 1
%                                              or <array> <index> <point> 2
/ldiaggetnextitem
{   ldiaggetnext
    {	ldiagisarraytype
	{   1
	}
	{   ldiagisnumbertype
	    {	3 1 roll
		ldiaggetnext
		{   ldiagisnumbertype
		    {	4 3 roll exch  2
		    }
		    {	pop 3 2 roll pop  0
		    } ifelse
		}
		{   3 2 roll pop  0
		} ifelse
	    }
	    {	pop 0
	    } ifelse
	} ifelse
    }
    {	0
    } ifelse
} def

% approximate equality: num1 num2  approxeq  <boolean>
/approxeq
{ dup 0 eq
  { pop 0 eq
  }
  { dup 3 1 roll sub exch div abs 0.001 lt
  } ifelse
} def

% set arc path:  bool x1 y1  x2 y2  x0 y0  ldiagsetarc  <angle> <angle> <dist>
% the path goes from x1 y1 to x2 y2 about centre x0 y0,
% anticlockwise if bool is true else clockwise.
% The orientations of backwards pointing and forwards pointing
% arrowheads are returned in the two angles, and
% the length of the arc is returned in <dist>.
/ldiagsetarc
{
  % (Entering ldiagsetarc) 7 ldiagdebugprint
  20 dict begin
     matrix currentmatrix 8 1 roll
     2 copy translate 2 copy 8 2 roll
     4 2 roll ldiagpsub 6 2 roll ldiagpsub
     dup /y1 exch def dup mul /y1s exch def
     dup /x1 exch def dup mul /x1s exch def
     dup /y2 exch def dup mul /y2s exch def
     dup /x2 exch def dup mul /x2s exch def
     /dist1 0 0 x1 y1 ldiagdistance def
     /dist2 0 0 x2 y2 ldiagdistance def

     y1s y2s approxeq
     {	-1
     }
     {	y1s x2s mul y2s x1s mul sub y1s y2s sub div
     } ifelse
     /da exch def

     x1s x2s approxeq
     {	-1
     }
     {	x1s y2s mul x2s y1s mul sub x1s x2s sub div
     } ifelse
     /db exch def

     da 0 gt db 0 gt and
     {
	% (  case 1, ellipse) 0 ldiagdebugprint
	/LMax da sqrt db sqrt ldiagmax def
	/scalex da sqrt LMax div def
	/scaley db sqrt LMax div def
	scalex scaley scale
	0 0 LMax
	0 0 x1 scalex mul y1 scaley mul ldiagangleto
	0 0 x2 scalex mul y2 scaley mul ldiagangleto
	2 copy eq { 360 add } if
	2 copy 8 2 roll
	5 index { arc } { arcn } ifelse
	2 index 1 index
	{ 90 sub } { 90 add } ifelse
	dup sin scaley mul exch cos scalex mul atan
	2 index 2 index
	{ 90 add } { 90 sub } ifelse
	dup sin scaley mul exch cos scalex mul atan
	5 2 roll  % res1 res2 ang1 ang2 anticlockwise
	{ exch sub } { sub } ifelse
	dup 0 le { 360 add } if  ldiagpi mul LMax mul 180 div
     }
     {
	dist1 dist2 approxeq
	% x1 y1 dist1 (  x1 y1, d) 3 ldiagdebugprint pop pop pop
	% x2 y2 dist2 (  x2 y2, d) 3 ldiagdebugprint pop pop pop
	{
		% (  case 2, circle) 0 ldiagdebugprint
		0 0
		dist1
		0 0 x1 y1 ldiagangleto
		0 0 x2 y2 ldiagangleto
		2 copy eq { 360 add } if
		2 copy 8 2 roll
		5 index { arc } { arcn } ifelse
		2 index 1 index
		{ 90 sub } { 90 add } ifelse
		2 index 2 index
		{ 90 add } { 90 sub } ifelse
		5 2 roll % res1 res2 ang1 ang2 clockwise
		{ exch sub } { sub } ifelse
		dup 0 le { 360 add } if
		ldiagpi mul dist1 mul 180 div
	}
	{
		% (  case 3, line) 0 ldiagdebugprint
		x2 y2 lineto pop
		x2 y2 x1 y1 ldiagangleto
		x1 y1 x2 y2 ldiagangleto
		x1 y1 x2 y2 ldiagdistance
	} ifelse
     } ifelse
     4 -1 roll setmatrix
     end
  % (Leaving ldiagsetarc) 3 ldiagdebugprint
} def

% ldiagsetcurve: set up a Bezier curve from x0 y0 to x3 y3
% and return arrowhead angles and length of curve (actually 0)
% x0 y0 x1 y1 x2 y2 x3 y3 ldiagsetcurve <angle> <angle> <length>
/ldiagsetcurve
{ 8 copy curveto pop pop
  ldiagangleto
  5 1 roll
  4 2 roll ldiagangleto
  exch
  0
} def

% ldiagsetpath: convert a Diag path into a PostScript path
% [ shape ] ldiagsetpath 
/ldiagsetpath
{
  10 dict begin
    0 newpath
    /prevseen false def
    /curveseen false def
    { ldiaggetnextitem
      dup 0 eq { pop exit }
      { 1 eq
        { /curveseen true def
	  /curve exch def
	  curve length 0 eq { /curveseen false def } if
        }
        { /ycurr exch def
	  /xcurr exch def
	  prevseen
	  { curveseen
	    { curve length 4 eq
	      { xprev yprev
		curve 0 get curve 1 get
		curve 2 get curve 3 get
		xcurr ycurr
		ldiagsetcurve pop pop pop
	      }
	      { xprev yprev xcurr ycurr
	        curve length 1 ge { curve 0 get } { 0 } ifelse
	        curve length 2 ge { curve 1 get } { 0 } ifelse
	        curve length 3 ge { curve 2 get } { true } ifelse
	        7 1 roll
	        ldiagsetarc pop pop pop
	      } ifelse
	    }
	    { xcurr ycurr lineto
	    } ifelse
	  }
	  { xcurr ycurr moveto
	  } ifelse
	  /xprev xcurr def
	  /yprev ycurr def
	  /prevseen true def
	  /curveseen false def
        } ifelse
      } ifelse
    } loop pop pop
  end
} def

% ldiagpaintpath: paint a path of the given shape
% /paint [ shape ] ldiagpaintpath -
/ldiagpaintpath
{
  ldiagsetpath cvx exec
} def

% stroke a path of the given shape in the given linestyle and dash length.
% Return the origin and angle of the backward and forward arrow heads.
% dashlength /linestyle [shape] ldiagdopath  [<point> <angle>] [<point> <angle>] 
/ldiagdopath
{
  10 dict begin
    0
    /prevseen  false def
    /curveseen false def
    /backarrow []    def
    /fwdarrow  []    def
    {
	ldiaggetnextitem
	dup 0 eq { pop exit }
	{
	    1 eq
	    {	/curveseen true def
		/curve exch def
		curve length 0 eq { /prevseen false def } if
	    }
	    {	/ycurr exch def
		/xcurr exch def
		prevseen
		{   newpath xprev yprev moveto
		    curveseen
		    {	curve length 4 eq
			{   xprev yprev
			    curve 0 get curve 1 get
			    curve 2 get curve 3 get
			    xcurr ycurr ldiagsetcurve
			}
			{   xprev yprev xcurr ycurr
			    curve length 1 ge { curve 0 get } { 0 } ifelse
			    curve length 2 ge { curve 1 get } { 0 } ifelse
			    curve length 3 ge { curve 2 get } { true } ifelse
			    7 1 roll
			    ldiagsetarc
			} ifelse
		    }
		    {	xcurr ycurr lineto
			xcurr ycurr xprev yprev ldiagangleto dup 180 sub
			xprev yprev xcurr ycurr ldiagdistance
		    } ifelse
		    6 index 6 index cvx exec
		    [ xprev yprev 5 -1 roll ]
		    backarrow length 0 eq
		    { /backarrow exch def }
		    { pop } ifelse
		    [ xcurr ycurr 4 -1 roll ] /fwdarrow exch def
		} if
		/xprev xcurr def
		/yprev ycurr def
		/prevseen true def
		/curveseen false def
	    } ifelse
	} ifelse
    } loop
    pop pop pop pop
    backarrow length 0 eq { [ 0 0 0 ] } { backarrow } ifelse
    fwdarrow  length 0 eq { [ 0 0 0 ] } { fwdarrow  } ifelse
  end
} def


% stroke a path of the given shape in the given linestyle and dash length.
% dashlength [ /linestyle ] [shape] ldiagdosegpath  -
/ldiagdosegpath
{
  12 dict begin
    1 index /seg exch def
    1 index length /seglength exch def
    0 /segcount exch def
    0
    /prevseen  false def
    /curveseen false def
    /backarrow []    def
    /fwdarrow  []    def
    {
	ldiaggetnextitem
	dup 0 eq { pop exit }
	{
	    1 eq
	    {	/curveseen true def
		/curve exch def
		curve length 0 eq { /prevseen false def } if
	    }
	    {	/ycurr exch def
		/xcurr exch def
		prevseen
		{   newpath xprev yprev moveto
		    curveseen
		    {	curve length 4 eq
			{   xprev yprev
			    curve 0 get curve 1 get
			    curve 2 get curve 3 get
			    xcurr ycurr ldiagsetcurve
			}
			{   xprev yprev xcurr ycurr
			    curve length 1 ge { curve 0 get } { 0 } ifelse
			    curve length 2 ge { curve 1 get } { 0 } ifelse
			    curve length 3 ge { curve 2 get } { true } ifelse
			    7 1 roll
			    ldiagsetarc
			} ifelse
		    }
		    {	xcurr ycurr lineto
			xcurr ycurr xprev yprev ldiagangleto dup 180 sub
			xprev yprev xcurr ycurr ldiagdistance
		    } ifelse
		    6 index seg segcount seglength mod get cvx exec
		    /segcount segcount 1 add def
		    [ xprev yprev 5 -1 roll ]
		    backarrow length 0 eq
		    { /backarrow exch def }
		    { pop } ifelse
		    [ xcurr ycurr 4 -1 roll ] /fwdarrow exch def
		} if
		/xprev xcurr def
		/yprev ycurr def
		/prevseen true def
		/curveseen false def
	    } ifelse
	} ifelse
    } loop
    pop pop pop pop
  end
} def

% ldiagnodebegin: start of node parameters
% ldiagnodebegin -
/ldiagnodebegin
{ % (Entering ldiagnodebegin) 0 ldiagdebugprint
  ldiagmaxlabels dict begin 
} def

% ldiagnodeend: end of node parameters (so do the node)
% <outline> <dashlength> <style> <linewidth> <paint> ldiagnodeend -
/ldiagnodeend
{
  % (Entering ldiagnodeend) 0 ldiagdebugprint
  end % matches begin in ldiagnodebegin
  4 index gsave ldiagpaintpath grestore
  3 index ldiagsetpath clip newpath
  2 mul setlinewidth
  3 -1 roll ldiagdosegpath
  % (Leaving ldiagnodeend) 0 ldiagdebugprint
} def

% ldiaglinkbegin: start of link parameters
% <direct> ldiaglinkbegin -
/ldiaglinkbegin
{ ldiagmaxlabels dict begin 
  1 eq /direct exch def
} def

% ldiaglinkend: end of link parameters (so do the link)
% <outline> <dashlength> <style> <linewidth> ldiaglinkend -
/ldiaglinkend
{
  end % matches begin in ldiaglinkbegin
  setlinewidth
  3 -1 roll ldiagdosegpath
} def

% ldiagdoarrow: draw an arrow head of given form
% dashlength /lstyle /pstyle hfrac height width [ <point> <angle> ] ldiagdoarrow -
/ldiagdoarrow
{  matrix currentmatrix 8 1 roll
   dup 0 get 1 index 1 get translate
   2 get rotate
   [ 2 index neg 2 index 0 0
     3 index 3 index neg
     1 index 10 index mul 0
     7 index 7 index ]
   4 1 roll pop pop pop
   dup 3 1 roll
   gsave ldiagpaintpath grestore ldiagdopath pop pop
   setmatrix
} def

% arrow head styles
/ldiagopen     0.0 def
/ldiaghalfopen 0.5 def
/ldiagclosed   1.0 def

% stroke no arrows, forward, back, and both
/ldiagnoarrow { pop pop pop pop pop pop pop pop                        } def
/ldiagforward { 7 -1 roll ldiagdoarrow pop                              } def
/ldiagback    { 8 -2 roll pop ldiagdoarrow                              } def
/ldiagboth    { 8 -1 roll 7 copy ldiagdoarrow pop 7 -1 roll ldiagdoarrow } def

% ldiagprevious: return previous point on path
/ldiagprevious
{ ldiagisnumbertype
  { 2 copy }
  { ldiagisarraytype
    { 2 index 2 index }
    { 0 0 }
    ifelse
  } ifelse
} def

% Tag dictionary operators
%
% Diag's tag dictionaries are kept on the same stack as other dictionaries,
% since there is nowhere else to put them.  However, they are managed like
% a separate stack using the following operators:
%
%  <tag>  ldiagpushtagdict  -      Push a new, empty tag dictionary
%         ldiagtoptagdict   dict   Find the top tag dictionary
%         ldiagpoptagdict   -      Pop and destroy the top tag dictionary
%         ldiagpopuptagdict -      Pop top tag dict and promote its entries
% <array> ldiagpopsometagdict -    Like popuptagdict but only those promote
%                                  those labels listed in <array>
%         ldiagdebugtagdict -      Debug print of dictionary stack
%
% They are distinguished from other dictionaries by containing /ldiagtagdict,
% whose value is the <tag> which is used by ldiagpopuptagdict,
% and they are hopefully never the target of any non-tag definition because
% they are never the top dictionary, since push places the new dict second.

/ldiagpushtagdict
{ ldiagmaxlabels dict dup
  currentdict end exch begin begin
  exch /ldiagtagdict exch put
} def

/ldiagtoptagdict
{ /ldiagtagdict where not
  { (Diag internal error: no tag dictionary) show stop
  } if
} def

/ldiagpoptagdict
{
  % (Entering poptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
  mark
  { currentdict end
    dup /ldiagtagdict known
    { exit
    } if
  } loop
  pop
  counttomark
  { begin
  } repeat
  pop
  % (Leaving poptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% promote labels from top tag dictionary to second top tag dictionary
% each prefixed by <string>@ if <string> (value of /ldiagtagdict) is not empty
% - ldiagpopuptagdict -
/ldiagpopuptagdict
{
  ldiagtagdict
  % (Entering ldiagpopuptagdict) 1 ldiagdebugprint
  % ldiagdebugtagdict
  ldiagtoptagdict ldiagpoptagdict ldiagtoptagdict exch
  { exch dup length string cvs
    3 index exch ldiagmconcat
    cvn exch 2 index 3 1 roll put
  } forall
  pop pop
  % (Leaving ldiagpopuptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% similar to ldiagpopuptagdict but only those inner labels that are
% present in <array> will be promoted
% <array> ldiagpopsometagdict -
/ldiagpopsometagdict
{
  ldiagtagdict
  % (Entering ldiagpopsometagdict) 1 ldiagdebugprint
  % ldiagdebugtagdict
  ldiagtoptagdict
  ldiagpoptagdict
  ldiagtoptagdict
  4 -1 roll
  { dup 3 index exch
    get
    exch 4 index
    exch ldiagmconcat exch
    3 copy put
    pop pop
  } forall
  pop pop pop
  % (Leaving ldiagpopuptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% debug tag dictionary stack
/ldiagdebugtagdict
{ (Entering ldiagdebugtagdict) 0 ldiagdebugprint
  30 array dictstack
  { dup /ldiagtagdict known
    { dup /ldiagtagdict get 0 ldiagdebugprint
      { pop 100 string cvs (   ) exch ldiagconcat
	dup 0 ldiagdebugprint
	pop
      }
      forall
    }
    { pop (other) 0 ldiagdebugprint
    } ifelse
  } forall
  (Leaving ldiagdebugtagdict) 0 ldiagdebugprint
} def

% label a point in top tag dictionary:  <point> /name ldiagpointdef -
/ldiagpointdef
{
  % (Entering ldiagpointdef) 3 ldiagdebugprint
  [ 4 2 roll transform /itransform cvx ] cvx
  ldiagtoptagdict 3 1 roll put
  % (Leaving ldiagpointdef) 0 ldiagdebugprint
} def

% label an angle in top tag dictionary:  <angle> /name ldiagangledef -
/ldiagangledef
{
  % (Entering ldiagangledef) 2 ldiagdebugprint
  exch ldiagfixangle ldiagtoptagdict 3 1 roll put
  % (Leaving ldiagangledef) 0 ldiagdebugprint
} def

% add CIRCUM operator with this body:  <array> ldiagcircumdef -
/ldiagcircumdef
{   % (Entering ldiagcircumdef) 1 ldiagdebugprint
    /CIRCUM exch cvx
    ldiagtoptagdict 3 1 roll put
    % currentdict end
    % 3 1 roll
    % def
    % begin
    % (Leaving ldiagcircumdef) 0 ldiagdebugprint
} def

% show points (except CIRCUM and ANGLE): - ldiagshowpoints -
/ldiagshowpoints
{
  % (Entering ldiagshowpoints) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (CIRCUM) search % if CIRCUM in key
      { pop pop pop pop pop }
      { 
        (ANGLE) search % if ANGLE in key
        {
          pop pop pop pop pop
        }
        {
          (ldiagtagdict) search
          {
            pop pop pop pop pop
          }
          {
	    pop cvx exec
	    newpath 2.0 pt 0 360 arc 0 setgray fill pop
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowpoints) 0 ldiagdebugprint
} def


/ldiagshowtags
{
  % (Entering ldiagshowtags) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    % dup 0 ldiagdebugprint
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (CIRCUM) search % if CIRCUM in key
      { pop pop pop pop pop }
      { 
        (ANGLE) search % if ANGLE in key
        {
          pop pop pop pop pop
        }
        {
          (ldiagtagdict) search
          {
            pop pop pop pop pop
          }
          {
	    pop cvx exec 2 copy
	    gsave
	    newpath 2.0 pt 0 360 arc 0 setgray fill
            /Times-Roman findfont 8 pt scalefont setfont
            translate 40 rotate 0.2 cm 0.1 cm moveto 100 string cvs show
	    grestore
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowtags) 0 ldiagdebugprint
} def


% show angles: - ldiagshowangles -
/ldiagshowangles
{
  % (Entering ldiagshowangles) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    % dup 0 ldiagdebugprint
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (ldiagtagdict) search
      {
        pop pop pop pop pop
      }
      {
        (CIRCUM) search % if CIRCUM in key
        { pop pop pop pop pop }
        { 
          (@ANGLE) search % if ANGLE in key, draw the angle at the point
          {
            % (showing ANGLE) 5 ldiagdebugprint
            gsave exch pop exch pop cvx
            % (about to execute) 1 ldiagdebugprint
            exec translate rotate 0.8 0.8 scale pop
            newpath 0 0 2.0 pt 0 360 arc 0 setgray fill
            newpath 4 pt 0 moveto 9 pt 0 lineto
            9 pt 1.5 pt lineto 11 pt 0 lineto 9 pt -1.5 pt lineto
            9 pt 0 lineto [] 0 setdash 4 pt setlinewidth 0 setlinejoin
	    stroke grestore
            % (finished ANGLE) 5 ldiagdebugprint
          }
          {
            % else must be a point, we aren't showing those
            pop pop pop
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowangles) 0 ldiagdebugprint
} def

% fix an angle to 0 <= res < 360:  <angle> ldiagfixangle <angle>
/ldiagfixangle
{
  % (Entering ldiagfixangle) 1 ldiagdebugprint
  { dup 0 ge { exit } if
    360 add
  } loop
  { dup 360 lt { exit } if
    360 sub
  } loop
  % (Leaving ldiagfixangle) 1 ldiagdebugprint
} def

% find point on circumference of box:  alpha a b ldiagboxcircum x y
/ldiagboxcircum
{
  % (Entering ldiagboxcircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    0 0 a b ldiagangleto /theta exch def

    % if alpha <= theta, return (a, a*tan(alpha))
    alpha theta le
    { a  a alpha sin mul alpha cos div }
    {
      % else if alpha <= 180 - theta, return (b*cot(alpha), b)
      alpha 180 theta sub le
      { b alpha cos mul alpha sin div  b }
      {
        % else if alpha <= 180 + theta, return (-a, -a*tan(alpha))
        alpha 180 theta add le
        { a neg  a neg alpha sin mul alpha cos div }
        {
	  % else if alpha <= 360 - theta, return (-b*cot(alpha), -b)
	  alpha 360 theta sub le
          { b neg alpha cos mul alpha sin div  b neg }
	  {
	    % else 360 - theta <= alpha, return (a, a*tan(alpha))
	    a  a alpha sin mul alpha cos div
	  } ifelse
        } ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagboxcircum) 2 ldiagdebugprint
} def

% find quadratic roots (assume a != 0): a b c ldiagqroots x1 x2 2
%                                                     or    x2 1
%                                                     or       0
/ldiagqroots
{
  4 dict begin
    /c exch def
    /b exch def
    /a exch def
    /disc b b mul 4 a c mul mul sub def
    disc 0 lt
    { 0
    }
    { disc 0 eq
      { b neg 2 a mul div
	1
      }
      { b neg disc sqrt add 2 a mul div
        b neg disc sqrt sub 2 a mul div
	2
      }
      ifelse
    }
    ifelse
  end
} def

% work our which quadrant: <angle> ldiagquadrant <0-3>
/ldiagquadrant
{ dup 90 lt
  { pop 0
  }
  { dup 180 lt
    { pop 1
    }
    { 270 lt
      { 2
      }
      { 3
      } ifelse
    } ifelse
  } ifelse
} def

% find curvebox circum, assuming upper right quadrant: alpha a b xmk ldiagcb x y
/ldiagcb
{
  6 dict begin
    /xmk exch def
    /b exch def
    /a exch def
    /alpha exch def
    /theta1 0 0 a b xmk sub ldiagangleto def
    /theta2 0 0 a xmk sub b ldiagangleto def
    alpha theta1 le
    { % if alpha <= theta1, return (a, a*tan(alpha))
      a  a alpha sin mul alpha cos div
    }
    { alpha theta2 ge
      { % else if alpha > theta2, return (b*cot(alpha), b)
	b alpha cos mul alpha sin div  b
      }
      {
	% else, return the intersection of line and circle
	a xmk sub b xmk sub xmk  0 0 alpha ldiagcircleintersect
	dup 0 eq
	{ % should never happen, just return any reasonable point
	  pop
	  a b 0.5 ldiagpmul
	}
	{ 1 eq
	  { % should never happen, just return the point on top of stack
	  }
	  { % the usual case, two points on stack, return the larger
	    ldiagpmax
	  } ifelse
	} ifelse
      } ifelse
    } ifelse
  end
} def

% find point on circumference of curvebox: alpha a b xmk ldiagcurveboxcircum x y
/ldiagcurveboxcircum
{
  % (Entering ldiagcurveboxcircum) 4 ldiagdebugprint
  5 dict begin
    /xmk exch def
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def

    % work out which quadrant we are in, and reflect accordingly
    /quad alpha ldiagquadrant def
    quad 0 eq
    { alpha a b xmk ldiagcb
    }
    { quad 1 eq
      { 180 alpha sub a b xmk ldiagcb exch neg exch
      }
      { quad 2 eq
	{ alpha 180 sub a b xmk ldiagcb neg exch neg exch
	}
	{ 360 alpha sub a b xmk ldiagcb neg
	} ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagcurveboxcircum) 2 ldiagdebugprint
} def

% find point on circumference of diamond:  alpha a b ldiagdiamondcircum x y
/ldiagdiamondcircum
{
  % (Entering ldiagdiamondcircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    b alpha cos abs mul  a alpha sin abs mul  add  /denom exch def
    a b mul alpha cos mul denom div
    a b mul alpha sin mul denom div
  end
  % (Leaving ldiagdiamondcircum) 2 ldiagdebugprint
} def

% find point on circumference of ellipse:  alpha a b ldiagellipsecircum x y
/ldiagellipsecircum
{
  % (Entering ldiagellipsecircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    b alpha cos mul dup mul  a alpha sin mul dup mul  add sqrt /denom exch def
    a b mul alpha cos mul denom div
    a b mul alpha sin mul denom div
  end
  % (Leaving ldiagellipsecircum) 2 ldiagdebugprint
} def

% find point on circumference of isosceles:  alpha a b ldiagisoscelescircum x y
/ldiagisoscelescircum
{
  % (Entering ldiagisoscelescircum) 3 ldiagdebugprint
  7 dict begin
    /b exch def
    /a exch def
    /alpha exch ldiagfixangle def
    /theta1 90 def
    /theta2 a b 0.5 ldiagpmul 0 0 ldiagangleto def
    /theta3 a b 0.5 ldiagpmul a 0 ldiagangleto def
    alpha theta1 ge alpha theta2 le and
    { 0 0 a 2 div b
    }
    { alpha theta2 ge alpha theta3 le and
      { 0 0 a 0
      }
      { a 0 a 2 div b
      } ifelse
    } ifelse
    a 2 div b 2 div 2 copy 1 ft alpha ldiagatangle ldiaglineintersect
    a 2 div b 2 div 4 2 roll ldiagpsub
  end
  % (Leaving ldiagisoscelescircum) 2 ldiagdebugprint
} def

% find point of intersection of two lines each defined by two points
% x1 y1 x2 y2  x3 y3 x4 y4  ldiaglineintersect x y
/ldiaglineintersect
{
  % (Entering ldiaglineintersect) 8 ldiagdebugprint
  13 dict begin
    /y4 exch def
    /x4 exch def
    /y3 exch def
    /x3 exch def
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    x2 x1 sub /x21 exch def
    x4 x3 sub /x43 exch def
    y2 y1 sub /y21 exch def
    y4 y3 sub /y43 exch def
    y21 x43 mul y43 x21 mul sub /det exch def
  
    % calculate x 
    y21 x43 mul x1 mul
    y43 x21 mul x3 mul sub
    y3 y1 sub x21 mul x43 mul add
    det div

    % calculate y
    x21 y43 mul y1 mul
    x43 y21 mul y3 mul sub
    x3 x1 sub y21 mul y43 mul add
    det neg div

  end
  % (Leaving ldiaglineintersect) 2 ldiagdebugprint
} def

% find point on circumference of polygon
% alpha radius num theta ldiagpolycircum x y
/ldiagpolycircum
{
  % (Entering ldiagpolycircum) 4 ldiagdebugprint
  13 dict begin
    /theta exch def
    /num exch def
    /radius exch def
    /alpha exch def

    % calculate delta, the angle from theta to alpha
    alpha theta sub ldiagfixangle

    % calculate the angle which is the multiple of 360/num closest to delta
    360 num div div truncate 360 num div mul theta add /anglea exch def

    % calculate the next multiple of 360/num after anglea
    anglea 360 num div add /angleb exch def

    % intersect the line through these two points with the alpha line
    anglea cos anglea sin  angleb cos angleb sin
    0 0  alpha cos 2 mul alpha sin 2 mul
    ldiaglineintersect radius ldiagpmul

  end
  % (Leaving ldiagpolycircum) 2 ldiagdebugprint
} def

% find point of intersection of a line and a circle
% x0 y0 r  x1 y1 theta  ldiagcircleintersect xa ya xb yb 2
%                                        or       xb yb 1
%                                        or             0
/ldiagcircleintersect
{
  % (Entering ldiagcircleintersect) 6 ldiagdebugprint
  15 dict begin
    /theta exch def
    /y1    exch def
    /x1    exch def
    /r     exch def
    /y0    exch def
    /x0    exch def

    % if sin(theta) = 0 then line is horizontal and y must be y1
    theta sin abs 0.00001 lt
    { 
      /a 1 def
      /b -2 x0 mul def
      /c x0 dup mul y1 y0 sub dup mul add r dup mul sub def
      a b c ldiagqroots dup
      0 eq
      { pop
	0
      }
      { 1 eq
	{ y1 1
	}
	{ y1 exch y1 2
	} ifelse
      } ifelse
    }
    {
      /ct theta cos theta sin div def
      /a ct ct mul 1 add def
      /b ct x1 x0 sub mul y1 add y0 sub 2 mul def
      /c x1 x0 sub dup mul y1 y0 sub dup mul add r dup mul sub def
      a b c ldiagqroots dup
      0 eq
      { pop
	0
      }
      { 1 eq
	{ y1 add /yb exch def
	  yb y1 sub ct mul x1 add /xb exch def
	  xb yb 1
	}
	{ y1 add /ya exch def
	  ya y1 sub ct mul x1 add /xa exch def
	  y1 add /yb exch def
	  yb y1 sub ct mul x1 add /xb exch def
	  xa ya xb yb 2
	} ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagcircleintersect) 1 ldiagdebugprint
} def

% find line which is the perpendicular bisector of two points, defined
% by two points
% x1 y1 x2 y2 ldiaglinebetween x3 y3 x4 y4
/ldiaglinebetween
{ % (Entering ldiaglinebetween) 4 ldiagdebugprint
  /y2 exch def /x2 exch def
  /y1 exch def /x1 exch def

  % let x3, y3 be the point halfway between the two points
  x1 y1 x2 y2 ldiagpadd 0.5 ldiagpmul
  /y3 exch def /x3 exch def

  % find a point perpendicular to x3, y3
  x3 y3 50 x1 y1 x2 y2 ldiagangleto 90 dg add ldiagatangle

  % plus x3 y3 gives the two points
  x3 y3

  % (Leaving ldiaglinebetween) 4 ldiagdebugprint
} def

% find <proc>@<string>:  <proc> <string> ldiagfindlabel <any> true
%                                                      <proc> <string> false
/ldiagfindlabel
{
  % (Entering ldiagfindlabel) 2 ldiagdebugprint
  exch dup length 1 ne
  { exch false
    % (Leaving ldiagfindabel (length not 1)) 3 ldiagdebugprint
  }
  { dup 0 get type /nametype ne
    { exch false
      % (Leaving ldiagfindabel (not a name)) 3 ldiagdebugprint
    }
    { dup 0 get dup length string cvs (@) ldiagconcat
      2 index ldiagconcat dup where
      { exch get exch pop exch pop cvx exec true
	% (Leaving ldiagfindlabel with success) 100 ldiagdebugprint
      }
      {
	pop exch false
	% (Leaving ldiagfindabel (concat not sensible)) 3 ldiagdebugprint
      } ifelse
    } ifelse
  } ifelse
} bind def

% execute <proc>@<string> or else default:  <proc> <string> ldiagdolabel <various>
/ldiagdolabel
{
  % (Entering ldiagdolabel) 2 ldiagdebugprint
  ldiagfindlabel not
  {
    dup (CIRCUM) eq
    { pop pop pop 0 0
    }
    {
      dup (ANGLE) eq
      { pop pop 0
      }
      { pop cvx exec
      } ifelse
    } ifelse
  } if
  % (Leaving ldiagdolabel) 2 ldiagdebugprint
} bind def

% execute a proc depending on whether number is negative, zero, or positive
% procneg proczero procpos number ldiagsigncase <anything>
/ldiagsigncase
{
  % (Entering ldiagsigncase) 4 ldiagdebugprint
  dup 0 lt
  { pop pop pop exec
  }
  { 0 gt
    { exch pop exch pop exec
    }
    { pop exch pop exec
    } ifelse
  } ifelse
  % (Leaving ldiagsigncase) 0 ldiagdebugprint
} bind def

% execute proci if angle is in ith quadrant
% proc45 proc270 proc180 proc90 proc0 proc315 proc225 proc135 angle ldiagquadcase <anything>
/ldiagquadcase
{
  % (Entering ldiagquadcase) 9 ldiagdebugprint
  round ldiagfixangle cvi dup 90 mod 0 eq
  { 90 idiv 4 add } { 90 idiv } ifelse
  8 exch roll pop pop pop pop pop pop pop exec
  % (Leaving ldiagquadcase) 0 ldiagdebugprint
} bind def

% decode Lout length into PostScript length
% <string> ldiagdecodelength <number>
/ldiagdecodelength
{
  % (Entering ldiagdecodelength) 1 ldiagdebugprint
  (f) search
  { exch pop exch pop cvr ft
  }
  { (c) search
    { exch pop exch pop cvr cm
    }
    { (p) search
      { exch pop exch pop cvr pt
      }
      { (m) search
	{ exch pop exch pop cvr em
	}
	{ (s) search
	  { exch pop exch pop cvr sp
	  }
	  { (v) search
	    { exch pop exch pop cvr vs
	    }
	    { (i) search
	      { exch pop exch pop cvr in
	      }
	      { pop 0
	      } ifelse
	    } ifelse
	  } ifelse
	} ifelse
      } ifelse
    } ifelse
  } ifelse
  % (Leaving ldiagdecodelength) 1 ldiagdebugprint
} def

% implement aabout function
% logical form:  <circum> <extra> <centre> aabout <point>
% actual form:   { <labelorpoint> } cvlit <length> [ <point> ] cvx aabout <point>
/ldiagaabout
{
  /centre exch def
  /extra exch def
  /circum exch def

  /ZXCTR [ centre ] cvx def
  /ZFCTR [ circum (CTR) ldiagdolabel ] cvx def
  /ZAREF ZFCTR ZXCTR ldiagangleto def
  /ZAMIN 0 dg def
  /ZPMIN [ circum (CTR) ldiagdolabel ZAREF ZAMIN sub
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMIN sub ldiagatangle
	 ldiagpadd ] cvx def

  /ZAMAX 90 dg def
  /ZPMAX [ circum (CTR) ldiagdolabel ZAREF ZAMAX sub
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMAX sub ldiagatangle
	 ldiagpadd ] cvx def

  1 1 20
  { /xval exch def
    /ZAMID ZAMIN ZAMAX add 0.5 mul def
    /ZPMID [ circum (CTR) ldiagdolabel ZAREF ZAMID sub
	   circum (CIRCUM) ldiagdolabel ldiagpadd
	   0 0 extra ZAREF ZAMID sub ldiagatangle
	   ldiagpadd ] cvx def
    ZPMID ZXCTR ldiagdistance ZFCTR ZXCTR ldiagdistance gt
    {
      /ZAMAX [ ZAMID ] cvx def
      /ZPMAX [ ZPMID ] cvx def
    }
    {
      /ZAMIN [ ZAMID ] cvx def
      /ZPMIN [ ZPMID ] cvx def
    } ifelse
  } for
  ZPMID
} def

% implement cabout function
% logical form:  <circum> <extra> <centre> cabout <point>
% actual form:   { <labelorpoint> } cvlit <length> [ <point> ] cvx cabout <point>
/ldiagcabout
{
  /centre exch def
  /extra exch def
  /circum exch def

  /ZXCTR [ centre ] cvx def
  /ZFCTR [ circum (CTR) ldiagdolabel ] cvx def
  /ZAREF ZFCTR ZXCTR ldiagangleto def
  /ZAMIN 0 dg def
  /ZPMIN [ circum (CTR) ldiagdolabel ZAREF ZAMIN add
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMIN add ldiagatangle
	 ldiagpadd ] cvx def

  /ZAMAX 90 dg def
  /ZPMAX [ circum (CTR) ldiagdolabel ZAREF ZAMAX add
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMAX add ldiagatangle
	 ldiagpadd ] cvx def

  1 1 20
  { /xval exch def
    /ZAMID ZAMIN ZAMAX add 0.5 mul def
    /ZPMID [ circum (CTR) ldiagdolabel ZAREF ZAMID add
	   circum (CIRCUM) ldiagdolabel ldiagpadd
	   0 0 extra ZAREF ZAMID add ldiagatangle
	   ldiagpadd ] cvx def
    ZPMID ZXCTR ldiagdistance ZFCTR ZXCTR ldiagdistance gt
    {
      /ZAMAX [ ZAMID ] cvx def
      /ZPMAX [ ZPMID ] cvx def
    }
    {
      /ZAMIN [ ZAMID ] cvx def
      /ZPMIN [ ZPMID ] cvx def
    } ifelse
  } for
  ZPMID
} def

% fromarrowlength toarrowlength { from } { to } xindent zindent ldiaglinepath -
/ldiaglinepath
{
  % (entering ldiaglinepath) 0 ldiagdebugprint
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagangleto
  /FROM@ANGLE ldiagangledef 
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  FROM@ANGLE /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg sub to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TO@ANGLE 180 dg sub ldiagatangle ldiagpadd /TO ldiagpointdef

  FROM 0.5 ldiagpmul TO 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  FROM@ANGLE /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  0 0 ZINDENT FROM@ANGLE ldiagatangle TO ldiagpsub /LTO ldiagpointdef
  FROM@ANGLE /LTO@ANGLE ldiagangledef

  direct { FROM TO } { FROM LFROM LMID LTO TO } ifelse

  % (leaving ldiaglinepath) 0 ldiagdebugprint
} def

% fromarrowlength toarrowlength { from } { to } xindent zindent pathgap ldiagdoublelinepath -
/ldiagdoublelinepath
{
  % (entering ldiagdoublelinepath) 0 ldiagdebugprint
  /pathgap exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagangleto
  /FROM@ANGLE ldiagangledef 
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  FROM@ANGLE /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg sub to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TO@ANGLE 180 dg sub ldiagatangle ldiagpadd /TO ldiagpointdef

  FROM 0.5 ldiagpmul TO 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  FROM@ANGLE /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  0 0 ZINDENT FROM@ANGLE ldiagatangle TO ldiagpsub /LTO ldiagpointdef
  FROM@ANGLE /LTO@ANGLE ldiagangledef

  direct {
    FROM pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    TO   pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    []
    FROM pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    TO   pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
  }
  {
    FROM  pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LFROM pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LMID  pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LTO   pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    TO    pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    []
    FROM  pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LFROM pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LMID  pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LTO   pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    TO    pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
  } ifelse

  % (leaving ldiagdoublelinepath) 0 ldiagdebugprint
} def

% fromarrowlen toarrowlen { from } { to } xindent zindent bias ldiagacurvepath -
/ldiagacurvepath
{
  % (entering ldiagacurvepath) 0 ldiagdebugprint
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  %/B1 bias 0.02 ft ldiagmax def
  %/B2 from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagdistance 0.5 mul def
  %/BIAS B1 B2 ldiagmin def
  /BIAS bias 0.02 ft ldiagmax def
  /XMID [ from (CTR) ldiagdolabel 0.5 ldiagpmul
	  to   (CTR) ldiagdolabel 0.5 ldiagpmul ldiagpadd ] cvx def
  /XTOP [ XMID 0 0 BIAS from (CTR) ldiagdolabel to (CTR) ldiagdolabel
	  ldiagangleto 90 dg sub ldiagatangle ldiagpadd ] cvx def
  /CTR [ from (CTR) ldiagdolabel XTOP ldiaglinebetween
	 to   (CTR) ldiagdolabel XTOP ldiaglinebetween
	 ldiaglineintersect ] cvx def

  from fromarrowlength [ CTR ] cvx ldiagaabout /FROM ldiagpointdef
  from (CTR) ldiagdolabel FROM ldiagdistance 0 gt
  { from (CTR) ldiagdolabel FROM ldiagangleto
  }
  { CTR FROM ldiagangleto 90 dg add
  } ifelse /FROM@ANGLE ldiagangledef

  to toarrowlength [ CTR ] cvx ldiagcabout /TO ldiagpointdef
  TO to (CTR) ldiagdolabel ldiagdistance 0 gt
  { TO to (CTR) ldiagdolabel ldiagangleto
  }
  { CTR TO ldiagangleto 90 dg add
  } ifelse /TO@ANGLE ldiagangledef

  /RADIUS CTR FROM ldiagdistance def
  CTR 0 0 RADIUS CTR FROM ldiagangleto 360 dg CTR TO ldiagangleto
  add CTR FROM ldiagangleto sub cvi 360 mod 0.5 mul add
  ldiagatangle ldiagpadd /LMID ldiagpointdef
  CTR LMID ldiagangleto 90 dg add /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  CTR 0 0 RADIUS CTR FROM 0 0 XINDENT FROM@ANGLE ldiagatangle
  ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LFROM ldiagpointdef
  CTR LFROM ldiagangleto 90 dg add /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  CTR 0 0 RADIUS CTR TO 0 0 ZINDENT TO@ANGLE 180 dg add
  ldiagatangle ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LTO ldiagpointdef
  CTR LTO ldiagangleto 90 dg add /LTO@ANGLE ldiagangledef

  direct
  { FROM [CTR] TO }
  { FROM [CTR] LFROM [CTR] LMID [CTR] LTO [CTR] TO }
  ifelse

  % (leaving ldiagacurvepath) 0 ldiagdebugprint
} def

% fromarrowlen toarrowlen { from } { to } xindent zindent bias ldiagccurvepath -
/ldiagccurvepath
{
  % (entering ldiagccurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  %/B1 bias 0.02 ft ldiagmax def
  %/B2 from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagdistance 0.5 mul def
  %/BIAS B1 B2 ldiagmin def
  /BIAS bias 0.02 ft ldiagmax def
  /XMID [ from (CTR) ldiagdolabel 0.5 ldiagpmul
	to (CTR) ldiagdolabel 0.5 ldiagpmul ldiagpadd ] cvx def
  /XTOP [ XMID 0 0 BIAS from (CTR) ldiagdolabel to (CTR) ldiagdolabel
	ldiagangleto 90 dg add ldiagatangle ldiagpadd ] cvx def
  /CTR [ from (CTR) ldiagdolabel XTOP ldiaglinebetween
         to (CTR) ldiagdolabel XTOP ldiaglinebetween ldiaglineintersect ] cvx def

  from fromarrowlength [ CTR ] cvx ldiagcabout /FROM ldiagpointdef
  from (CTR) ldiagdolabel FROM ldiagdistance 0 gt
  { from (CTR) ldiagdolabel FROM ldiagangleto }
  { CTR FROM ldiagangleto 90 dg sub }
  ifelse /FROM@ANGLE ldiagangledef

  to toarrowlength [ CTR ] cvx ldiagaabout /TO ldiagpointdef
  TO to (CTR) ldiagdolabel ldiagdistance 0 gt
  { TO to (CTR) ldiagdolabel ldiagangleto }
  { CTR TO ldiagangleto 90 dg sub }
  ifelse /TO@ANGLE ldiagangledef

  /RADIUS [ CTR FROM ldiagdistance ] cvx def
  CTR 0 0 RADIUS CTR TO ldiagangleto 360 dg CTR FROM ldiagangleto add
  CTR TO ldiagangleto sub cvi 360 cvi mod 2 div add ldiagatangle
  ldiagpadd /LMID ldiagpointdef
  CTR LMID ldiagangleto 90 dg sub /LMID@ANGLE ldiagangledef

  /XINDENT [ xindent FROM LMID ldiagdistance ldiagmin ] cvx def
  CTR 0 0 RADIUS CTR FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd
  ldiagangleto ldiagatangle ldiagpadd /LFROM ldiagpointdef
  CTR LFROM ldiagangleto 90 dg sub /LFROM@ANGLE ldiagangledef

  /ZINDENT [ zindent TO LMID ldiagdistance ldiagmin ] cvx def
  CTR 0 0 RADIUS CTR TO 0 0 ZINDENT TO@ANGLE 180 dg add ldiagatangle
  ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LTO ldiagpointdef
  CTR LTO ldiagangleto 90 dg sub /LTO@ANGLE ldiagangledef

  direct
  { FROM [CTR clockwise] TO }
  { FROM [CTR clockwise] LFROM [CTR clockwise]
  LMID [CTR clockwise] LTO [CTR clockwise] TO }
  ifelse
  % (leaving ldiagccurvepath) 0 ldiagdebugprint
} def


% farr tarr { from } { to } xindent zindent [frompt] [topt] ldiagbezierpath -
/ldiagbezierpath
{
  % (entering ldiagbezierpath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  cvx /topt exch def
  cvx /frompt exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel frompt ldiagangleto /FROM@ANGLE ldiagangledef
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel
  ldiagpadd 0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  topt to (CTR) ldiagdolabel ldiagangleto /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg add to (CIRCUM) ldiagdolabel
  ldiagpadd 0 0 toarrowlength TO@ANGLE 180 dg add ldiagatangle ldiagpadd
  /TO ldiagpointdef

  FROM 0 0 xindent FROM@ANGLE ldiagatangle ldiagpadd
  /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  TO 0 0 zindent TO@ANGLE 180 dg add ldiagatangle ldiagpadd
  /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  FROM TO ldiagpadd frompt ldiagpadd topt ldiagpadd 0.25 ldiagpmul
  /LMID ldiagpointdef

  FROM [frompt topt] TO

  % (leaving ldiagbezierpath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent ldiagvhlinepath -
/ldiagvhlinepath
{
  % (entering ldiagvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /XINDENT [ xindent FDIST ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST ldiagmin ] cvx def
  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  CTR /LMID ldiagpointdef
  0 0 1 ft FANG 180 dg add ldiagatangle
  0 0 1 ft TANG 180 dg add ldiagatangle
  ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM LMID LTO TO

  % (leaving ldiagvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent radius ldiagvhcurvepath -
/ldiagvhcurvepath
{
  % (entering ldiagvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /RADIUS [ radius FDIST TDIST ldiagmin ldiagmin ] cvx def
  /XINDENT [ xindent FDIST RADIUS sub ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST RADIUS sub ldiagmin ] cvx def

  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  /FCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd ] cvx def
  /TCTR [ CTR 0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  /XCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd
              0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  XCTR 0 0 RADIUS XCTR CTR ldiagangleto ldiagatangle ldiagpadd
  /LMID ldiagpointdef
  FCTR TCTR ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM FCTR
  {[XCTR clockwise]} {} {} {} {} {[XCTR]} {[XCTR clockwise]} {[XCTR]}
  FCTR TCTR ldiagangleto ldiagquadcase
  TCTR LTO TO

  % (leaving ldiagvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent ldiaghvlinepath -
/ldiaghvlinepath
{
  % (entering ldiaghvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ to (CTR) ldiagdolabel pop from (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /XINDENT [ xindent FDIST ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST ldiagmin ] cvx def

  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  CTR /LMID ldiagpointdef
  0 0 1 ft FANG 180 dg add ldiagatangle
  0 0 1 ft TANG 180 dg add ldiagatangle ldiagangleto
  /LMID@ANGLE ldiagangledef

  FROM LFROM LMID LTO TO

  % (leaving ldiaghvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent radius ldiaghvcurvepath -
/ldiaghvcurvepath
{
  % (entering ldiaghvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ to (CTR) ldiagdolabel pop from (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /RADIUS [ radius FDIST TDIST ldiagmin ldiagmin ] cvx def
  /XINDENT [ xindent FDIST RADIUS sub ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST RADIUS sub ldiagmin ] cvx def
  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  /FCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd ] cvx def
  /TCTR [ CTR 0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  /XCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd
	      0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  XCTR 0 0 RADIUS XCTR CTR ldiagangleto ldiagatangle ldiagpadd
  /LMID ldiagpointdef
  FCTR TCTR ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM FCTR
  {[XCTR]} {} {} {} {} {[XCTR clockwise]} {[XCTR]} {[XCTR clockwise]}
  FCTR TCTR ldiagangleto ldiagquadcase
  TCTR LTO TO

  % (leaving ldiaghvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiaglvrlinepath -
/ldiaglvrlinepath
{
  % (entering ldiaglvrlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 180 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 180 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  180 dg /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel 180 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 180 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  0 dg /TO@ANGLE ldiagangledef

  /XLEFT [ FROM pop TO pop ldiagmin bias sub ] cvx def
  XLEFT FROM exch pop /P1 ldiagpointdef
  XLEFT TO exch pop /P2 ldiagpointdef
  /VERT [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 180 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 0 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef

  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef

  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  XINDENT 0 FROM ldiagpsub /LFROM ldiagpointdef
  180 dg /LFROM@ANGLE ldiagangledef
  ZINDENT 0 TO ldiagpsub /LTO ldiagpointdef
  0 dg /LTO@ANGLE ldiagangledef

  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiaglvrlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias radius ldiaglvrcurvepath -
/ldiaglvrcurvepath
{
  % (entering ldiaglvrcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 180 dg from (CIRCUM) ldiagdolabel ldiagpadd 0 0
  fromarrowlength 180 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  180 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 180 dg to (CIRCUM) ldiagdolabel ldiagpadd 0 0
  toarrowlength 180 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  0 dg /TO@ANGLE ldiagangledef
  /XLEFT [ FROM pop TO pop ldiagmin bias sub ] cvx def
  /XP1 [ XLEFT FROM exch pop ] cvx def
  /XP2 [ XLEFT TO exch pop ] cvx def
  /VERT [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  XINDENT 0 FROM ldiagpsub /LFROM ldiagpointdef
  180 dg /LFROM@ANGLE ldiagangledef
  ZINDENT 0 TO ldiagpsub /LTO ldiagpointdef
  0 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {  } { [XP1CTR] P1 [XP1CTR] } {  } { [XP1CTR clockwise] P1 [XP1CTR clockwise] }
  {  } {  } {  } {  } VERT round ldiagquadcase
  XP1POST LMID XP2PRE
  {  } { [XP2CTR] P2 [XP2CTR] } {  } { [XP2CTR clockwise] P2 [XP2CTR clockwise] }
  {  } {  } {  } {  } VERT round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiaglvrcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiagrvllinepath -
/ldiagrvllinepath
{
  % (entering ldiagrvllinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 0 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 0 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  0 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 0 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 0 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  180 dg /TO@ANGLE ldiagangledef
  /XRIGHT [ FROM pop TO pop ldiagmax bias add ] cvx def
  XRIGHT FROM exch pop /P1 ldiagpointdef
  XRIGHT TO exch pop /P2 ldiagpointdef
  /VERT [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 0 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 180 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM XINDENT 0 ldiagpadd /LFROM ldiagpointdef
  0 dg /LFROM@ANGLE ldiagangledef
  TO ZINDENT 0 ldiagpadd /LTO ldiagpointdef
  180 dg /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiagrvllinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent bias radius ldiagrvlcurvepath -
/ldiagrvlcurvepath
{
  % (entering ldiagrvlcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 0 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 0 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  0 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 0 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 0 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  180 dg /TO@ANGLE ldiagangledef
  /XRIGHT [ FROM pop TO pop ldiagmax bias add ] cvx def
  /XP1 [ XRIGHT FROM exch pop ] cvx def
  /XP2 [ XRIGHT TO exch pop ] cvx def
  /VERT [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM XINDENT 0 ldiagpadd /LFROM ldiagpointdef
  0 dg /LFROM@ANGLE ldiagangledef
  TO ZINDENT 0 ldiagpadd /LTO ldiagpointdef
  180 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 0.5 mul ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {} {[XP1CTR clockwise] P1 [XP1CTR clockwise]} {} {[XP1CTR] P1 [XP1CTR]}
  {} {} {} {} VERT round ldiagquadcase
  XP1POST LMID XP2PRE
  {} {[XP2CTR clockwise] P2 [XP2CTR clockwise]} {} {[XP2CTR] P2 [XP2CTR]}
  {} {} {} {} VERT round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiagrvlcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent hfrac hbias ldiaghvhlinepath -
/ldiaghvhlinepath % still to do
{
  % (entering ldiaghvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 0 dg } { 180 dg } { 180 dg } { 0 dg }
  { 0 dg } { 0 dg } { 180 dg } { 180 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg add ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM pop TO pop sub abs hfrac mul hbias add ] cvx def
  FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  P1 pop TO exch pop /P2 ldiagpointdef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  P1 P2 ldiagangleto /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiaghvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent hfrac hbias radius ldiaghvhcurvepath -
/ldiaghvhcurvepath % still to do
{
  % (entering ldiaghvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 0 dg } { 180 dg } { 180 dg } { 0 dg }
  { 0 dg } { 0 dg } { 180 dg } { 180 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg add ] cvx def

  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef

  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM pop TO pop sub abs hfrac mul hbias add ] cvx def
  /XP1 [ FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2 [ XP1 pop TO exch pop ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  /VERT [ XP1 XP2 ldiagangleto round ] cvx def
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS TODIRN ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ 0 0 RADIUS VERT ldiagatangle XP2POST ldiagpsub ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  VERT FRDIRN sub 90 eq
  { /P1GO [ anticlockwise ] cvx def /P2GO [ clockwise ] cvx def }
  { /P1GO [ clockwise ] cvx def /P2GO [ anticlockwise ] cvx def }
  ifelse
  FROM LFROM
  XP1PRE [XP1CTR P1GO] P1 [XP1CTR P1GO] XP1POST
  LMID
  XP2PRE [XP2CTR P2GO] P2 [XP2CTR P2GO] XP2POST
  LTO TO

  % (leaving ldiaghvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent hfrac hbias ldiagvhvlinepath -
/ldiagvhvlinepath % still to do
{
  % (entering ldiagvhvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 90 dg } { 270 dg } { 270 dg } { 0 dg }
  { 90 dg } { 270 dg } { 270 dg } { 90 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg sub ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM exch pop TO exch pop sub abs hfrac mul hbias ft add ] cvx def
  FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  TO pop P1 exch pop /P2 ldiagpointdef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  P1 P2 ldiagangleto /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiagvhvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent hfrac hbias radius ldiagvhvcurvepath -
/ldiagvhvcurvepath % still to do
{
  % (entering ldiagvhvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 90 dg } { 270 dg } { 270 dg } { 0 dg }
  { 90 dg } { 270 dg } { 270 dg } { 90 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg sub ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM exch pop TO exch pop sub abs hfrac mul hbias add ] cvx def
  /XP1 [ FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2 [ TO pop XP1 exch pop ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  /VERT [ XP1 XP2 ldiagangleto round ] cvx def
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS TODIRN ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ 0 0 RADIUS VERT ldiagatangle XP2POST ldiagpsub ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FRDIRN VERT sub 90 eq
  { /P1GO [ clockwise ] cvx def /P2GO [ anticlockwise ] cvx def }
  { /P1GO [ anticlockwise ] cvx def /P2GO [ clockwise ] cvx def }
  ifelse
  FROM LFROM
  XP1PRE [XP1CTR P1GO] P1 [XP1CTR P1GO] XP1POST
  LMID
  XP2PRE [XP2CTR P2GO] P2 [XP2CTR P2GO] XP2POST
  LTO TO


  % (leaving ldiagvhvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias ldiagdwraplinepath -
/ldiagdwraplinepath
{
  % (entering ldiagdwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop
  lt { 180 dg } { 0 dg } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd 0 0
  fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  DIRN 180 dg eq { 225 dg } { -45 dg } ifelse /P1@ANGLE ldiagangledef
  TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd
  /P4 ldiagpointdef
  DIRN 180 dg eq { 135 dg } { 45 dg } ifelse /P4@ANGLE ldiagangledef
  /YC [ from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmin bias 0 ldiagmax sub ] cvx def
  P1 pop YC /P2 ldiagpointdef
  P4@ANGLE 180 dg sub /P2@ANGLE ldiagangledef
  P4 pop YC /P3 ldiagpointdef
  P1@ANGLE 180 dg sub /P3@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  /ZINDENT [ zindent TO P4 ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  P2 0.5 ldiagpmul P3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  FROM P1 P2 P3 P4 TO

  % (leaving ldiagdwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias radius
% ldiagdwrapcurvepath -
/ldiagdwrapcurvepath
{
  % (entering ldiagdwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  /CLOCK [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { anticlockwise } { clockwise } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  /XP1 [ FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd ] cvx def
  /XP4 [ TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd ] cvx def
  /YC [ from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmin bias 0 ldiagmax sub ] cvx def
  /XP2 [ XP1 pop YC ] cvx def
  /XP3 [ XP4 pop YC ] cvx def
  /RP1 [ radius XP1 FROM ldiagdistance XP1 XP2 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RP1 XP1 FROM ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RP1 XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1CTR P1 ldiagangleto DIRN add 90 dg sub /P1@ANGLE ldiagangledef
  /RP2 [ radius XP1 XP2 ldiagdistance 2 div XP2 XP3 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP2PRE [ XP2 0 0 RP2 XP2 XP1 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2POST [ XP2 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RP2 XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2CTR P2 ldiagangleto DIRN add 90 dg sub /P2@ANGLE ldiagangledef
  /RP3 [ radius XP2 XP3 ldiagdistance 2 div XP3 XP4 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP3PRE [ XP3 0 0 RP3 XP3 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3POST [ XP3 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3CTR [ XP3PRE 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP3CTR 0 0 RP3 XP3CTR XP3 ldiagangleto ldiagatangle ldiagpadd /P3 ldiagpointdef
  XP3CTR P3 ldiagangleto DIRN add 90 dg sub /P3@ANGLE ldiagangledef
  /RP4 [ radius XP4 XP3 ldiagdistance 2 div XP4 TO ldiagdistance
  ldiagmin ldiagmin ] cvx def
  /XP4PRE [ XP4 0 0 RP4 XP4 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4POST [ XP4 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4CTR [ XP4PRE 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP4CTR 0 0 RP4 XP4CTR XP4 ldiagangleto ldiagatangle ldiagpadd /P4 ldiagpointdef
  XP4CTR P4 ldiagangleto DIRN add 90 dg sub /P4@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1PRE ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  XP2 0.5 ldiagpmul XP3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  /ZINDENT [ zindent TO XP4POST ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  FROM LFROM
  XP1PRE [XP1CTR CLOCK] XP1POST
  XP2PRE [XP2CTR CLOCK] XP2POST
  LMID
  XP3PRE [XP3CTR CLOCK] XP3POST
  XP4PRE [XP4CTR CLOCK] XP4POST
  LTO TO

  % (leaving ldiagdwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias ldiaguwraplinepath -
/ldiaguwraplinepath
{
  % (entering ldiaguwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  DIRN 180 dg eq { 135 dg } { 45 dg } ifelse /P1@ANGLE ldiagangledef
  TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd
  /P4 ldiagpointdef
  DIRN 180 dg eq { 225 dg } { -45 dg } ifelse /P4@ANGLE ldiagangledef
  /YC [ from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmax bias 0 ldiagmax add ] cvx def
  P1 pop YC /P2 ldiagpointdef
  P4@ANGLE 180 dg sub /P2@ANGLE ldiagangledef
  P4 pop YC /P3 ldiagpointdef
  P1@ANGLE 180 dg sub /P3@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  /ZINDENT [ zindent TO P4 ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  P2 0.5 ldiagpmul P3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  FROM P1 P2 P3 P4 TO

  % (leaving ldiaguwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias radius
% ldiaguwrapcurvepath -
/ldiaguwrapcurvepath
{
  % (entering ldiaguwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  /CLOCK [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { clockwise } { anticlockwise } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  /XP1 [ FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd ] cvx def
  /XP4 [ TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd ] cvx def
  /YC [ from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmax bias 0 ldiagmax add ] cvx def
  /XP2 [ XP1 pop YC ] cvx def
  /XP3 [ XP4 pop YC ] cvx def
  /RP1 [ radius XP1 FROM ldiagdistance XP1 XP2 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RP1 XP1 FROM ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RP1 XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1CTR P1 ldiagangleto DIRN add 90 dg add /P1@ANGLE ldiagangledef
  /RP2 [ radius XP1 XP2 ldiagdistance 2 div XP2 XP3 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP2PRE [ XP2 0 0 RP2 XP2 XP1 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2POST [ XP2 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RP2 XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2CTR P2 ldiagangleto DIRN add 90 dg add /P2@ANGLE ldiagangledef
  /RP3 [ radius XP2 XP3 ldiagdistance 2 div XP3 XP4 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP3PRE [ XP3 0 0 RP3 XP3 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3POST [ XP3 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3CTR [ XP3PRE 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP3CTR 0 0 RP3 XP3CTR XP3 ldiagangleto ldiagatangle ldiagpadd /P3 ldiagpointdef
  XP3CTR P3 ldiagangleto DIRN add 90 dg add /P3@ANGLE ldiagangledef
  /RP4 [ radius XP4 XP3 ldiagdistance 2 div XP4 TO ldiagdistance
  ldiagmin ldiagmin ] cvx def
  /XP4PRE [ XP4 0 0 RP4 XP4 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4POST [ XP4 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4CTR [ XP4PRE 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP4CTR 0 0 RP4 XP4CTR XP4 ldiagangleto ldiagatangle ldiagpadd /P4 ldiagpointdef
  XP4CTR P4 ldiagangleto DIRN add 90 dg add /P4@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1PRE ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  XP2 0.5 ldiagpmul XP3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  /ZINDENT [ zindent TO XP4POST ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  FROM LFROM
  XP1PRE [XP1CTR CLOCK] XP1POST
  XP2PRE [XP2CTR CLOCK] XP2POST
  LMID
  XP3PRE [XP3CTR CLOCK] XP3POST
  XP4PRE [XP4CTR CLOCK] XP4POST
  LTO TO

  % (leaving ldiaguwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% shape and labels of the @SolidArrowHead symbol
% - ldiagsolidarrowhead -
/ldiagsolidarrowhead
{
  0 0 xsize ysize 0.5 mul 0 ysize
} def

% shape and labels of the @OpenArrowHead symbol
% <pathwidth> ldiagopenarrowhead -
/ldiagopenarrowhead
{
  /pathwidth exch def
  /PSW [ 0 0 ] cvx def
  /PNW [ 0 ysize ] cvx def
  /PE  [ xsize ysize 0.5 mul ] cvx def
  /REL [ 0 0 pathwidth PE PNW ldiagangleto 90 add ldiagatangle ] cvx def
  /PNA [ 0 ysize 0.5 mul pathwidth 0.5 mul add ] cvx def
  /PSA [ 0 ysize 0.5 mul pathwidth 0.5 mul sub ] cvx def
  /PNI [ PNA PNA xsize 0 ldiagpadd PNW REL ldiagpadd
	 PE REL ldiagpadd ldiaglineintersect ] cvx def
  /PSI [ 0 pathwidth PNI ldiagpsub ] cvx def

  PSW PE PNW PNI PNA PSA PSI PSW
} def

% shape and labels of the @HalfOpenArrowHead symbol
% <pathwidth> ldiaghalfopenarrowhead -
/ldiaghalfopenarrowhead
{
  /pathwidth exch def
  0 0
  xsize ysize 0.5 mul
  0 ysize
  xsize 0.3 mul ysize 0.5 mul pathwidth 0.5 mul add
  0             ysize 0.5 mul pathwidth 0.5 mul add
  0             ysize 0.5 mul pathwidth 0.5 mul sub
  xsize 0.3 mul ysize 0.5 mul pathwidth 0.5 mul sub
  0 0
} def

% shape and labels of the @SolidCurvedArrowHead symbol
% - ldiagsolidcurvedarrowhead -
/ldiagsolidcurvedarrowhead
{
  0 0
  [0 0 xsize ysize 0.5 mul ldiaglinebetween
   xsize 0 xsize ysize ldiaglineintersect clockwise]
  xsize ysize 0.5 mul
  [xsize ysize 0.5 mul 0 ysize ldiaglinebetween
   xsize 0 xsize ysize ldiaglineintersect clockwise]
  0 ysize
} def

% shape and labels of the @OpenCurvedArrowHead symbol
% <pathwidth> ldiagopencurvedarrowhead -
/ldiagopencurvedarrowhead
{
  /pathwidth exch def
  /LR [ 0 0 xsize ysize 0.5 mul ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /UR [ xsize ysize 0.5 mul 0 ysize ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /PW2 [ pathwidth 0.5 mul ] cvx def
  /UMID [
      0 ysize 0.5 mul PW2 add
      xsize ysize 0.5 mul PW2 add
      0 ysize 0 0 1 ft UR 0 ysize ldiagangleto 90 add ldiagatangle
      ldiagpadd 0 ysize ldiaglineintersect
      ] cvx def
  /LMID [ 0 pathwidth UMID ldiagpsub ] cvx def
  0 0
  [LR clockwise]
  xsize ysize 0.5 mul
  [UR clockwise]
  0 ysize
  UMID
  0 ysize 0.5 mul PW2 add
  0 ysize 0.5 mul PW2 sub
  LMID
  0 0
} def

% shape and labels of the @HalfOpenCurvedArrowHead symbol
% <pathwidth> ldiaghalfopencurvedarrowhead -
/ldiaghalfopencurvedarrowhead
{
  /pathwidth exch def
  /LR [ 0 0 xsize ysize 0.5 mul ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /UR [ xsize ysize 0.5 mul 0 ysize ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /BR [ 0 0 LR 0 ysize UR ldiaglineintersect ] cvx def
  /BRAD [ 0 0 BR ldiagdistance ] cvx def
  /PW2 [ pathwidth 0.5 mul ] cvx def
  /XDIST [ BRAD dup mul PW2 dup mul sub sqrt ] cvx def
  /UMID [ BR XDIST PW2 ldiagpadd ] cvx def
  /LMID [ BR XDIST 0 PW2 sub ldiagpadd ] cvx def
  0 0
  [LR clockwise]
  xsize ysize 0.5 mul
  [UR clockwise]
  0 ysize
  [BR clockwise]
  UMID
  0 ysize 0.5 mul PW2 add
  0 ysize 0.5 mul PW2 sub
  LMID
  [BR clockwise]
  0 0
} def

end
%%EndResource

%%BeginResource: procset LoutBasicSetup
% @PrependGraphic file /usr/share/lout/include/bsf.lpg

% width height linethickness louteuro -
% draw a Euro symbol of this width and height with this line thickness
/louteuro {
  20 dict begin
    /eurothick exch def
    /euroheight exch def
    /eurowidth exch def
    /eurostrokewidth euroheight 0.8 mul def
    /eurostep eurothick 60 cos mul 60 sin div def
    /eurotheta 40 def

    % llx lly width thickness louteurobox -
    % draw angled box starting at (llx, lly) with given width and thickness
    /louteurobox
    {
      /euroboxthick exch def
      /euroboxwidth exch def
      newpath moveto euroboxwidth 0 rlineto
      eurostep euroboxthick rlineto
      euroboxwidth neg 0 rlineto closepath fill
    } def

    % lower cross stroke
    0 euroheight 2 div eurothick 1.5 mul sub
    eurostrokewidth eurothick louteurobox

    % upper cross stroke
    0 euroheight 2 div eurothick 0.5 mul add
    eurostrokewidth eurostep 2 mul add eurothick louteurobox

    % circular part
    /eurohctr eurowidth euroheight 2 div eurotheta cos mul sub def
    /eurovctr euroheight 2 div def
    newpath
    eurohctr eurovctr eurovctr eurotheta 350 eurotheta sub arc
    eurohctr eurovctr eurovctr eurothick sub 365 eurotheta sub eurotheta arcn
    closepath fill
  end
} def

% path for @FullWidthRule symbol
/LoutRule
{ 0 0 moveto xsize 0 lineto
} def

% path for @Box symbol
/LoutBox
{ 0 0 moveto xsize 0 lineto
  xsize ysize lineto 0 ysize lineto
  closepath
} def

% path for @CurveBox symbol
/LoutCurveBox
{ xmark 0 moveto
  xsize xmark sub xmark xmark 270 360 arc
  xsize xmark sub ysize xmark sub xmark 0 90 arc
  xmark ysize xmark sub xmark 90 180 arc
  xmark xmark xmark 180 270 arc
  closepath
} def

% path for @ShadowBox symbol
/LoutShadowBox
{ xmark 2 mul 0 moveto xsize 0 lineto
  xsize ysize xmark 2 mul sub lineto
  xsize xmark sub ysize xmark 2 mul sub lineto
  xsize xmark sub xmark lineto
  xmark 2 mul xmark lineto
  closepath
} def

% set up dictionary containing margin note data: parity LoutMargSet -
/LoutMargSet
{ /LoutMargDict 12 dict def
  LoutMargDict begin
    /parity exch def
    /matr matrix currentmatrix def
    /rightx xsize def
    /lefty ysize def   % highest allowable point for top of next left note
    /righty ysize def  % highest allowable point for top of next right note
    /max { 2 copy gt { pop } { exch pop } ifelse } def
    /min { 2 copy lt { pop } { exch pop } ifelse } def
  end
} def

%translate coordinate system for marginal notes:  type LoutMargShift -
% where type 0 is left margin, 1 is right margin, 2 is outer, 3 is inner
/LoutMargShift
{ LoutMargDict begin

    % y coordinate of top of note, in margin coords, before vertical adjust
    0 ysize transform matr itransform exch pop

    % decide whether left or right margin based on type and parity
    exch [ 0 1 parity 1 parity sub ] exch get 0 eq
    {
      % left margin: adjust top of note downwards if overlaps previous note
      lefty min

      % bottom of note is new lefty position and also translate position
      ysize sub dup /lefty exch def

      % want right edge of note at coordinate zero
      xsize neg exch
    }
    {
      % right margin: adjust top of note downwards if overlaps previous note
      righty min

      % bottom of note is new righty position and also translate position
      ysize sub dup /righty exch def

      % want left edge of note at coordinate rightx
      rightx exch
    } ifelse

    % stack now contains coord of bottom left corner in margin coordinates
    matr setmatrix translate
  end
} def

% create LoutPageDict with left, right, foot, top for @Place symbol users
/LoutPageSet
{
  /LoutPageDict 5 dict def
  LoutPageDict begin
    /matr matrix currentmatrix def
    /left 0 def
    /right xsize def
    /foot 0 def
    /top ysize def
  end

} def

%%EndResource

%%EndProlog

%%BeginSetup
%%BeginResource: encoding vec2
/vec2 [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/quotesinglbase /quotedblbase /ellipsis /OE /oe /quotedblleft /quotedblright /fi
/fl /endash /emdash /bullet /dagger /daggerdbl /florin /fraction
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
%%EndResource

/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
%%EndSetup

%%Page: ? 1
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Symbol
%%+ font Times-Italic
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Symbol
/fnt2 { /Symbol LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup

gsave
0 0 translate
240 fnt1 0.0 0.0 0.0 setrgbcolor 8164 9525 0 9525 240 288 60 LoutGraphic
gsave

200 ldiagbegin
grestore
8164 9525 0 9525 240 288 60 0 0 LoutGr2
grestore

gsave xsize ysize lgraphdict begin /ysize exch def /xsize exch def
/alldata [  ] def
0 [  ] 0 alldata 0 18 0
0.5 cm false false 0.5 ft xset
0 [  ] 1 alldata 0 14 0
0.5 cm false false 0.5 ft yset
norset
rundata nonestyle
grestore
620 632 0 632 240 288 60 0 -632 LoutGr2
5.5 14 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
476 488 238 244 240 288 60 72 72 LoutGr2
(INITIALX) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m 167 fnt2 259 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 678 0 678 240 288 60 0 -678 LoutGr2
6.5 14 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 534 241 267 240 288 60 72 72 LoutGr2
(INITIALX) ldiagpushtagdict
grestore
482 534 241 267 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
482 534 241 267 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.5156 1.0000 scale
240 fnt2
0 321(-)m 
grestore
240 fnt3 144 236(a)m 167 fnt2 259 144(2)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
612 678 0 678 240 288 60 0 -678 LoutGr2
7.5 14 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
468 534 234 267 240 288 60 72 72 LoutGr2
(INITIALX) ldiagpushtagdict
grestore
468 534 234 267 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
468 534 234 267 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.4062 1.0000 scale
240 fnt2 0 321(-)m 
grestore
240 fnt3 144 236(a)m 167 fnt2
259 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 632 0 632 240 288 60 0 -632 LoutGr2
8.5 14 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 488 241 244 240 288 60 72 72 LoutGr2
(INITIALX) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m 167 fnt2 259 147(0)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
620 632 0 632 240 288 60 0 -632 LoutGr2
10.5 14 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
476 488 238 244 240 288 60 72 72 LoutGr2
(INITIALY) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m 167 fnt2 259 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 629 0 629 240 288 60 0 -629 LoutGr2
11.5 14 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 485 241 243 240 288 60 72 72 LoutGr2
(INITIALY) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 236(a)m 167 fnt2 259 144(2)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
612 629 0 629 240 288 60 0 -629 LoutGr2
12.5 14 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
468 485 234 243 240 288 60 72 72 LoutGr2
(INITIALY) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(a)m
167 fnt2 259 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 632 0 632 240 288 60 0 -632 LoutGr2
13.5 14 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 488 241 244 240 288 60 72 72 LoutGr2
(INITIALY) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m 167 fnt2
259 147(0)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
620 632 0 632 240 288 60 0 -632 LoutGr2
0 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
476 488 238 244 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m 167 fnt2 259 147(3)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 678 0 678 240 288 60 0 -678 LoutGr2
1 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 534 241 267 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
482 534 241 267 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
482 534 241 267 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 534 241 267 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
482 534 241 267 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.5156 1.0000 scale
240 fnt2 0 321(-)m 
grestore
240 fnt3 144 236(a)m 167 fnt2
259 144(2)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
612 678 0 678 240 288 60 0 -678 LoutGr2
2 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
468 534 234 267 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
468 534 234 267 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
468 534 234 267 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
468 534 234 267 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
468 534 234 267 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.4062 1.0000 scale
240 fnt2 0 321(-)m 
grestore
240 fnt3 144 236(a)m
167 fnt2 259 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 632 0 632 240 288 60 0 -632 LoutGr2
3 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 488 241 244 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m 167 fnt2
259 147(0)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
0 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
1 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
2 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
553 596 0 596 240 288 60 0 -596 LoutGr2
3 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
409 452 204 226 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 149(S)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
616 736 0 736 240 288 60 0 -736 LoutGr2
0 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
472 592 236 296 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
472 592 236 296 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
472 592 236 296 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
472 592 236 296 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
472 592 236 296 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.4375 1.0000 scale
240 fnt2 0 379(-)m

grestore
240 fnt3 144 236(b)m 167 fnt2 249 144(2)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
602 736 0 736 240 288 60 0 -736 LoutGr2
1 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
458 592 229 296 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
458 592 229 296 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
458 592 229 296 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
458 592 229 296 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
458 592 229 296 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.3281 1.0000 scale
240 fnt2
0 379(-)m 
grestore
240 fnt3 144 236(b)m 167 fnt2 249 144(1)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
616 690 0 690 240 288 60 0 -690 LoutGr2
2 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
472 546 236 273 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
472 546 236 273 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
472 546 236 273 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
472 546 236 273 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
472 546 236 273 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(b)m 167 fnt2 249 147(0)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
610 690 0 690 240 288 60 0 -690 LoutGr2
3 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
466 546 233 273 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
466 546 233 273 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
466 546 233 273 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
466 546 233 273 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
466 546 233 273 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 239(b)m 167 fnt2 249 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
0 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
1 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
2 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
553 596 0 596 240 288 60 0 -596 LoutGr2
3 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
409 452 204 226 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 149(S)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
599 678 0 678 240 288 60 0 -678 LoutGr2
0 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
455 534 227 267 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
455 534 227 267 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
455 534 227 267 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
455 534 227 267 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
455 534 227 267 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.3047 1.0000 scale
240 fnt2 0 321(-)m 
grestore
240 fnt3 144 236(c)m 167 fnt2
246 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
613 632 0 632 240 288 60 0 -632 LoutGr2
1 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
469 488 234 244 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
469 488 234 244 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
469 488 234 244 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
469 488 234 244 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
469 488 234 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(c)m 167 fnt2 246 147(0)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
607 632 0 632 240 288 60 0 -632 LoutGr2
2 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
463 488 231 244 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
463 488 231 244 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
463 488 231 244 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
463 488 231 244 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
463 488 231 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(c)m 167 fnt2 246 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
613 678 0 678 240 288 60 0 -678 LoutGr2
3 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
469 534 234 267 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
469 534 234 267 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
469 534 234 267 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
469 534 234 267 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
469 534 234 267 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.4141 1.0000 scale
240 fnt2
0 321(-)m 
grestore
240 fnt3 144 236(c)m 167 fnt2 246 144(2)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
620 632 0 632 240 288 60 0 -632 LoutGr2
5 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
476 488 238 244 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m 167 fnt2 259 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 629 0 629 240 288 60 0 -629 LoutGr2
6 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 485 241 243 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 236(a)m 167 fnt2 259 144(2)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
612 629 0 629 240 288 60 0 -629 LoutGr2
7 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
468 485 234 243 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(a)m
167 fnt2 259 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 632 0 632 240 288 60 0 -632 LoutGr2
8 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 488 241 244 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m 167 fnt2
259 147(0)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
5 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
6 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
7 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
553 596 0 596 240 288 60 0 -596 LoutGr2
8 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
409 452 204 226 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 149(S)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
683 695 0 695 240 288 60 0 -695 LoutGr2
5 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
539 551 269 276 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
539 551 269 276 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
539 551 269 276 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
539 551 269 276 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
539 551 269 276 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(b)m
167 fnt2 249 147(0)m 240 fnt2 340 231(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
677 695 0 695 240 288 60 0 -695 LoutGr2
6 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
533 551 266 276 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
533 551 266 276 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
533 551 266 276 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
533 551 266 276 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
533 551 266 276 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 239(b)m 167 fnt2 249 147(3)m 240 fnt2 334 231(\242)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
683 692 0 692 240 288 60 0 -692 LoutGr2
7 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
539 548 269 274 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
539 548 269 274 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
539 548 269 274 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
539 548 269 274 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
539 548 269 274 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(b)m 167 fnt2 249 144(2)m 240 fnt2
340 228(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
669 692 0 692 240 288 60 0 -692 LoutGr2
8 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
525 548 262 274 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
525 548 262 274 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
525 548 262 274 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
525 548 262 274 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
525 548 262 274 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(b)m 167 fnt2 249 144(1)m
240 fnt2 326 228(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
5 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
6 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
7 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
553 596 0 596 240 288 60 0 -596 LoutGr2
8 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
409 452 204 226 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 149(S)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
666 692 0 692 240 288 60 0 -692 LoutGr2
5 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
522 548 261 274 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
522 548 261 274 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
522 548 261 274 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
522 548 261 274 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
522 548 261 274 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 236(c)m 167 fnt2 246 144(1)m 240 fnt2 323 228(\242)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
680 695 0 695 240 288 60 0 -695 LoutGr2
6 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
536 551 268 276 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
536 551 268 276 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
536 551 268 276 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
536 551 268 276 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
536 551 268 276 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(c)m 167 fnt2 246 147(0)m 240 fnt2
337 231(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
674 695 0 695 240 288 60 0 -695 LoutGr2
7 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
530 551 265 276 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
530 551 265 276 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
530 551 265 276 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
530 551 265 276 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
530 551 265 276 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(c)m 167 fnt2 246 147(3)m
240 fnt2 331 231(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
680 692 0 692 240 288 60 0 -692 LoutGr2
8 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
536 548 268 274 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
536 548 268 274 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
536 548 268 274 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
536 548 268 274 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
536 548 268 274 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(c)m 167 fnt2
246 144(2)m 240 fnt2 337 228(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
2.5 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
3.5 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
4.5 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
5.5 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
623 736 0 736 240 288 60 0 -736 LoutGr2
2.5 3 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
479 592 239 296 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
479 592 239 296 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
479 592 239 296 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
479 592 239 296 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.4922 1.0000 scale
240 fnt2 0 379(-)m

grestore
240 fnt3 144 236(d)m 167 fnt2 270 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
637 690 0 690 240 288 60 0 -690 LoutGr2
3.5 3 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
493 546 246 273 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
493 546 246 273 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
493 546 246 273 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
493 546 246 273 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 239(d)m 167 fnt2 270 147(0)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
631 690 0 690 240 288 60 0 -690 LoutGr2
4.5 3 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
487 546 243 273 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
487 546 243 273 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
487 546 243 273 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
487 546 243 273 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(d)m
167 fnt2 270 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
637 736 0 736 240 288 60 0 -736 LoutGr2
5.5 3 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
493 592 246 296 240 288 60 72 72 LoutGr2
(F) ldiagpushtagdict
grestore
493 592 246 296 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
493 592 246 296 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
493 592 246 296 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.6016 1.0000 scale
240 fnt2 0 379(-)m 
grestore
240 fnt3
144 236(d)m 167 fnt2 270 144(2)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
620 681 0 681 240 288 60 0 -681 LoutGr2
10 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
476 537 238 269 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
476 537 238 269 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
476 537 238 269 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
476 537 238 269 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
476 537 238 269 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.4688 1.0000 scale
240 fnt2 0 324(-)m

grestore
240 fnt3 144 239(a)m 167 fnt2 259 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 629 0 629 240 288 60 0 -629 LoutGr2
11 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 485 241 243 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 236(a)m 167 fnt2 259 144(2)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
612 629 0 629 240 288 60 0 -629 LoutGr2
12 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
468 485 234 243 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(a)m
167 fnt2 259 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 681 0 681 240 288 60 0 -681 LoutGr2
13 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 537 241 269 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
482 537 241 269 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
482 537 241 269 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 537 241 269 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 537 241 269 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.5156 1.0000 scale
240 fnt2 0 324(-)m 
grestore
240 fnt3
144 239(a)m 167 fnt2 259 147(0)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
10 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
11 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
12 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
553 596 0 596 240 288 60 0 -596 LoutGr2
13 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
409 452 204 226 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 149(S)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
683 744 0 744 240 288 60 0 -744 LoutGr2
10 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
539 600 269 300 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
539 600 269 300 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
539 600 269 300 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
539 600 269 300 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
539 600 269 300 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.9609 1.0000 scale
240 fnt2 0 387(-)m 
grestore
240 fnt3 144 239(b)m 167 fnt2
249 147(0)m 240 fnt2 340 231(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
677 744 0 744 240 288 60 0 -744 LoutGr2
11 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
533 600 266 300 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
533 600 266 300 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
533 600 266 300 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
533 600 266 300 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
533 600 266 300 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.9141 1.0000 scale
240 fnt2 0 387(-)m

grestore
240 fnt3 144 239(b)m 167 fnt2 249 147(3)m 240 fnt2
334 231(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
683 692 0 692 240 288 60 0 -692 LoutGr2
12 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
539 548 269 274 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
539 548 269 274 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
539 548 269 274 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
539 548 269 274 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
539 548 269 274 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(b)m 167 fnt2 249 144(2)m
240 fnt2 340 228(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
669 692 0 692 240 288 60 0 -692 LoutGr2
13 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
525 548 262 274 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
525 548 262 274 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
525 548 262 274 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
525 548 262 274 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
525 548 262 274 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(b)m 167 fnt2
249 144(1)m 240 fnt2 326 228(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
10 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
11 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
12 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
553 596 0 596 240 288 60 0 -596 LoutGr2
13 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
409 452 204 226 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 149(S)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
666 692 0 692 240 288 60 0 -692 LoutGr2
10 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
522 548 261 274 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
522 548 261 274 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
522 548 261 274 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
522 548 261 274 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
522 548 261 274 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(c)m 167 fnt2 246 144(1)m 240 fnt2
323 228(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
680 744 0 744 240 288 60 0 -744 LoutGr2
11 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
536 600 268 300 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
536 600 268 300 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
536 600 268 300 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
536 600 268 300 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
536 600 268 300 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.9375 1.0000 scale
240 fnt2 0 387(-)m 
grestore
240 fnt3 144 239(c)m
167 fnt2 246 147(0)m 240 fnt2 337 231(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
674 744 0 744 240 288 60 0 -744 LoutGr2
12 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
530 600 265 300 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
530 600 265 300 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
530 600 265 300 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
530 600 265 300 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
530 600 265 300 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.8906 1.0000 scale
240 fnt2
0 387(-)m 
grestore
240 fnt3 144 239(c)m 167 fnt2 246 147(3)m
240 fnt2 331 231(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
680 692 0 692 240 288 60 0 -692 LoutGr2
13 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
536 548 268 274 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
536 548 268 274 240 288 60 0 0 LoutGr2
(X) ldiagpushtagdict
grestore
536 548 268 274 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
536 548 268 274 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
536 548 268 274 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(c)m 167 fnt2
246 144(2)m 240 fnt2 337 228(\242)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
620 632 0 632 240 288 60 0 -632 LoutGr2
15 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
476 488 238 244 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
476 488 238 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m
167 fnt2 259 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 629 0 629 240 288 60 0 -629 LoutGr2
16 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 485 241 243 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
482 485 241 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(a)m 167 fnt2
259 144(2)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
612 629 0 629 240 288 60 0 -629 LoutGr2
17 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
468 485 234 243 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
468 485 234 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(a)m 167 fnt2 259 144(1)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
626 632 0 632 240 288 60 0 -632 LoutGr2
18 12 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
482 488 241 244 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
482 488 241 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(a)m 167 fnt2 259 147(0)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
15 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
16 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
17 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
553 596 0 596 240 288 60 0 -596 LoutGr2
18 10.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
409 452 204 226 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(AB) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 149(S)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
616 687 0 687 240 288 60 0 -687 LoutGr2
15 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
472 543 236 272 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
472 543 236 272 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
472 543 236 272 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
472 543 236 272 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
472 543 236 272 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(b)m 167 fnt2 249 144(2)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
602 687 0 687 240 288 60 0 -687 LoutGr2
16 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
458 543 229 272 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
458 543 229 272 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
458 543 229 272 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
458 543 229 272 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
458 543 229 272 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(b)m 167 fnt2 249 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
616 690 0 690 240 288 60 0 -690 LoutGr2
17 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
472 546 236 273 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
472 546 236 273 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
472 546 236 273 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
472 546 236 273 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
472 546 236 273 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 239(b)m 167 fnt2 249 147(0)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
610 690 0 690 240 288 60 0 -690 LoutGr2
18 9 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
466 546 233 273 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
466 546 233 273 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
466 546 233 273 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
466 546 233 273 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
466 546 233 273 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(b)m
167 fnt2 249 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
15 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
16 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
17 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
553 596 0 596 240 288 60 0 -596 LoutGr2
18 7.5 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
409 452 204 226 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(BC) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
409 452 204 226 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 149(S)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
599 629 0 629 240 288 60 0 -629 LoutGr2
15 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
455 485 227 243 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
455 485 227 243 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
455 485 227 243 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
455 485 227 243 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
455 485 227 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3
144 236(c)m 167 fnt2 246 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
613 632 0 632 240 288 60 0 -632 LoutGr2
16 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
469 488 234 244 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
469 488 234 244 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
469 488 234 244 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
469 488 234 244 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
469 488 234 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(c)m
167 fnt2 246 147(0)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
607 632 0 632 240 288 60 0 -632 LoutGr2
17 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
463 488 231 244 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
463 488 231 244 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
463 488 231 244 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
463 488 231 244 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
463 488 231 244 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 239(c)m 167 fnt2
246 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
613 629 0 629 240 288 60 0 -629 LoutGr2
18 6 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
469 485 234 243 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
469 485 234 243 240 288 60 0 0 LoutGr2
(Y) ldiagpushtagdict
grestore
469 485 234 243 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
469 485 234 243 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
469 485 234 243 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(c)m 167 fnt2 246 144(2)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
12.5 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
13.5 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
14.5 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
15.5 4 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
623 687 0 687 240 288 60 0 -687 LoutGr2
12.5 3 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
479 543 239 272 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
479 543 239 272 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
479 543 239 272 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
479 543 239 272 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(d)m 167 fnt2 270 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
637 739 0 739 240 288 60 0 -739 LoutGr2
13.5 3 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
493 595 246 298 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
493 595 246 298 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
493 595 246 298 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
493 595 246 298 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.6016 1.0000 scale
240 fnt2
0 382(-)m 
grestore
240 fnt3 144 239(d)m 167 fnt2 270 147(0)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
631 739 0 739 240 288 60 0 -739 LoutGr2
14.5 3 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
487 595 243 298 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
487 595 243 298 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
487 595 243 298 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
487 595 243 298 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
gsave
144 0 translate
1.5547 1.0000 scale
240 fnt2 0 382(-)m 
grestore
240 fnt3 144 239(d)m 167 fnt2
270 147(3)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
637 687 0 687 240 288 60 0 -687 LoutGr2
15.5 3 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
493 543 246 272 240 288 60 72 72 LoutGr2
(G) ldiagpushtagdict
grestore
493 543 246 272 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
493 543 246 272 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
493 543 246 272 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
240 fnt3 144 236(d)m 167 fnt2 270 144(2)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
8 1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(FINALXOR) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
9 1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(FINALXOR) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
10 1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(FINALXOR) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
432 432 0 432 240 288 60 0 -432 LoutGr2
11 1 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
288 288 144 144 240 288 60 72 72 LoutGr2
(FINALXOR) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
288 288 144 144 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagcircle ]
0.2 ft [ /ldiagsolid ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
599 647 0 647 240 288 60 0 -647 LoutGr2
8 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
455 503 227 252 240 288 60 72 72 LoutGr2
(FINAL) ldiagpushtagdict
grestore
455 503 227 252 240 288 60 0 0 LoutGr2
(D) ldiagpushtagdict
grestore
455 503 227 252 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
167 fnt2 238 246(8)m 240 fnt2 144 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
599 647 0 647 240 288 60 0 -647 LoutGr2
9 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
455 503 227 252 240 288 60 72 72 LoutGr2
(FINAL) ldiagpushtagdict
grestore
455 503 227 252 240 288 60 0 0 LoutGr2
(C) ldiagpushtagdict
grestore
455 503 227 252 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
167 fnt2
238 246(8)m 240 fnt2 144 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
599 647 0 647 240 288 60 0 -647 LoutGr2
10 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
455 503 227 252 240 288 60 72 72 LoutGr2
(FINAL) ldiagpushtagdict
grestore
455 503 227 252 240 288 60 0 0 LoutGr2
(B) ldiagpushtagdict
grestore
455 503 227 252 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
167 fnt2 238 246(8)m
240 fnt2 144 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
599 647 0 647 240 288 60 0 -647 LoutGr2
11 0 trpoint translate xsize neg 2 div ysize 2 div translate gsave
grestore
455 503 227 252 240 288 60 72 72 LoutGr2
(FINAL) ldiagpushtagdict
grestore
455 503 227 252 240 288 60 0 0 LoutGr2
(A) ldiagpushtagdict
grestore
455 503 227 252 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ]
0.2 ft [ /ldiagnoline ]
0.04 ft {} ldiagnodeend
(IN) ldiagpushtagdict
grestore
167 fnt2 238 246(8)m 240 fnt2
144 144(1)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
grestore
grestore
end

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALX@D@S } { F@X@A@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALX@C@S } { F@X@A@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALX@B@S } { F@X@A@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALX@A@S } { F@X@A@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALX@D@S } { G@X@A@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagcdashed ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALX@C@S } { G@X@A@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagcdashed ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALX@B@S } { G@X@A@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagcdashed ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALX@A@S } { G@X@A@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagcdashed ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALY@D@S } { F@Y@A@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALY@C@S } { F@Y@A@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALY@B@S } { F@Y@A@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALY@A@S } { F@Y@A@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALY@D@S } { G@Y@A@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALY@C@S } { G@Y@A@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALY@B@S } { G@Y@A@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ INITIALY@A@S } { G@Y@A@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@A@D@S } { F@X@AB@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@A@C@S } { F@X@AB@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@A@B@S } { F@X@AB@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@A@A@S } { F@X@AB@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@AB@D@N } { F@X@AB@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@AB@D@E } { F@X@AB@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@AB@C@N } { F@X@AB@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@AB@C@E } { F@X@AB@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@AB@B@N } { F@X@AB@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@AB@B@E } { F@X@AB@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@AB@A@W } { F@X@AB@B@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@AB@B@W } { F@X@AB@C@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@AB@C@W } { F@X@AB@D@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@AB@D@S } { F@X@B@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@AB@C@S } { F@X@B@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@AB@B@S } { F@X@B@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@AB@A@S } { F@X@B@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@B@D@S } { F@X@BC@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@B@C@S } { F@X@BC@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@B@B@S } { F@X@BC@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@B@A@S } { F@X@BC@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@BC@D@N } { F@X@BC@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@BC@D@E } { F@X@BC@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@BC@C@N } { F@X@BC@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@BC@C@E } { F@X@BC@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@BC@B@N } { F@X@BC@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@BC@B@E } { F@X@BC@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@BC@A@W } { F@X@BC@B@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@BC@B@W } { F@X@BC@C@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@X@BC@C@W } { F@X@BC@D@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@BC@D@S } { F@X@C@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@BC@C@S } { F@X@C@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@BC@B@S } { F@X@C@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@BC@A@S } { F@X@C@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@A@D@S } { F@Y@AB@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@A@C@S } { F@Y@AB@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@A@B@S } { F@Y@AB@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@A@A@S } { F@Y@AB@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@AB@D@N } { F@Y@AB@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@AB@D@E } { F@Y@AB@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@AB@C@N } { F@Y@AB@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@AB@C@E } { F@Y@AB@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@AB@B@N } { F@Y@AB@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@AB@B@E } { F@Y@AB@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@AB@A@W } { F@Y@AB@B@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@AB@B@W } { F@Y@AB@C@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@AB@C@W } { F@Y@AB@D@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@AB@D@S } { F@Y@B@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@AB@C@S } { F@Y@B@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@AB@B@S } { F@Y@B@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@AB@A@S } { F@Y@B@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@B@D@S } { F@Y@BC@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@B@C@S } { F@Y@BC@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@B@B@S } { F@Y@BC@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@B@A@S } { F@Y@BC@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@BC@D@N } { F@Y@BC@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@BC@D@E } { F@Y@BC@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@BC@C@N } { F@Y@BC@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@BC@C@E } { F@Y@BC@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@BC@B@N } { F@Y@BC@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@BC@B@E } { F@Y@BC@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@BC@A@W } { F@Y@BC@B@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@BC@B@W } { F@Y@BC@C@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@Y@BC@C@W } { F@Y@BC@D@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@BC@D@S } { F@Y@C@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@BC@C@S } { F@Y@C@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@BC@B@S } { F@Y@C@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@BC@A@S } { F@Y@C@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@C@D@S } { F@C@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@C@C@S } { F@C@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@C@B@S } { F@C@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@X@C@A@S } { F@C@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@C@D@S } { F@C@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@C@C@S } { F@C@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@C@B@S } { F@C@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@Y@C@A@S } { F@C@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@C@D@N } { F@C@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@C@D@E } { F@C@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@C@C@N } { F@C@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@C@C@E } { F@C@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@C@B@N } { F@C@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@C@B@E } { F@C@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@C@A@N } { F@C@A@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ F@C@A@E } { F@C@A@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@C@D@S } { F@D@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@C@C@S } { F@D@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@C@B@S } { F@D@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@C@A@S } { F@D@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@A@D@S } { G@X@AB@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@A@C@S } { G@X@AB@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@A@B@S } { G@X@AB@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@A@A@S } { G@X@AB@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@AB@D@N } { G@X@AB@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@AB@D@E } { G@X@AB@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@AB@C@N } { G@X@AB@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@AB@C@E } { G@X@AB@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@AB@B@N } { G@X@AB@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@AB@B@E } { G@X@AB@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@AB@A@W } { G@X@AB@B@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@AB@B@W } { G@X@AB@C@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@AB@C@W } { G@X@AB@D@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@AB@D@S } { G@X@B@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@AB@C@S } { G@X@B@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@AB@B@S } { G@X@B@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@AB@A@S } { G@X@B@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@B@D@S } { G@X@BC@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@B@C@S } { G@X@BC@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@B@B@S } { G@X@BC@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@B@A@S } { G@X@BC@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@BC@D@N } { G@X@BC@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@BC@D@E } { G@X@BC@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@BC@C@N } { G@X@BC@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@BC@C@E } { G@X@BC@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@BC@B@N } { G@X@BC@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@BC@B@E } { G@X@BC@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@BC@A@W } { G@X@BC@B@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@BC@B@W } { G@X@BC@C@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@X@BC@C@W } { G@X@BC@D@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@BC@D@S } { G@X@C@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@BC@C@S } { G@X@C@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@BC@B@S } { G@X@C@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@BC@A@S } { G@X@C@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@A@D@S } { G@Y@AB@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@A@C@S } { G@Y@AB@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@A@B@S } { G@Y@AB@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@A@A@S } { G@Y@AB@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@AB@D@N } { G@Y@AB@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@AB@D@E } { G@Y@AB@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@AB@C@N } { G@Y@AB@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@AB@C@E } { G@Y@AB@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@AB@B@N } { G@Y@AB@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@AB@B@E } { G@Y@AB@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@AB@A@W } { G@Y@AB@B@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@AB@B@W } { G@Y@AB@C@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@AB@C@W } { G@Y@AB@D@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@AB@D@S } { G@Y@B@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@AB@C@S } { G@Y@B@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@AB@B@S } { G@Y@B@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@AB@A@S } { G@Y@B@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@B@D@S } { G@Y@BC@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@B@C@S } { G@Y@BC@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@B@B@S } { G@Y@BC@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@B@A@S } { G@Y@BC@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@BC@D@N } { G@Y@BC@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@BC@D@E } { G@Y@BC@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@BC@C@N } { G@Y@BC@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@BC@C@E } { G@Y@BC@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@BC@B@N } { G@Y@BC@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@BC@B@E } { G@Y@BC@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@BC@A@W } { G@Y@BC@B@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@BC@B@W } { G@Y@BC@C@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@Y@BC@C@W } { G@Y@BC@D@E }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@BC@D@S } { G@Y@C@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@BC@C@S } { G@Y@C@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@BC@B@S } { G@Y@C@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@BC@A@S } { G@Y@C@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@C@D@S } { G@C@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@C@C@S } { G@C@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@C@B@S } { G@C@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@X@C@A@S } { G@C@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@C@D@S } { G@C@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@C@C@S } { G@C@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@C@B@S } { G@C@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@Y@C@A@S } { G@C@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@C@D@N } { G@C@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@C@D@E } { G@C@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@C@C@N } { G@C@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@C@C@E } { G@C@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@C@B@N } { G@C@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@C@B@E } { G@C@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@C@A@N } { G@C@A@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ G@C@A@E } { G@C@A@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@C@D@S } { G@D@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@C@C@S } { G@D@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@C@B@S } { G@D@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@C@A@S } { G@D@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@D@D@S } { FINALXOR@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@D@C@S } { FINALXOR@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@D@B@S } { FINALXOR@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ F@D@A@S } { FINALXOR@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@D@D@S } { FINALXOR@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@D@C@S } { FINALXOR@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@D@B@S } { FINALXOR@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ G@D@A@S } { FINALXOR@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ FINALXOR@D@N } { FINALXOR@D@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ FINALXOR@D@E } { FINALXOR@D@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ FINALXOR@C@N } { FINALXOR@C@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ FINALXOR@C@E } { FINALXOR@C@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ FINALXOR@B@N } { FINALXOR@B@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ FINALXOR@B@E } { FINALXOR@B@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ FINALXOR@A@N } { FINALXOR@A@S }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
0
{ FINALXOR@A@E } { FINALXOR@A@W }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ FINALXOR@D@S } { FINAL@D@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ FINALXOR@C@S } { FINAL@C@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
0 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ FINALXOR@B@S } { FINAL@B@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
8164 0 0 0 240 288 60 0 0 LoutGr2
1 ldiaglinkbegin [ 0
(0.5f) ldiagdecodelength
{ FINALXOR@A@S } { FINAL@A@N }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft
[ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore
8164 0 0 0 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ TO } (ANGLE) ldiagdolabel rotate 1 1 scale newpath clip gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
0 0 0 0 240 288 60 0 0 LoutGr2
{ LABEL } (W) ldiagdolabel TO ldiagpsub 0 0 ldiagpadd translate { TO } (ANGLE) ldiagdolabel rotate 1 1 scale gsave
grestore
120 72 60 36 240 288 60 -60 -36 LoutGr2
(LABEL) ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
[ ldiagbox ] pop
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
() ldiagpushtagdict
grestore
120 72 60 36 240 288 60 0 0 LoutGr2
ldiagnodebegin [ ldiagsolidarrowhead ]
0.2 ft [ /ldiagnoline ]
0.04 ft {  fill } ldiagnodeend
(IN) ldiagpushtagdict
grestore
ldiagpopuptagdict
grestore
ldiagpoptagdict
grestore

grestore
ldiagpopuptagdict
grestore
grestore
grestore
ldiagpoptagdict
grestore

grestore
ldiagend

grestore

pgsave restore
showpage

%%Trailer
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Italic
%%+ font Symbol
%%DocumentSuppliedResources: procset LoutStartUp
%%+  procset LoutGraphPrependGraphic
%%+  procset LoutTabPrependGraphic
%%+  procset LoutDiagPrependGraphic
%%+  procset LoutBasicSetup
%%+ encoding vec2
%%Pages: 1
%%EOF

%%EndDocument
 @endspecial 523 4101 a
 currentpoint currentpoint translate 1 0.84767 div 1 0.84767 div scale
neg exch neg exch translate
 523 4101 a 174 x Fl(Fig.)14 b(3.)33
b Fn(S-b)r(o)n(x)e(matc)n(hing)j(input)e(to)i Fg(C)27
b Fc(\016)22 b Fn(P)n(airCom)r(.)33 b(The)h(function)f
Fg(F)44 b Fn(is)33 b(on)h(the)e(left,)j Fg(G)e Fn(on)523
4367 y(the)c(righ)n(t,)g(and)g Fg(C)34 b Fn(underneath;)29
b(dotted)g(lines)g(indicate)h(bit)n(wise)g(in)n(v)n(ersion)f(\(the)g
(\014rst)g(step)g(of)523 4458 y(the)h Fg(G)g Fn(function\))g(and)g(the)
g(\\)p Fc(\010)20 b(\010)g(\010)p Fg(S)t Fn(")30 b(sym)n(b)r(ol)h
(represen)n(ts)f(the)g(function)g Fg(S)t Fn(\()p Fg(x)2954
4466 y Fo(3)2988 4458 y Fc(j)p Fg(x)3053 4466 y Fo(2)3088
4458 y Fc(j)p Fg(x)3153 4466 y Fo(1)3187 4458 y Fc(j)p
Fg(x)3252 4466 y Fo(0)3286 4458 y Fn(\))f(=)523 4549
y Fg(x)567 4557 y Fo(3)618 4549 y Fc(\010)17 b Fg(S)742
4557 y Fo(3)777 4549 y Fn(\()p Fg(x)851 4557 y Fo(0)885
4549 y Fn(\))p Fc(j)p Fg(x)980 4557 y Fo(2)1031 4549
y Fc(\010)g Fg(S)1155 4557 y Fo(2)1189 4549 y Fn(\()p
Fg(x)1263 4557 y Fo(0)1297 4549 y Fn(\))p Fc(j)p Fg(x)1392
4557 y Fo(1)1444 4549 y Fc(\010)f Fg(S)1567 4557 y Fo(1)1602
4549 y Fn(\()p Fg(x)1676 4557 y Fo(0)1710 4549 y Fn(\))p
Fc(j)p Fg(S)1808 4557 y Fo(0)1843 4549 y Fn(\()p Fg(x)1917
4557 y Fo(0)1951 4549 y Fn(\).)p eop
%%Page: 7 7
7 6 bop 1756 241 a Fn(Bias)27 b(in)f(the)f(LEVIA)-6 b(THAN)23
b(Stream)j(Cipher)238 b(7)523 457 y Fr(for)27 b Fd(al)t(l)37
b Fr(v)-5 b(alues)28 b(of)f Fi(a)1161 469 y Fq(3)p Fp(:::)o
Fq(0)1291 457 y Fr(.)648 562 y(Since)h(w)n(e)g(mo)r(del)h(LevAb)r(o)n
(v)n(e)e(as)h(a)g(random)g(function)h(w)n(e)f(conclude)g(that)h(inputs)
g(to)523 662 y(P)n(airCom)f(ha)n(v)n(e)g(probabilit)n(y)h(2)1537
632 y Fe(\000)p Fp(n)1663 662 y Fr(of)g(matc)n(hing)g(this)h(form)g(in)
f(the)h(normal)f(calculation)523 761 y(of)38 b(LevP)n(air.)e(Where)i
(inputs)h(do)f(not)g(matc)n(h)g(this)g(form,)g(w)n(e)g(assume)g(that)g
(P)n(airCom)523 861 y(b)r(eha)n(v)n(es)22 b(as)h(a)g(random)f(function)
i(and)f(therefore)f(that)h(for)g(random)f(\()p Fi(x;)14
b(y)s Fr(\))24 b(not)g(matc)n(hing)523 961 y(this)31
b(form,)g(Pr)13 b(\()p Fi(C)6 b Fr(\(P)n(airCom)o(\()p
Fi(x;)14 b(y)s Fr(\)\))24 b(=)e(1)1843 930 y Fp(n)1888
961 y Fr(\))29 b(=)f(2)2084 930 y Fe(\000)p Fp(n)2181
961 y Fr(;)j(this)g(assumption)g(is)g(b)r(orne)f(out)h(b)n(y)523
1060 y(exp)r(erimen)n(t.)f(F)-7 b(rom)29 b(this)g(w)n(e)h(conclude)f
(that)h(LevP)n(air)d(is)j(t)n(wice)f(as)g(lik)n(ely)g(as)g(a)g(random)
523 1160 y(function)f(to)g(pro)r(duce)f(an)g(output)h(\()p
Fi(x)1732 1172 y Fq(0)1770 1160 y Fi(;)14 b(x)1854 1172
y Fq(1)1892 1160 y Fr(\))28 b(suc)n(h)f(that)h Fi(C)6
b Fr(\()p Fi(x)2463 1172 y Fq(0)2501 1160 y Fi(;)14 b(x)2585
1172 y Fq(1)2623 1160 y Fr(\))23 b(=)g(1)2808 1130 y
Fp(n)936 1354 y Fr(Pr)13 b(\()p Fi(C)6 b Fr(\(LevP)n(air)n(\()p
Fi(t)p Fj(j)p Fi(z)t Fr(\)\))24 b(=)e(1)1797 1320 y Fp(n)1842
1354 y Fr(\))h(=)g(2)2027 1320 y Fe(\000)p Fp(n)2142
1354 y Fr(+)18 b(\(1)g Fj(\000)g Fr(2)2442 1320 y Fe(\000)p
Fp(n)2539 1354 y Fr(\)2)2613 1320 y Fe(\000)p Fp(n)2733
1354 y Fj(\031)k Fr(2)2862 1320 y Fq(1)p Fe(\000)p Fp(n)523
1549 y Fr(whic)n(h)j(in)h(turn)f(implies)g(that)h(64-bit)e(aligned)h
(segmen)n(ts)f(of)h(k)n(eystream)f(of)h(this)g(form)g(are)523
1648 y(t)n(wice)j(as)e(frequen)n(t)i(as)f(they)h(should)f(b)r(e,)h
(yielding)f(another)g(distinguisher.)648 1754 y(F)-7
b(or)28 b Fi(n)e Fr(=)g(32,)i(a)h(test)h(for)e(the)i(presence)f(of)g
(this)h(bias)e(should)i(therefore)e(tak)n(e)h(on)g(the)523
1853 y(order)d(of)i(2)877 1823 y Fq(33)974 1853 y Fr(samples)f(of)h
(LevP)n(air,)d(ie)j(2)1843 1823 y Fq(36)1941 1853 y Fr(b)n(ytes,)f(as)g
(for)g(the)h(previous)e(attac)n(k.)523 2148 y Fk(4)112
b(Exp)s(erimen)m(ts)523 2377 y Fr(W)-7 b(e)40 b(lo)r(ok)n(ed)g(for)f
(these)h(biases)f(on)h(a)g(reduced)g(v)n(ersion)e(of)i(LEVIA)-7
b(THAN)41 b(with)g Fi(n)i Fr(=)523 2476 y(16)p Fi(;)14
b(h)22 b Fr(=)g(16.)648 2582 y(F)-7 b(or)37 b(the)i(PRF-PRF)f(attac)n
(k,)g(w)n(e)g(ran)f(o)n(v)n(er)g(256)g(distinct)i(k)n(eys)f(generating)
e Fi(N)50 b Fr(=)523 2681 y(6291456)34 b(32-bit)i(LevP)n(air)f(outputs)
j(for)e(eac)n(h,)h(and)g(sorting)f(them)h(to)g(\014nd)h(collisions.)523
2781 y(W)-7 b(e)42 b(coun)n(t)f(as)f(a)h(collision)g(eac)n(h)f
(instance)h(where)g(a)g(distinct)h(pair)e(of)h(inputs)h(result)523
2881 y(in)j(the)g(same)f(output;)h(th)n(us,)g(where)f
Fi(m)51 b(>)g Fr(2)44 b(outputs)h(ha)n(v)n(e)f(the)h(same)f(v)-5
b(alue,)44 b(w)n(e)523 2980 y(coun)n(t)33 b(this)g(as)f
Fi(m)p Fr(\()p Fi(m)22 b Fj(\000)g Fr(1\))p Fi(=)p Fr(2)32
b(distinct)h(collisions.)f(F)-7 b(or)33 b(a)f(random)g(function)i(w)n
(e)e(w)n(ould)523 3080 y(exp)r(ect)40 b(to)f(\014nd)h(appro)n(ximately)
1610 3050 y Fq(1)1684 3080 y Fr(256\()p Fi(N)9 b Fr(\()p
Fi(N)34 b Fj(\000)26 b Fr(1\))p Fi(=)p Fr(2\))p Fi(=)p
Fr(2)2416 3050 y Fq(2)p Fp(n)2535 3080 y Fj(\031)43 b
Fr(1179678)36 b(collisions)i(in)523 3180 y(total)j(across)e(all)h(k)n
(eys,)h(while)g(the)g(PRF-PRF)f(attac)n(k)g(w)n(ould)h(predict)g(an)g
(exp)r(ected)523 3279 y(256\()p Fi(N)9 b Fr(\()p Fi(N)30
b Fj(\000)21 b Fr(1\))p Fi(=)p Fr(2\))p Fi(=)p Fr(2)1246
3249 y Fq(2)p Fp(n)p Fe(\000)p Fq(1)1440 3279 y Fj(\031)31
b Fr(2359296.)f(The)j(exp)r(erimen)n(t)g(found)g(2350336)d(collisions;)
523 3379 y(this)d(is)f(1077)p Fi(:)p Fr(9)e(standard)i(deviations)f
(\(SDs\))j(from)e(the)g(exp)r(ected)h(v)-5 b(alue)26
b(in)h(the)g(random)523 3478 y(function)f(mo)r(del,)f(and)f(5)p
Fi(:)p Fr(83)g(SDs)h(from)g(the)g(exp)r(ected)g(v)-5
b(alue)25 b(in)g(the)g(mo)r(del)g(pro)n(vided)f(b)n(y)523
3578 y(the)34 b(PRF-PRF)e(attac)n(k.)h(This)g(sho)n(ws)f(that)i(this)f
(mo)r(del)h(iden)n(ti\014es)f(a)g(substan)n(tial)f(bias)523
3678 y(in)f(the)h(cipher,)f(but)h(there)f(is)g(a)f(further)h(bias)g(in)
g(the)h(collision)e(probabilit)n(y)g(of)h(roughly)523
3777 y(0.38\045)26 b(y)n(et)i(to)f(b)r(e)h(accoun)n(ted)f(for.)648
3883 y(F)-7 b(or)34 b(the)h(S-b)r(o)n(x)f(matc)n(hing)g(attac)n(k,)g(w)
n(e)g(generated)g Fi(N)43 b Fr(=)35 b(16777216)c(LevP)n(air)h(out-)523
3982 y(puts)e(for)f(eac)n(h)f(of)i(256)e(k)n(eys,)h(coun)n(ting)f
(outputs)i(with)g(the)g Fi(C)6 b Fr(\()p Fi(x;)14 b(y)s
Fr(\))27 b(=)f(1)2886 3952 y Fq(32)2985 3982 y Fr(prop)r(ert)n(y)-7
b(.)29 b(A)523 4082 y(random)h(function)h(w)n(ould)g(generate)e(an)i
(exp)r(ected)g(256)p Fi(N)r(=)p Fr(2)2487 4052 y Fq(16)2583
4082 y Fr(=)d(65536)g(suc)n(h)j(outputs,)523 4182 y(while)23
b(the)g(S-b)r(o)n(x)f(matc)n(hing)g(attac)n(k)f(predicts)i(that)g(LevP)
n(air)d(will)j(generate)e(an)i(exp)r(ected)523 4281 y(256)p
Fi(N)r(=)p Fr(2)802 4251 y Fq(15)898 4281 y Fr(=)k(131072)h(suc)n(h)i
(outputs.)h(The)g(exp)r(erimen)n(t)f(found)h(135872)c(suc)n(h)k
(outputs;)523 4381 y(this)j(is)f(274)p Fi(:)p Fr(8)f(SDs)i(from)f(the)h
(exp)r(ected)g(v)-5 b(alue)33 b(in)h(the)g(random)e(function)i(mo)r
(del,)g(and)523 4481 y(13)p Fi(:)p Fr(26)21 b(SDs)j(from)f(the)g(exp)r
(ected)h(v)-5 b(alue)23 b(in)g(the)g(mo)r(del)h(pro)n(vided)e(b)n(y)h
(the)g(S-b)r(o)n(x)g(matc)n(hing)p 523 4573 473 4 v 546
4627 a Fo(1)606 4659 y Fn(The)e(appro)n(ximation)h Fg(E)16
b Fn(\()p Fc(jf)q(f)p Fg(x;)d(y)s Fc(g)21 b Fn(:)h Fg(f)8
b Fn(\()p Fg(x)p Fn(\))21 b(=)g Fg(f)8 b Fn(\()p Fg(y)s
Fn(\))p Fc(gj)p Fn(\))21 b Fc(\031)g(j)q Fg(A)p Fc(j)12
b Fn(\()p Fc(j)q Fg(A)p Fc(j)17 b(\000)f Fn(1\))e Fg(=)p
Fn(2)f Fc(j)p Fg(B)t Fc(j)22 b Fn(for)f(the)g(n)n(um)n(b)r(er)606
4750 y(of)h(collisions)i(in)e(a)g(random)g(function)f
Fg(f)30 b Fn(:)22 b Fg(A)f Fc(7!)g Fg(B)k Fn(is)d(v)n(ery)f(precise)h
(where)g Fc(j)p Fg(B)t Fc(j)g Fn(is)g(large;)h(where)606
4841 y(w)n(e)28 b(refer)g(to)f(the)g(predictions)h(of)g(the)f(random)g
(function)g(mo)r(del,)h(it)g(is)g(the)e(mo)r(del)i(with)g(this)606
4933 y(appro)n(ximation.)p eop
%%Page: 8 8
8 7 bop 523 241 a Fn(8)237 b(P)n(aul)27 b(Cro)n(wley)f(and)g(Stefan)g
(Luc)n(ks)523 457 y Fr(attac)n(k.)h(Again,)h(this)g(sho)n(ws)f(that)i
(while)f(a)g(substan)n(tial)f(source)g(of)h(bias)g(has)g(b)r(een)g
(iden-)523 556 y(ti\014ed,)e(there)e(is)h(still)g(a)f(bias)h(of)g
(3.66\045)e(y)n(et)i(to)g(b)r(e)g(accoun)n(ted)f(for.)g(Scott)h
(Fluhrer)g(has)f(re-)523 656 y(p)r(orted)g(\014nding)g(this)h(attac)n
(k)e(e\013ectiv)n(e)h(in)g(exp)r(erimen)n(ts)g(against)f(the)h(full)h
(LEVIA)-7 b(THAN)523 756 y(with)28 b Fi(n)23 b Fr(=)g(32)p
Fi(;)14 b(h)21 b Fr(=)i(16.)523 1005 y Fk(5)112 b(Conclusions)523
1188 y Fr(W)-7 b(e)28 b(ha)n(v)n(e)e(sho)n(wn)h(t)n(w)n(o)f(forms)h(of)
g(bias)g(in)h(the)f(output)h(of)g(the)f(LEVIA)-7 b(THAN)29
b(k)n(eystream)523 1288 y(generator,)22 b(either)i(of)g(whic)n(h)g
(distinguish)h(it)f(from)g(a)g(random)f(function)i(with)g(2)3076
1258 y Fq(36)3170 1288 y Fr(kno)n(wn)523 1388 y(b)n(ytes)36
b(of)h(output;)g(w)n(e)f(ha)n(v)n(e)f(not)i(as)e(y)n(et)i(found)f(a)g
(w)n(a)n(y)g(to)g(reco)n(v)n(er)e(k)n(ey)i(material)f(us-)523
1487 y(ing)d(these)f(distinguishers.)g(These)h(distinguishers)f(can)g
(b)r(oth)h(b)r(e)g(applied)g(to)f(the)i(same)523 1587
y(p)r(ortion)28 b(of)h(k)n(eystream)e(for)i(greater)e(statistical)h
(signi\014cance.)g(Both)g(mak)n(e)g(use)h(of)g(com-)523
1687 y(pression)d(in)i(the)g(P)n(airCom)e(function.)648
1786 y(Despite)31 b(these)h(attac)n(ks,)e(LEVIA)-7 b(THAN)32
b(demonstrates)e(that)h(a)g(tree-based)f(cipher)523 1886
y(could)38 b(o\013er)h(man)n(y)f(adv)-5 b(an)n(tages.)36
b(It)j(is)g(to)f(b)r(e)h(hop)r(ed)g(that)g(similar)f(designs,)g
(o\013ering)523 1986 y(the)d(same)f(sp)r(eed)h(and)g(\015exibilit)n(y)g
(but)g(resistan)n(t)f(to)g(this)h(and)g(other)f(attac)n(ks,)g(will)h(b)
r(e)523 2085 y(forthcoming.)523 2335 y Fk(Ac)m(kno)m(wledgemen)m(ts)523
2518 y Fr(Thanks)h(to)g(R)r(\177)-44 b(udiger)35 b(W)-7
b(eis)37 b(for)e(helpful)i(commen)n(tary)e(and)h(suggestions,)f(and)h
(to)g(the)523 2618 y(LEVIA)-7 b(THAN)32 b(authors)f(for)f(pro)n(viding)
g(an)h(implemen)n(tation)h(of)f(the)h(\014rst)f(exp)r(erimen)n(t)523
2717 y(and)c(for)h(useful)g(discussion.)523 2967 y Fk(References)523
3138 y Fn(1.)42 b(Oded)34 b(Goldreic)n(h,)h(Sha\014)f(Goldw)n(asser,)i
(and)e(Silvio)h(Micali.)62 b(Ho)n(w)34 b(to)h(construct)f(random)624
3229 y(functions.)h Fb(Journal)28 b(of)g(the)g(A)n(CM)p
Fn(,)e(33\(4\):792{807,)k(1986.)523 3317 y(2.)42 b(IP)62
b(securit)n(y)g(proto)r(col)i(\(ipsec\).)143 b Fl(h)n
(ttp://www.ietf.org/h)n(tml.c)n(harters/ipsec-)624 3408
y(c)n(harter.h)n(tml)p Fn(.)523 3495 y(3.)42 b(Helger)21
b(Lipmaa,)g(Philip)g(Roga)n(w)n(a)n(y)-6 b(,)21 b(and)f(Da)n(vid)g(W)-6
b(agner.)25 b(Commen)n(ts)c(to)g(NIST)e(concerning)624
3587 y(AES)25 b(mo)r(des)i(of)f(op)r(eration:)h(CTR-mo)r(de)f
(encryption,)f(2000.)523 3674 y(4.)42 b(Da)n(vid)18 b(A.)h(McGrew.)24
b(Re:)19 b(P)n(ossible)h(problems)f(with)g(leviathan?)k(P)n(ersonal)e
(email,)f(No)n(v)n(em)n(b)r(er)624 3765 y(2000.)523 3853
y(5.)42 b(Da)n(vid)21 b(A.)g(McGrew)h(and)f(Scott)g(R.)g(Fluhrer.)27
b(The)22 b(stream)g(cipher)f(LEVIA)-6 b(THAN.)25 b(NESSIE)624
3944 y(pro)t(ject)i(submission,)g(Octob)r(er)e(2000.)523
4031 y(6.)42 b(NESSIE:)62 b(New)g(Europ)r(ean)g(sc)n(hemes)g(for)h
(signatures,)g(in)n(tegrit)n(y)-6 b(,)62 b(and)f(encryption.)624
4123 y Fl(h)n(ttp://www.cryptonessie.org/)p Fn(.)523
4210 y(7.)42 b(Phillip)19 b(Roga)n(w)n(a)n(y)g(and)f(Don)g(Copp)r
(ersmith.)23 b(A)18 b(soft)n(w)n(are-optimized)i(encryption)e
(algorithm.)624 4301 y(In)26 b(Ross)h(Anderson,)f(editor,)h
Fb(F)-6 b(ast)29 b(Softwar)l(e)h(Encryption)p Fn(,)e(pages)f(56{63.)i
(Springer-V)-6 b(erlag,)624 4393 y(1994.)523 4480 y(8.)42
b(P)n(aul)28 b(C.)g(v)l(an)f(Oorsc)n(hot)h(and)f(Mic)n(hael)i(J.)f
(Wiener.)40 b(P)n(arallel)30 b(collision)f(searc)n(h)f(with)g(crypt-)
624 4571 y(analytic)f(applications.)35 b Fb(Journal)29
b(of)e(Cryptolo)l(gy)p Fn(,)h(12\(1\):1{28,)g(1999.)523
4659 y(9.)42 b(Da)n(vid)17 b(Wheeler.)22 b(A)17 b(bulk)f(data)i
(encryption)f(algorithm.)22 b(In)17 b(Bart)h(Preneel,)h(editor,)f
Fb(F)-6 b(ast)21 b(Soft-)624 4750 y(war)l(e)28 b(Encryption:)g(Se)l(c)l
(ond)h(International)f(Workshop)p Fn(,)f(v)n(olume)e(1008)i(of)f
Fb(L)l(e)l(ctur)l(e)j(Notes)f(in)624 4841 y(Computer)h(Scienc)l(e)p
Fn(,)f(Leuv)n(en,)d(Belgium,)j(14{16)f(Decem)n(b)r(er)f(1994.)i
(Springer-V)-6 b(erlag.)36 b(Pub-)624 4933 y(lished)26
b(1995.)p eop
%%Page: 9 9
9 8 bop 1756 241 a Fn(Bias)27 b(in)f(the)f(LEVIA)-6 b(THAN)23
b(Stream)j(Cipher)238 b(9)648 457 y Fr(URL)28 b(for)f(this)g(pap)r(er:)
h Fa(h)m(ttp://www.ciphergoth.org/crypto/leviathan)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
